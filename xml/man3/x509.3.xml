<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>x509.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>x509</refname>
<refpurpose>Certificate display and signing utility</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis format="linespecific"><emphasis role="bold">openssl</emphasis> <emphasis role="bold">x509</emphasis>
[<emphasis role="bold">-inform DER|PEM|NET</emphasis>]
[<emphasis role="bold">-outform DER|PEM|NET</emphasis>]
[<emphasis role="bold">-keyform DER|PEM</emphasis>]
[<emphasis role="bold">-CAform DER|PEM</emphasis>]
[<emphasis role="bold">-CAkeyform DER|PEM</emphasis>]
[<emphasis role="bold">-in filename</emphasis>]
[<emphasis role="bold">-out filename</emphasis>]
[<emphasis role="bold">-serial</emphasis>]
[<emphasis role="bold">-hash</emphasis>]
[<emphasis role="bold">-subject_hash</emphasis>]
[<emphasis role="bold">-issuer_hash</emphasis>]
[<emphasis role="bold">-ocspid</emphasis>]
[<emphasis role="bold">-subject</emphasis>]
[<emphasis role="bold">-issuer</emphasis>]
[<emphasis role="bold">-nameopt option</emphasis>]
[<emphasis role="bold">-email</emphasis>]
[<emphasis role="bold">-ocsp_uri</emphasis>]
[<emphasis role="bold">-startdate</emphasis>]
[<emphasis role="bold">-enddate</emphasis>]
[<emphasis role="bold">-purpose</emphasis>]
[<emphasis role="bold">-dates</emphasis>]
[<emphasis role="bold">-checkend num</emphasis>]
[<emphasis role="bold">-modulus</emphasis>]
[<emphasis role="bold">-pubkey</emphasis>]
[<emphasis role="bold">-fingerprint</emphasis>]
[<emphasis role="bold">-alias</emphasis>]
[<emphasis role="bold">-noout</emphasis>]
[<emphasis role="bold">-trustout</emphasis>]
[<emphasis role="bold">-clrtrust</emphasis>]
[<emphasis role="bold">-clrreject</emphasis>]
[<emphasis role="bold">-addtrust arg</emphasis>]
[<emphasis role="bold">-addreject arg</emphasis>]
[<emphasis role="bold">-setalias arg</emphasis>]
[<emphasis role="bold">-days arg</emphasis>]
[<emphasis role="bold">-set_serial n</emphasis>]
[<emphasis role="bold">-signkey filename</emphasis>]
[<emphasis role="bold">-passin arg</emphasis>]
[<emphasis role="bold">-x509toreq</emphasis>]
[<emphasis role="bold">-req</emphasis>]
[<emphasis role="bold">-CA filename</emphasis>]
[<emphasis role="bold">-CAkey filename</emphasis>]
[<emphasis role="bold">-CAcreateserial</emphasis>]
[<emphasis role="bold">-CAserial filename</emphasis>]
[<emphasis role="bold">-force_pubkey key</emphasis>]
[<emphasis role="bold">-text</emphasis>]
[<emphasis role="bold">-certopt option</emphasis>]
[<emphasis role="bold">-C</emphasis>]
[<emphasis role="bold">-md2|-md5|-sha1|-mdc2</emphasis>]
[<emphasis role="bold">-clrext</emphasis>]
[<emphasis role="bold">-extfile filename</emphasis>]
[<emphasis role="bold">-extensions section</emphasis>]
[<emphasis role="bold">-engine id</emphasis>]</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="sources.openssl.doc.apps.x509.pod:DESCRIPTION"><title>DESCRIPTION</title>
    <para>
      The <emphasis role="bold">x509</emphasis> command is a multi purpose
      certificate utility. It can be used to display certificate
      information, convert certificates to various forms, sign certificate
      requests like a "mini CA" or edit certificate trust settings.
    </para>
    <para>
      Since there are a large number of options they will split up into
      various sections.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.x509.pod:OPTIONS"><title>OPTIONS</title>
    <refsection xml:id="sources.openssl.doc.apps.x509.pod:INPUT_OUTPUT_AND_GENERAL_PURPOSE_OPTIONS"><title>INPUT, OUTPUT AND GENERAL PURPOSE OPTIONS</title>
      <para>
        <variablelist>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-inform_DERPEMNET"/><emphasis role="bold">-inform DER|PEM|NET</emphasis></term>
            <listitem>
              <para>
		This specifies the input format normally the command will
		expect an X509 certificate but this can change if other
		options such as <emphasis role="bold">-req</emphasis> are
		present. The DER format is the DER encoding of the
		certificate and PEM is the base64 encoding of the DER
		encoding with header and footer lines added. The NET option
		is an obscure Netscape server format that is now obsolete.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-outform_DERPEMNET"/><emphasis role="bold">-outform DER|PEM|NET</emphasis></term>
            <listitem>
              <para>
		This specifies the output format, the options have the same
		meaning as the <emphasis role="bold">-inform</emphasis>
		option. 
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-in_filename"/><emphasis role="bold">-in filename</emphasis></term>
            <listitem>
              <para>
		This specifies the input filename to read a certificate
		from or standard input if this option is not specified.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-out_filename"/><emphasis role="bold">-out filename</emphasis></term>
            <listitem>
              <para>
		This specifies the output filename to write to or standard
		output by default.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-md2-md5-sha1-mdc2"/><emphasis role="bold">-md2|-md5|-sha1|-mdc2</emphasis></term>
            <listitem>
              <para>
		the digest to use. This affects any signing or display
		option that uses a message digest, such as the <emphasis role="bold">-fingerprint</emphasis>, <emphasis role="bold">-signkey</emphasis> and <emphasis role="bold">-CA</emphasis> options. If not specified then
		SHA1 is used. If the key being used to sign with is a DSA
		key then this option has no effect: SHA1 is always used
		with DSA keys.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-engine_id"/><emphasis role="bold">-engine id</emphasis></term>
            <listitem>
              <para>
		specifying an engine (by its unique <emphasis role="bold">id</emphasis> string) will cause <emphasis role="bold">x509</emphasis> to attempt to obtain a
		functional reference to the specified engine, thus
		initialising it if needed. The engine will then be set as
		the default for all available algorithms.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </para>
    </refsection>
    <refsection xml:id="sources.openssl.doc.apps.x509.pod:DISPLAY_OPTIONS"><title>DISPLAY OPTIONS</title>
      <para>
	Note: the <emphasis role="bold">-alias</emphasis> and <emphasis role="bold">-purpose</emphasis> options are also display options
	but are described in the <emphasis role="bold">TRUST
	SETTINGS</emphasis> section.
      </para>
      <para>
        <variablelist>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-text"/><emphasis role="bold">-text</emphasis></term>
            <listitem>
              <para>
		prints out the certificate in text form. Full details are
		output including the public key, signature algorithms,
		issuer and subject names, serial number any extensions
		present and any trust settings.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-certopt_option"/><emphasis role="bold">-certopt option</emphasis></term>
            <listitem>
              <para>
		customise the output format used with <emphasis role="bold">-text</emphasis>. The <emphasis role="bold">option</emphasis> argument can be a single
		option or multiple options separated by commas. The
		<emphasis role="bold">-certopt</emphasis> switch may be
		also be used more than once to set multiple options. See
		the <emphasis role="bold">TEXT OPTIONS</emphasis> section
		for more information.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-noout"/><emphasis role="bold">-noout</emphasis></term>
            <listitem>
              <para>
		this option prevents output of the encoded version of the
		request.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-pubkey"/><emphasis role="bold">-pubkey</emphasis></term>
            <listitem>
              <para>
		outputs the the certificate's SubjectPublicKeyInfo block in
		PEM format.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-modulus"/><emphasis role="bold">-modulus</emphasis></term>
            <listitem>
              <para>
		this option prints out the value of the modulus of the
		public key contained in the certificate.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-serial"/><emphasis role="bold">-serial</emphasis></term>
            <listitem>
              <para>
		outputs the certificate serial number.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-subject_hash"/><emphasis role="bold">-subject_hash</emphasis></term>
            <listitem>
              <para>
		outputs the "hash" of the certificate subject name. This is
		used in OpenSSL to form an index to allow certificates in a
		directory to be looked up by subject name.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-issuer_hash"/><emphasis role="bold">-issuer_hash</emphasis></term>
            <listitem>
              <para>
		outputs the "hash" of the certificate issuer name.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-ocspid"/><emphasis role="bold">-ocspid</emphasis></term>
            <listitem>
              <para>
		outputs the OCSP hash values for the subject name and
		public key.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-hash"/><emphasis role="bold">-hash</emphasis></term>
            <listitem>
              <para>
		synonym for "-subject_hash" for backward compatibility
		reasons.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-subject_hash_old"/><emphasis role="bold">-subject_hash_old</emphasis></term>
            <listitem>
              <para>
		outputs the "hash" of the certificate subject name using
		the older algorithm as used by OpenSSL versions before
		1.0.0.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-issuer_hash_old"/><emphasis role="bold">-issuer_hash_old</emphasis></term>
            <listitem>
              <para>
		outputs the "hash" of the certificate issuer name using the
		older algorithm as used by OpenSSL versions before 1.0.0.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-subject"/><emphasis role="bold">-subject</emphasis></term>
            <listitem>
              <para>
		outputs the subject name.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-issuer"/><emphasis role="bold">-issuer</emphasis></term>
            <listitem>
              <para>
		outputs the issuer name.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-nameopt_option"/><emphasis role="bold">-nameopt option</emphasis></term>
            <listitem>
              <para>
		option which determines how the subject or issuer names are
		displayed. The <emphasis role="bold">option</emphasis>
		argument can be a single option or multiple options
		separated by commas.  Alternatively the <emphasis role="bold">-nameopt</emphasis> switch may be used more
		than once to set multiple options. See the <emphasis role="bold">NAME OPTIONS</emphasis> section for more
		information.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-email"/><emphasis role="bold">-email</emphasis></term>
            <listitem>
              <para>
		outputs the email address(es) if any.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-ocsp_uri"/><emphasis role="bold">-ocsp_uri</emphasis></term>
            <listitem>
              <para>
		outputs the OCSP responder address(es) if any.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-startdate"/><emphasis role="bold">-startdate</emphasis></term>
            <listitem>
              <para>
		prints out the start date of the certificate, that is the
		notBefore date.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-enddate"/><emphasis role="bold">-enddate</emphasis></term>
            <listitem>
              <para>
		prints out the expiry date of the certificate, that is the
		notAfter date.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-dates"/><emphasis role="bold">-dates</emphasis></term>
            <listitem>
              <para>
		prints out the start and expiry dates of a certificate.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-checkend_arg"/><emphasis role="bold">-checkend arg</emphasis></term>
            <listitem>
              <para>
		checks if the certificate expires within the next <emphasis role="bold">arg</emphasis> seconds and exits non-zero if
		yes it will expire or zero if not.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-fingerprint"/><emphasis role="bold">-fingerprint</emphasis></term>
            <listitem>
              <para>
		prints out the digest of the DER encoded version of the
		whole certificate (see digest options).
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-C"/><emphasis role="bold">-C</emphasis></term>
            <listitem>
              <para>
		this outputs the certificate in the form of a C source
		file.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </para>
    </refsection>
    <refsection xml:id="sources.openssl.doc.apps.x509.pod:TRUST_SETTINGS"><title>TRUST SETTINGS</title>
      <para>
	Please note these options are currently experimental and may well
	change.
      </para>
      <para>
	A <emphasis role="bold">trusted certificate</emphasis> is an
	ordinary certificate which has several additional pieces of
	information attached to it such as the permitted and prohibited
	uses of the certificate and an "alias".
      </para>
      <para>
	Normally when a certificate is being verified at least one
	certificate must be "trusted". By default a trusted certificate
	must be stored locally and must be a root CA: any certificate chain
	ending in this CA is then usable for any purpose.
      </para>
      <para>
	Trust settings currently are only used with a root CA. They allow a
	finer control over the purposes the root CA can be used for. For
	example a CA may be trusted for SSL client but not SSL server use.
      </para>
      <para>
	See the description of the <emphasis role="bold">verify</emphasis>
	utility for more information on the meaning of trust settings.
      </para>
      <para>
	Future versions of OpenSSL will recognize trust settings on any
	certificate: not just root CAs.
      </para>
      <screen></screen>
      <para>
        <variablelist>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-trustout"/><emphasis role="bold">-trustout</emphasis></term>
            <listitem>
              <para>
		this causes <emphasis role="bold">x509</emphasis> to output
		a <emphasis role="bold">trusted</emphasis> certificate. An
		ordinary or trusted certificate can be input but by default
		an ordinary certificate is output and any trust settings
		are discarded. With the <emphasis role="bold">-trustout</emphasis> option a trusted
		certificate is output. A trusted certificate is
		automatically output if any trust settings are modified.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-setalias_arg"/><emphasis role="bold">-setalias arg</emphasis></term>
            <listitem>
              <para>
		sets the alias of the certificate. This will allow the
		certificate to be referred to using a nickname for example
		"Steve's Certificate".
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-alias"/><emphasis role="bold">-alias</emphasis></term>
            <listitem>
              <para>
		outputs the certificate alias, if any.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-clrtrust"/><emphasis role="bold">-clrtrust</emphasis></term>
            <listitem>
              <para>
		clears all the permitted or trusted uses of the
		certificate.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-clrreject"/><emphasis role="bold">-clrreject</emphasis></term>
            <listitem>
              <para>
		clears all the prohibited or rejected uses of the
		certificate.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-addtrust_arg"/><emphasis role="bold">-addtrust arg</emphasis></term>
            <listitem>
              <para>
		adds a trusted certificate use. Any object name can be used
		here but currently only <emphasis role="bold">clientAuth</emphasis> (SSL client use),
		<emphasis role="bold">serverAuth</emphasis> (SSL server
		use) and <emphasis role="bold">emailProtection</emphasis>
		(S/MIME email) are used. Other OpenSSL applications may
		define additional uses.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-addreject_arg"/><emphasis role="bold">-addreject arg</emphasis></term>
            <listitem>
              <para>
		adds a prohibited use. It accepts the same values as the
		<emphasis role="bold">-addtrust</emphasis> option.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-purpose"/><emphasis role="bold">-purpose</emphasis></term>
            <listitem>
              <para>
		this option performs tests on the certificate extensions
		and outputs the results. For a more complete description
		see the <emphasis role="bold">CERTIFICATE
		EXTENSIONS</emphasis> section.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </para>
    </refsection>
    <refsection xml:id="sources.openssl.doc.apps.x509.pod:SIGNING_OPTIONS"><title>SIGNING OPTIONS</title>
      <para>
	The <emphasis role="bold">x509</emphasis> utility can be used to
	sign certificates and requests: it can thus behave like a "mini
	CA".
      </para>
      <para>
        <variablelist>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-signkey_filename"/><emphasis role="bold">-signkey filename</emphasis></term>
            <listitem>
              <para>
		this option causes the input file to be self signed using
		the supplied private key.
              </para>
              <para>
		If the input file is a certificate it sets the issuer name
		to the subject name (i.e.  makes it self signed) changes
		the public key to the supplied value and changes the start
		and end dates. The start date is set to the current time
		and the end date is set to a value determined by the
		<emphasis role="bold">-days</emphasis> option. Any
		certificate extensions are retained unless the <emphasis role="bold">-clrext</emphasis> option is supplied.
              </para>
              <para>
		If the input is a certificate request then a self signed
		certificate is created using the supplied private key using
		the subject name in the request.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-passin_arg"/><emphasis role="bold">-passin arg</emphasis></term>
            <listitem>
              <para>
		the key password source. For more information about the
		format of <emphasis role="bold">arg</emphasis> see the
		<emphasis role="bold">PASS PHRASE ARGUMENTS</emphasis>
		section in openssl(1).
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-clrext"/><emphasis role="bold">-clrext</emphasis></term>
            <listitem>
              <para>
		delete any extensions from a certificate. This option is
		used when a certificate is being created from another
		certificate (for example with the <emphasis role="bold">-signkey</emphasis> or the <emphasis role="bold">-CA</emphasis> options). Normally all
		extensions are retained.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-keyform_PEMDER"/><emphasis role="bold">-keyform PEM|DER</emphasis></term>
            <listitem>
              <para>
		specifies the format (DER or PEM) of the private key file
		used in the <emphasis role="bold">-signkey</emphasis>
		option.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-days_arg"/><emphasis role="bold">-days arg</emphasis></term>
            <listitem>
              <para>
		specifies the number of days to make a certificate valid
		for. The default is 30 days.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-x509toreq"/><emphasis role="bold">-x509toreq</emphasis></term>
            <listitem>
              <para>
		converts a certificate into a certificate request. The
		<emphasis role="bold">-signkey</emphasis> option is used to
		pass the required private key.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-req"/><emphasis role="bold">-req</emphasis></term>
            <listitem>
              <para>
		by default a certificate is expected on input. With this
		option a certificate request is expected instead.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-set_serial_n"/><emphasis role="bold">-set_serial n</emphasis></term>
            <listitem>
              <para>
		specifies the serial number to use. This option can be used
		with either the <emphasis role="bold">-signkey</emphasis>
		or <emphasis role="bold">-CA</emphasis> options. If used in
		conjunction with the <emphasis role="bold">-CA</emphasis>
		option the serial number file (as specified by the
		<emphasis role="bold">-CAserial</emphasis> or <emphasis role="bold">-CAcreateserial</emphasis> options) is not
		used.
              </para>
              <para>
		The serial number can be decimal or hex (if preceded by
		<emphasis role="bold">0x</emphasis>).
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-CA_filename"/><emphasis role="bold">-CA filename</emphasis></term>
            <listitem>
              <para>
		specifies the CA certificate to be used for signing. When
		this option is present <emphasis role="bold">x509</emphasis> behaves like a "mini CA". The
		input file is signed by this CA using this option: that is
		its issuer name is set to the subject name of the CA and it
		is digitally signed using the CAs private key.
              </para>
              <para>
		This option is normally combined with the <emphasis role="bold">-req</emphasis> option. Without the <emphasis role="bold">-req</emphasis> option the input is a
		certificate which must be self signed.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-CAkey_filename"/><emphasis role="bold">-CAkey filename</emphasis></term>
            <listitem>
              <para>
		sets the CA private key to sign a certificate with. If this
		option is not specified then it is assumed that the CA
		private key is present in the CA certificate file.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-CAserial_filename"/><emphasis role="bold">-CAserial filename</emphasis></term>
            <listitem>
              <para>
		sets the CA serial number file to use.
              </para>
              <para>
		When the <emphasis role="bold">-CA</emphasis> option is
		used to sign a certificate it uses a serial number
		specified in a file. This file consist of one line
		containing an even number of hex digits with the serial
		number to use. After each use the serial number is
		incremented and written out to the file again.
              </para>
              <para>
		The default filename consists of the CA certificate file
		base name with ".srl" appended. For example if the CA
		certificate file is called "mycacert.pem" it expects to
		find a serial number file called "mycacert.srl". 
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-CAcreateserial"/><emphasis role="bold">-CAcreateserial</emphasis></term>
            <listitem>
              <para>
		with this option the CA serial number file is created if it
		does not exist: it will contain the serial number "02" and
		the certificate being signed will have the 1 as its serial
		number. If the <emphasis role="bold">-CA</emphasis> option
		is specified and the serial number file does not exist a
		random number is generated; this is the recommended
		practice.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-extfile_filename"/><emphasis role="bold">-extfile filename</emphasis></term>
            <listitem>
              <para>
		file containing certificate extensions to use. If not
		specified then no extensions are added to the certificate.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-extensions_section"/><emphasis role="bold">-extensions section</emphasis></term>
            <listitem>
              <para>
		the section to add certificate extensions from. If this
		option is not specified then the extensions should either
		be contained in the unnamed (default) section or the
		default section should contain a variable called
		"extensions" which contains the section to use. See the
		x509v3_config(5) manual page for details of the extension
		section format.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:-force_pubkey_key"/><emphasis role="bold">-force_pubkey key</emphasis></term>
            <listitem>
              <para>
		when a certificate is created set its public key to
		<emphasis role="bold">key</emphasis> instead of the key in
		the certificate or certificate request. This option is
		useful for creating certificates where the algorithm can't
		normally sign requests, for example DH.
              </para>
              <para>
		The format or <emphasis role="bold">key</emphasis> can be
		specified using the <emphasis role="bold">-keyform</emphasis> option.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </para>
    </refsection>
    <refsection xml:id="sources.openssl.doc.apps.x509.pod:NAME_OPTIONS"><title>NAME OPTIONS</title>
      <para>
	The <emphasis role="bold">nameopt</emphasis> command line switch
	determines how the subject and issuer names are displayed. If no
	<emphasis role="bold">nameopt</emphasis> switch is present the
	default "oneline" format is used which is compatible with previous
	versions of OpenSSL. Each option is described in detail below, all
	options can be preceded by a <emphasis role="bold">-</emphasis> to
	turn the option off. Only the first four will normally be used.
      </para>
      <para>
        <variablelist>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:compat"/><emphasis role="bold">compat</emphasis></term>
            <listitem>
              <para>
		use the old format. This is equivalent to specifying no
		name options at all.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:RFC2253"/><emphasis role="bold">RFC2253</emphasis></term>
            <listitem>
              <para>
		displays names compatible with RFC2253 equivalent to
		<emphasis role="bold">esc_2253</emphasis>, <emphasis role="bold">esc_ctrl</emphasis>, <emphasis role="bold">esc_msb</emphasis>, <emphasis role="bold">utf8</emphasis>, <emphasis role="bold">dump_nostr</emphasis>, <emphasis role="bold">dump_unknown</emphasis>, <emphasis role="bold">dump_der</emphasis>, <emphasis role="bold">sep_comma_plus</emphasis>, <emphasis role="bold">dn_rev</emphasis> and <emphasis role="bold">sname</emphasis>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:oneline"/><emphasis role="bold">oneline</emphasis></term>
            <listitem>
              <para>
		a oneline format which is more readable than RFC2253. It is
		equivalent to specifying the  <emphasis role="bold">esc_2253</emphasis>, <emphasis role="bold">esc_ctrl</emphasis>, <emphasis role="bold">esc_msb</emphasis>, <emphasis role="bold">utf8</emphasis>, <emphasis role="bold">dump_nostr</emphasis>, <emphasis role="bold">dump_der</emphasis>, <emphasis role="bold">use_quote</emphasis>, <emphasis role="bold">sep_comma_plus_space</emphasis>, <emphasis role="bold">space_eq</emphasis> and <emphasis role="bold">sname</emphasis> options.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:multiline"/><emphasis role="bold">multiline</emphasis></term>
            <listitem>
              <para>
		a multiline format. It is equivalent <emphasis role="bold">esc_ctrl</emphasis>, <emphasis role="bold">esc_msb</emphasis>, <emphasis role="bold">sep_multiline</emphasis>, <emphasis role="bold">space_eq</emphasis>, <emphasis role="bold">lname</emphasis> and <emphasis role="bold">align</emphasis>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:esc_2253"/><emphasis role="bold">esc_2253</emphasis></term>
            <listitem>
              <para>
		escape the "special" characters required by RFC2253 in a
		field That is <emphasis role="bold">,+"&lt;&gt;;</emphasis>. Additionally <emphasis role="bold">#</emphasis> is escaped at the beginning of a
		string and a space character at the beginning or end of a
		string.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:esc_ctrl"/><emphasis role="bold">esc_ctrl</emphasis></term>
            <listitem>
              <para>
		escape control characters. That is those with ASCII values
		less than 0x20 (space) and the delete (0x7f) character.
		They are escaped using the RFC2253 \XX notation (where XX
		are two hex digits representing the character value).
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:esc_msb"/><emphasis role="bold">esc_msb</emphasis></term>
            <listitem>
              <para>
		escape characters with the MSB set, that is with ASCII
		values larger than 127.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:use_quote"/><emphasis role="bold">use_quote</emphasis></term>
            <listitem>
              <para>
		escapes some characters by surrounding the whole string
		with <emphasis role="bold">"</emphasis> characters, without
		the option all escaping is done with the <emphasis role="bold">\</emphasis> character.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:utf8"/><emphasis role="bold">utf8</emphasis></term>
            <listitem>
              <para>
		convert all strings to UTF8 format first. This is required
		by RFC2253. If you are lucky enough to have a UTF8
		compatible terminal then the use of this option (and
		<emphasis role="bold">not</emphasis> setting <emphasis role="bold">esc_msb</emphasis>) may result in the correct
		display of multibyte (international) characters. Is this
		option is not present then multibyte characters larger than
		0xff will be represented using the format \UXXXX for 16
		bits and \WXXXXXXXX for 32 bits. Also if this option is off
		any UTF8Strings will be converted to their character form
		first.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:ignore_type"/><emphasis role="bold">ignore_type</emphasis></term>
            <listitem>
              <para>
		this option does not attempt to interpret multibyte
		characters in any way. That is their content octets are
		merely dumped as though one octet represents each
		character. This is useful for diagnostic purposes but will
		result in rather odd looking output.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:show_type"/><emphasis role="bold">show_type</emphasis></term>
            <listitem>
              <para>
		show the type of the ASN1 character string. The type
		precedes the field contents. For example "BMPSTRING: Hello
		World".
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:dump_der"/><emphasis role="bold">dump_der</emphasis></term>
            <listitem>
              <para>
		when this option is set any fields that need to be
		hexdumped will be dumped using the DER encoding of the
		field. Otherwise just the content octets will be displayed.
		Both options use the RFC2253 <emphasis role="bold">#XXXX...</emphasis> format.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:dump_nostr"/><emphasis role="bold">dump_nostr</emphasis></term>
            <listitem>
              <para>
		dump non character string types (for example OCTET STRING)
		if this option is not set then non character string types
		will be displayed as though each content octet represents a
		single character.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:dump_all"/><emphasis role="bold">dump_all</emphasis></term>
            <listitem>
              <para>
		dump all fields. This option when used with <emphasis role="bold">dump_der</emphasis> allows the DER encoding of
		the structure to be unambiguously determined.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:dump_unknown"/><emphasis role="bold">dump_unknown</emphasis></term>
            <listitem>
              <para>
		dump any field whose OID is not recognised by OpenSSL.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:sep_comma_plus_sep_comma_plus_space_sep_semi_plus_spacesep_multiline"/><emphasis role="bold">sep_comma_plus</emphasis>, <emphasis role="bold">sep_comma_plus_space</emphasis>, <emphasis role="bold">sep_semi_plus_space</emphasis>,
<emphasis role="bold">sep_multiline</emphasis></term>
            <listitem>
              <para>
		these options determine the field separators. The first
		character is between RDNs and the second between multiple
		AVAs (multiple AVAs are very rare and their use is
		discouraged). The options ending in "space" additionally
		place a space after the separator to make it more readable.
		The <emphasis role="bold">sep_multiline</emphasis> uses a
		linefeed character for the RDN separator and a spaced
		<emphasis role="bold">+</emphasis> for the AVA separator.
		It also indents the fields by four characters.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:dn_rev"/><emphasis role="bold">dn_rev</emphasis></term>
            <listitem>
              <para>
		reverse the fields of the DN. This is required by RFC2253.
		As a side effect this also reverses the order of multiple
		AVAs but this is permissible.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:nofname_sname_lname_oid"/><emphasis role="bold">nofname</emphasis>, <emphasis role="bold">sname</emphasis>, <emphasis role="bold">lname</emphasis>, <emphasis role="bold">oid</emphasis></term>
            <listitem>
              <para>
		these options alter how the field name is displayed.
		<emphasis role="bold">nofname</emphasis> does not display
		the field at all. <emphasis role="bold">sname</emphasis>
		uses the "short name" form (CN for commonName for example).
		<emphasis role="bold">lname</emphasis> uses the long form.
		<emphasis role="bold">oid</emphasis> represents the OID in
		numerical form and is useful for diagnostic purpose.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:align"/><emphasis role="bold">align</emphasis></term>
            <listitem>
              <para>
		align field values for a more readable output. Only usable
		with <emphasis role="bold">sep_multiline</emphasis>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:space_eq"/><emphasis role="bold">space_eq</emphasis></term>
            <listitem>
              <para>
		places spaces round the <emphasis role="bold">=</emphasis>
		character which follows the field name.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </para>
    </refsection>
    <refsection xml:id="sources.openssl.doc.apps.x509.pod:TEXT_OPTIONS"><title>TEXT OPTIONS</title>
      <para>
	As well as customising the name output format, it is also possible
	to customise the actual fields printed using the <emphasis role="bold">certopt</emphasis> options when the <emphasis role="bold">text</emphasis> option is present. The default
	behaviour is to print all fields.
      </para>
      <para>
        <variablelist>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:compatible"/><emphasis role="bold">compatible</emphasis></term>
            <listitem>
              <para>
		use the old format. This is equivalent to specifying no
		output options at all.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:no_header"/><emphasis role="bold">no_header</emphasis></term>
            <listitem>
              <para>
		don't print header information: that is the lines saying
		"Certificate" and "Data".
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:no_version"/><emphasis role="bold">no_version</emphasis></term>
            <listitem>
              <para>
		don't print out the version number.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:no_serial"/><emphasis role="bold">no_serial</emphasis></term>
            <listitem>
              <para>
		don't print out the serial number.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:no_signame"/><emphasis role="bold">no_signame</emphasis></term>
            <listitem>
              <para>
		don't print out the signature algorithm used.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:no_validity"/><emphasis role="bold">no_validity</emphasis></term>
            <listitem>
              <para>
		don't print the validity, that is the <emphasis role="bold">notBefore</emphasis> and <emphasis role="bold">notAfter</emphasis> fields.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:no_subject"/><emphasis role="bold">no_subject</emphasis></term>
            <listitem>
              <para>
		don't print out the subject name.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:no_issuer"/><emphasis role="bold">no_issuer</emphasis></term>
            <listitem>
              <para>
		don't print out the issuer name.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:no_pubkey"/><emphasis role="bold">no_pubkey</emphasis></term>
            <listitem>
              <para>
		don't print out the public key.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:no_sigdump"/><emphasis role="bold">no_sigdump</emphasis></term>
            <listitem>
              <para>
		don't give a hexadecimal dump of the certificate signature.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:no_aux"/><emphasis role="bold">no_aux</emphasis></term>
            <listitem>
              <para>
		don't print out certificate trust information.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:no_extensions"/><emphasis role="bold">no_extensions</emphasis></term>
            <listitem>
              <para>
		don't print out any X509V3 extensions.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:ext_default"/><emphasis role="bold">ext_default</emphasis></term>
            <listitem>
              <para>
		retain default extension behaviour: attempt to print out
		unsupported certificate extensions.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:ext_error"/><emphasis role="bold">ext_error</emphasis></term>
            <listitem>
              <para>
		print an error message for unsupported certificate
		extensions.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:ext_parse"/><emphasis role="bold">ext_parse</emphasis></term>
            <listitem>
              <para>
		ASN1 parse unsupported extensions.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:ext_dump"/><emphasis role="bold">ext_dump</emphasis></term>
            <listitem>
              <para>
		hex dump unsupported extensions.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:ca_default"/><emphasis role="bold">ca_default</emphasis></term>
            <listitem>
              <para>
		the value used by the <emphasis role="bold">ca</emphasis>
		utility, equivalent to <emphasis role="bold">no_issuer</emphasis>, <emphasis role="bold">no_pubkey</emphasis>, <emphasis role="bold">no_header</emphasis>, <emphasis role="bold">no_version</emphasis>, <emphasis role="bold">no_sigdump</emphasis> and <emphasis role="bold">no_signame</emphasis>.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </para>
    </refsection>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.x509.pod:EXAMPLES"><title>EXAMPLES</title>
    <para>
      Note: in these examples the '\' means the example should be all on
      one line.
    </para>
    <para>
      Display the contents of a certificate:
    </para>
    <screen>openssl x509 -in cert.pem -noout -text</screen>
    <para>
      Display the certificate serial number:
    </para>
    <screen>openssl x509 -in cert.pem -noout -serial</screen>
    <para>
      Display the certificate subject name:
    </para>
    <screen>openssl x509 -in cert.pem -noout -subject</screen>
    <para>
      Display the certificate subject name in RFC2253 form:
    </para>
    <screen>openssl x509 -in cert.pem -noout -subject -nameopt RFC2253</screen>
    <para>
      Display the certificate subject name in oneline form on a terminal
      supporting UTF8:
    </para>
    <screen>openssl x509 -in cert.pem -noout -subject -nameopt oneline,-esc_msb</screen>
    <para>
      Display the certificate MD5 fingerprint:
    </para>
    <screen>openssl x509 -in cert.pem -noout -fingerprint</screen>
    <para>
      Display the certificate SHA1 fingerprint:
    </para>
    <screen>openssl x509 -sha1 -in cert.pem -noout -fingerprint</screen>
    <para>
      Convert a certificate from PEM to DER format:
    </para>
    <screen>openssl x509 -in cert.pem -inform PEM -out cert.der -outform DER</screen>
    <para>
      Convert a certificate to a certificate request:
    </para>
    <screen>openssl x509 -x509toreq -in cert.pem -out req.pem -signkey key.pem</screen>
    <para>
      Convert a certificate request into a self signed certificate using
      extensions for a CA:
    </para>
    <screen>openssl x509 -req -in careq.pem -extfile openssl.cnf -extensions v3_ca \
       -signkey key.pem -out cacert.pem</screen>
    <para>
      Sign a certificate request using the CA certificate above and add
      user certificate extensions:
    </para>
    <screen>openssl x509 -req -in req.pem -extfile openssl.cnf -extensions v3_usr \
       -CA cacert.pem -CAkey key.pem -CAcreateserial

</screen>
    <para>
      Set a certificate to be trusted for SSL client use and change set its
      alias to "Steve's Class 1 CA"
    </para>
    <screen>openssl x509 -in cert.pem -addtrust clientAuth \
       -setalias "Steve's Class 1 CA" -out trust.pem</screen>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.x509.pod:NOTES"><title>NOTES</title>
    <para>
      The PEM format uses the header and footer lines:
    </para>
    <screen>-----BEGIN CERTIFICATE-----
-----END CERTIFICATE-----</screen>
    <para>
      it will also handle files containing:
    </para>
    <screen>-----BEGIN X509 CERTIFICATE-----
-----END X509 CERTIFICATE-----</screen>
    <para>
      Trusted certificates have the lines
    </para>
    <screen>-----BEGIN TRUSTED CERTIFICATE-----
-----END TRUSTED CERTIFICATE-----</screen>
    <para>
      The conversion to UTF8 format used with the name options assumes that
      T61Strings use the ISO8859-1 character set. This is wrong but
      Netscape and MSIE do this as do many certificates. So although this
      is incorrect it is more likely to display the majority of
      certificates correctly.
    </para>
    <para>
      The <emphasis role="bold">-fingerprint</emphasis> option takes the
      digest of the DER encoded certificate. This is commonly called a
      "fingerprint". Because of the nature of message digests the
      fingerprint of a certificate is unique to that certificate and two
      certificates with the same fingerprint can be considered to be the
      same.
    </para>
    <para>
      The Netscape fingerprint uses MD5 whereas MSIE uses SHA1.
    </para>
    <para>
      The <emphasis role="bold">-email</emphasis> option searches the
      subject name and the subject alternative name extension. Only unique
      email addresses will be printed out: it will not print the same
      address more than once.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.x509.pod:CERTIFICATE_EXTENSIONS"><title>CERTIFICATE EXTENSIONS</title>
    <para>
      The <emphasis role="bold">-purpose</emphasis> option checks the
      certificate extensions and determines what the certificate can be
      used for. The actual checks done are rather complex and include
      various hacks and workarounds to handle broken certificates and
      software.
    </para>
    <para>
      The same code is used when verifying untrusted certificates in chains
      so this section is useful if a chain is rejected by the verify code.
    </para>
    <para>
      The basicConstraints extension CA flag is used to determine whether
      the certificate can be used as a CA. If the CA flag is true then it
      is a CA, if the CA flag is false then it is not a CA. <emphasis role="bold">All</emphasis> CAs should have the CA flag set to true.
    </para>
    <para>
      If the basicConstraints extension is absent then the certificate is
      considered to be a "possible CA" other extensions are checked
      according to the intended use of the certificate. A warning is given
      in this case because the certificate should really not be regarded as
      a CA: however it is allowed to be a CA to work around some broken
      software.
    </para>
    <para>
      If the certificate is a V1 certificate (and thus has no extensions)
      and it is self signed it is also assumed to be a CA but a warning is
      again given: this is to work around the problem of Verisign roots
      which are V1 self signed certificates.
    </para>
    <para>
      If the keyUsage extension is present then additional restraints are
      made on the uses of the certificate. A CA certificate <emphasis role="bold">must</emphasis> have the keyCertSign bit set if the
      keyUsage extension is present.
    </para>
    <para>
      The extended key usage extension places additional restrictions on
      the certificate uses. If this extension is present (whether critical
      or not) the key can only be used for the purposes specified.
    </para>
    <para>
      A complete description of each test is given below. The comments
      about basicConstraints and keyUsage and V1 certificates above apply
      to <emphasis role="bold">all</emphasis> CA certificates.
    </para>
    <screen></screen>
    <para>
      <variablelist>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:SSL_Client"/><emphasis role="bold">SSL Client</emphasis></term>
          <listitem>
            <para>
	      The extended key usage extension must be absent or include
	      the "web client authentication" OID.  keyUsage must be absent
	      or it must have the digitalSignature bit set. Netscape
	      certificate type must be absent or it must have the SSL
	      client bit set.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:SSL_Client_CA"/><emphasis role="bold">SSL Client CA</emphasis></term>
          <listitem>
            <para>
	      The extended key usage extension must be absent or include
	      the "web client authentication" OID. Netscape certificate
	      type must be absent or it must have the SSL CA bit set: this
	      is used as a work around if the basicConstraints extension is
	      absent.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:SSL_Server"/><emphasis role="bold">SSL Server</emphasis></term>
          <listitem>
            <para>
	      The extended key usage extension must be absent or include
	      the "web server authentication" and/or one of the SGC OIDs. 
	      keyUsage must be absent or it must have the digitalSignature,
	      the keyEncipherment set or both bits set. Netscape
	      certificate type must be absent or have the SSL server bit
	      set.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:SSL_Server_CA"/><emphasis role="bold">SSL Server CA</emphasis></term>
          <listitem>
            <para>
	      The extended key usage extension must be absent or include
	      the "web server authentication" and/or one of the SGC OIDs. 
	      Netscape certificate type must be absent or the SSL CA bit
	      must be set: this is used as a work around if the
	      basicConstraints extension is absent.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:Netscape_SSL_Server"/><emphasis role="bold">Netscape SSL Server</emphasis></term>
          <listitem>
            <para>
	      For Netscape SSL clients to connect to an SSL server it must
	      have the keyEncipherment bit set if the keyUsage extension is
	      present. This isn't always valid because some cipher suites
	      use the key for digital signing. Otherwise it is the same as
	      a normal SSL server.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:Common_S.MIME_Client_Tests"/><emphasis role="bold">Common S/MIME Client Tests</emphasis></term>
          <listitem>
            <para>
	      The extended key usage extension must be absent or include
	      the "email protection" OID. Netscape certificate type must be
	      absent or should have the S/MIME bit set. If the S/MIME bit
	      is not set in netscape certificate type then the SSL client
	      bit is tolerated as an alternative but a warning is shown:
	      this is because some Verisign certificates don't set the
	      S/MIME bit.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:S.MIME_Signing"/><emphasis role="bold">S/MIME Signing</emphasis></term>
          <listitem>
            <para>
	      In addition to the common S/MIME client tests the
	      digitalSignature bit must be set if the keyUsage extension is
	      present.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:S.MIME_Encryption"/><emphasis role="bold">S/MIME Encryption</emphasis></term>
          <listitem>
            <para>
	      In addition to the common S/MIME tests the keyEncipherment
	      bit must be set if the keyUsage extension is present.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:S.MIME_CA"/><emphasis role="bold">S/MIME CA</emphasis></term>
          <listitem>
            <para>
	      The extended key usage extension must be absent or include
	      the "email protection" OID. Netscape certificate type must be
	      absent or must have the S/MIME CA bit set: this is used as a
	      work around if the basicConstraints extension is absent.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:CRL_Signing"/><emphasis role="bold">CRL Signing</emphasis></term>
          <listitem>
            <para>
	      The keyUsage extension must be absent or it must have the CRL
	      signing bit set.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.x509.pod:CRL_Signing_CA"/><emphasis role="bold">CRL Signing CA</emphasis></term>
          <listitem>
            <para>
	      The normal CA tests apply. Except in this case the
	      basicConstraints extension must be present.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.x509.pod:BUGS"><title>BUGS</title>
    <para>
      Extensions in certificates are not transferred to certificate
      requests and vice versa.
    </para>
    <para>
      It is possible to produce invalid certificates or requests by
      specifying the wrong private key or using inconsistent options in
      some cases: these should be checked.
    </para>
    <para>
      There should be options to explicitly set such things as start and
      end dates rather than an offset from the current time.
    </para>
    <para>
      The code to implement the verify behaviour described in the <emphasis role="bold">TRUST SETTINGS</emphasis> is currently being developed.
      It thus describes the intended behaviour rather than the current
      behaviour. It is hoped that it will represent reality in OpenSSL
      0.9.5 and later.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.x509.pod:SEE_ALSO"><title>SEE ALSO</title>
    <para>
      req(1), ca(1), genrsa(1), gendsa(1), verify(1), x509v3_config(5)
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.x509.pod:HISTORY"><title>HISTORY</title>
    <para>
      Before OpenSSL 0.9.8, the default digest for RSA keys was MD5.
    </para>
    <para>
      The hash algorithm used in the <emphasis role="bold">-subject_hash</emphasis> and <emphasis role="bold">-issuer_hash</emphasis> options before OpenSSL 1.0.0 was
      based on the deprecated MD5 algorithm and the encoding of the
      distinguished name. In OpenSSL 1.0.0 and later it is based on a
      canonical version of the DN using SHA1. This means that any
      directories using the old form must have their links rebuilt using
      <emphasis role="bold">c_rehash</emphasis> or similar.
    </para>
  </refsection>
</refentry>