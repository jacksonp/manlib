<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>CMS_get0_type.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>CMS_get0_type, CMS_set1_eContentType, CMS_get0_eContentType, CMS_get0_content</refname>
<refpurpose>get and set CMS content types and content</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis>#include &lt;openssl/cms.h&gt;</synopsis>
<synopsis>const ASN1_OBJECT *CMS_get0_type(const CMS_ContentInfo *cms);
int CMS_set1_eContentType(CMS_ContentInfo *cms, const ASN1_OBJECT *oid);
const ASN1_OBJECT *CMS_get0_eContentType(CMS_ContentInfo *cms);
ASN1_OCTET_STRING **CMS_get0_content(CMS_ContentInfo *cms);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="ID-80de69226fb841876c22b79145736915"><title>DESCRIPTION</title>
    <para>
      CMS_get0_type() returns the content type of a CMS_ContentInfo
      structure as and ASN1_OBJECT pointer. An application can then decide
      how to process the CMS_ContentInfo structure based on this value.
    </para>
    <para>
      CMS_set1_eContentType() sets the embedded content type of a
      CMS_ContentInfo structure. It should be called with CMS functions
      with the <emphasis role="bold">CMS_PARTIAL</emphasis> flag and
      <emphasis role="bold">before</emphasis> the structure is finalised,
      otherwise the results are undefined.
    </para>
    <para>
      ASN1_OBJECT *CMS_get0_eContentType() returns a pointer to the
      embedded content type.
    </para>
    <para>
      CMS_get0_content() returns a pointer to the <emphasis role="bold">ASN1_OCTET_STRING</emphasis> pointer containing the
      embedded content.
    </para>
  </refsection>
  <refsection xml:id="ID-f853b6dc78b42db87f47a54aa5c24344"><title>NOTES</title>
    <para>
      As the <emphasis role="bold">0</emphasis> implies CMS_get0_type(),
      CMS_get0_eContentType() and CMS_get0_content() return internal
      pointers which should <emphasis role="bold">not</emphasis> be freed
      up. CMS_set1_eContentType() copies the supplied OID and it <emphasis role="bold">should</emphasis> be freed up after use.
    </para>
    <para>
      The <emphasis role="bold">ASN1_OBJECT</emphasis> values returned can
      be converted to an integer <emphasis role="bold">NID</emphasis> value
      using OBJ_obj2nid(). For the currently supported content types the
      following values are returned:
    </para>
    <screen>NID_pkcs7_data
NID_pkcs7_signed
NID_pkcs7_digest
NID_id_smime_ct_compressedData:
NID_pkcs7_encrypted
NID_pkcs7_enveloped</screen>
    <para>
      The return value of CMS_get0_content() is a pointer to the <emphasis role="bold">ASN1_OCTET_STRING</emphasis> content pointer. That means
      that for example:
    </para>
    <screen>ASN1_OCTET_STRING **pconf = CMS_get0_content(cms);</screen>
    <para>
      <emphasis role="bold">*pconf</emphasis> could be NULL if there is no
      embedded content. Applications can access, modify or create the
      embedded content in a <emphasis role="bold">CMS_ContentInfo</emphasis> structure using this function.
      Applications usually will not need to modify the embedded content as
      it is normally set by higher level functions.
    </para>
  </refsection>
  <refsection xml:id="ID-0edfc24edaa40288585855cff709835b"><title>RETURN VALUES</title>
    <para>
      CMS_get0_type() and CMS_get0_eContentType() return and ASN1_OBJECT
      structure.
    </para>
    <para>
      CMS_set1_eContentType() returns 1 for success or 0 if an error
      occurred.  The error can be obtained from ERR_get_error(3).
    </para>
  </refsection>
  <refsection xml:id="ID-f162b19ea8f5ec177dc058ee55386f1d"><title>SEE ALSO</title>
    <para>
      <citerefentry> <refentrytitle>ERR_get_error</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>
    </para>
  </refsection>
  <refsection xml:id="ID-67c693f1532c9be1488b83ba0ae85127"><title>COPYRIGHT</title>
    <para>
      Copyright 2008-2016 The OpenSSL Project Authors. All Rights Reserved.
    </para>
    <para>
      Licensed under the OpenSSL license (the "License").  You may not use
      this file except in compliance with the License.	You can obtain a
      copy in the file LICENSE in the source distribution or at <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.openssl.org/source/license.html">https://www.openssl.org/source/license.html</link>.
    </para>
  </refsection>
</refentry>