<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>RSA_get0_key.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>RSA_set0_key, RSA_set0_factors, RSA_set0_crt_params, RSA_get0_key,
RSA_get0_factors, RSA_get0_crt_params, RSA_clear_flags,
RSA_test_flags, RSA_set_flags, RSA_get0_engine</refname>
<refpurpose>Routines for getting
and setting data in an RSA object</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis>#include &lt;openssl/rsa.h&gt;</synopsis>
<synopsis>int RSA_set0_key(RSA *r, BIGNUM *n, BIGNUM *e, BIGNUM *d);
int RSA_set0_factors(RSA *r, BIGNUM *p, BIGNUM *q);
int RSA_set0_crt_params(RSA *r, BIGNUM *dmp1, BIGNUM *dmq1, BIGNUM *iqmp);
void RSA_get0_key(const RSA *r,
                  const BIGNUM **n, const BIGNUM **e, const BIGNUM **d);
void RSA_get0_factors(const RSA *r, const BIGNUM **p, const BIGNUM **q);
void RSA_get0_crt_params(const RSA *r,
                         const BIGNUM **dmp1, const BIGNUM **dmq1,
                         const BIGNUM **iqmp);
void RSA_clear_flags(RSA *r, int flags);
int RSA_test_flags(const RSA *r, int flags);
void RSA_set_flags(RSA *r, int flags);
ENGINE *RSA_get0_engine(RSA *r);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="ID-9a6f0e9d116442c55687aafcedb2baff"><title>DESCRIPTION</title>
    <para>
      An RSA object contains the components for the public and private key,
      <emphasis role="bold">n</emphasis>, <emphasis role="bold">e</emphasis>, <emphasis role="bold">d</emphasis>,
      <emphasis role="bold">p</emphasis>, <emphasis role="bold">q</emphasis>, <emphasis role="bold">dmp1</emphasis>,
      <emphasis role="bold">dmq1</emphasis> and <emphasis role="bold">iqmp</emphasis>.  <emphasis role="bold">n</emphasis> is
      the modulus common to both public and private key, <emphasis role="bold">e</emphasis> is the public exponent and <emphasis role="bold">d</emphasis> is the private exponent.  <emphasis role="bold">p</emphasis>, <emphasis role="bold">q</emphasis>,
      <emphasis role="bold">dmp1</emphasis>, <emphasis role="bold">dmq1</emphasis> and <emphasis role="bold">iqmp</emphasis>
      are the factors for the second representation of a private key (see
      PKCS#1 section 3 Key Types), where <emphasis role="bold">p</emphasis>
      and <emphasis role="bold">q</emphasis> are the first and second
      factor of <emphasis role="bold">n</emphasis> and <emphasis role="bold">dmp1</emphasis>, <emphasis role="bold">dmq1</emphasis>
      and <emphasis role="bold">iqmp</emphasis> are the exponents and
      coefficient for CRT calculations.
    </para>
    <para>
      The <emphasis role="bold">n</emphasis>, <emphasis role="bold">e</emphasis> and <emphasis role="bold">d</emphasis>
      parameters can be obtained by calling RSA_get0_key().  If they have
      not been set yet, then <emphasis role="bold">*n</emphasis>, <emphasis role="bold">*e</emphasis> and <emphasis role="bold">*d</emphasis>
      will be set to NULL.  Otherwise, they are set to pointers to their
      respective values. These point directly to the internal
      representations of the values and therefore should not be freed by
      the caller.
    </para>
    <para>
      The <emphasis role="bold">n</emphasis>, <emphasis role="bold">e</emphasis> and <emphasis role="bold">d</emphasis>
      parameter values can be set by calling RSA_set0_key() and passing the
      new values for <emphasis role="bold">n</emphasis>, <emphasis role="bold">e</emphasis> and <emphasis role="bold">d</emphasis> as
      parameters to the function.  The values <emphasis role="bold">n</emphasis> and <emphasis role="bold">e</emphasis> must
      be non-NULL the first time this function is called on a given RSA
      object. The value <emphasis role="bold">d</emphasis> may be NULL. On
      subsequent calls any of these values may be NULL which means the
      corresponding RSA field is left untouched. Calling this function
      transfers the memory management of the values to the RSA object, and
      therefore the values that have been passed in should not be freed by
      the caller after this function has been called.
    </para>
    <para>
      In a similar fashion, the <emphasis role="bold">p</emphasis> and
      <emphasis role="bold">q</emphasis> parameters can be obtained and set
      with RSA_get0_factors() and RSA_set0_factors(), and the <emphasis role="bold">dmp1</emphasis>, <emphasis role="bold">dmq1</emphasis>
      and <emphasis role="bold">iqmp</emphasis> parameters can be obtained
      and set with RSA_get0_crt_params() and RSA_set0_crt_params().
    </para>
    <para>
      RSA_set_flags() sets the flags in the <emphasis role="bold">flags</emphasis> parameter on the RSA object. Multiple
      flags can be passed in one go (bitwise ORed together). Any flags that
      are already set are left set. RSA_test_flags() tests to see whether
      the flags passed in the <emphasis role="bold">flags</emphasis>
      parameter are currently set in the RSA object. Multiple flags can be
      tested in one go. All flags that are currently set are returned, or
      zero if none of the flags are set. RSA_clear_flags() clears the
      specified flags within the RSA object.
    </para>
    <para>
      RSA_get0_engine() returns a handle to the ENGINE that has been set
      for this RSA object, or NULL if no such ENGINE has been set.
    </para>
  </refsection>
  <refsection xml:id="ID-653b7924f2ca556ba7f6021a432f483f"><title>NOTES</title>
    <para>
      Values retrieved with RSA_get0_key() are owned by the RSA object used
      in the call and may therefore <emphasis role="italic">not</emphasis>
      be passed to RSA_set0_key().  If needed, duplicate the received value
      using BN_dup() and pass the duplicate.  The same applies to
      RSA_get0_factors() and RSA_set0_factors() as well as
      RSA_get0_crt_params() and RSA_set0_crt_params().
    </para>
  </refsection>
  <refsection xml:id="ID-fe85278e9c2ffdef444520f64ee25d13"><title>RETURN VALUES</title>
    <para>
      RSA_set0_key(), RSA_set0_factors and RSA_set0_crt_params() return 1
      on success or 0 on failure.
    </para>
    <para>
      RSA_test_flags() returns the current state of the flags in the RSA
      object.
    </para>
    <para>
      RSA_get0_engine() returns the ENGINE set for the RSA object or NULL
      if no ENGINE has been set.
    </para>
  </refsection>
  <refsection xml:id="ID-6f467e895adb0dd2b756823206474c7a"><title>SEE ALSO</title>
    <para>
      <citerefentry> <refentrytitle>RSA_new</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>RSA_size</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>
    </para>
  </refsection>
  <refsection xml:id="ID-fd5f297dbcfdd81e9635504d19bc92af"><title>HISTORY</title>
    <para>
      The functions described here were added in OpenSSL version 1.1.0.
    </para>
  </refsection>
  <refsection xml:id="ID-b9a0a5d491d7508d395d1ed8a3d95e10"><title>COPYRIGHT</title>
    <para>
      Copyright 2016 The OpenSSL Project Authors. All Rights Reserved.
    </para>
    <para>
      Licensed under the OpenSSL license (the "License").  You may not use
      this file except in compliance with the License.	You can obtain a
      copy in the file LICENSE in the source distribution or at <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.openssl.org/source/license.html">https://www.openssl.org/source/license.html</link>.
    </para>
  </refsection>
</refentry>