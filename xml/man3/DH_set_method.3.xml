<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>DH_set_method.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>DH_set_default_method, DH_get_default_method,
DH_set_method, DH_new_method, DH_OpenSSL</refname>
<refpurpose>select DH method</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis format="linespecific">#include &lt;openssl/dh.h&gt;
#include &lt;openssl/engine.h&gt;</synopsis>
<synopsis format="linespecific">void DH_set_default_method(const DH_METHOD *meth);</synopsis>
<synopsis format="linespecific">const DH_METHOD *DH_get_default_method(void);</synopsis>
<synopsis format="linespecific">int DH_set_method(DH *dh, const DH_METHOD *meth);</synopsis>
<synopsis format="linespecific">DH *DH_new_method(ENGINE *engine);</synopsis>
<synopsis format="linespecific">const DH_METHOD *DH_OpenSSL(void);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="sources.openssl.doc.crypto.DH_set_method.pod:DESCRIPTION"><title>DESCRIPTION</title>
    <para>
      A <emphasis role="bold">DH_METHOD</emphasis> specifies the functions
      that OpenSSL uses for Diffie-Hellman operations. By modifying the
      method, alternative implementations such as hardware accelerators may
      be used. IMPORTANT: See the NOTES section for important information
      about how these DH API functions are affected by the use of <emphasis role="bold">ENGINE</emphasis> API calls.
    </para>
    <para>
      Initially, the default DH_METHOD is the OpenSSL internal
      implementation, as returned by DH_OpenSSL().
    </para>
    <para>
      DH_set_default_method() makes <emphasis role="bold">meth</emphasis>
      the default method for all DH structures created later. <emphasis role="bold">NB</emphasis>: This is true only whilst no ENGINE has
      been set as a default for DH, so this function is no longer
      recommended.
    </para>
    <para>
      DH_get_default_method() returns a pointer to the current default
      DH_METHOD. However, the meaningfulness of this result is dependent on
      whether the ENGINE API is being used, so this function is no longer
      recommended.
    </para>
    <para>
      DH_set_method() selects <emphasis role="bold">meth</emphasis> to
      perform all operations using the key <emphasis role="bold">dh</emphasis>. This will replace the DH_METHOD used by
      the DH key and if the previous method was supplied by an ENGINE, the
      handle to that ENGINE will be released during the change. It is
      possible to have DH keys that only work with certain DH_METHOD
      implementations (eg. from an ENGINE module that supports embedded
      hardware-protected keys), and in such cases attempting to change the
      DH_METHOD for the key can have unexpected results.
    </para>
    <para>
      DH_new_method() allocates and initializes a DH structure so that
      <emphasis role="bold">engine</emphasis> will be used for the DH
      operations. If <emphasis role="bold">engine</emphasis> is NULL, the
      default ENGINE for DH operations is used, and if no default ENGINE is
      set, the DH_METHOD controlled by DH_set_default_method() is used.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.DH_set_method.pod:THE_DH_METHOD_STRUCTURE"><title>THE DH_METHOD STRUCTURE</title>
    <screen>typedef struct dh_meth_st
{
    /* name of the implementation */
       const char *name;

/* generate private and public DH values for key agreement */
   int (*generate_key)(DH *dh);

/* compute shared secret */
   int (*compute_key)(unsigned char *key, BIGNUM *pub_key, DH *dh);

/* compute r = a ^ p mod m (May be NULL for some implementations) */
   int (*bn_mod_exp)(DH *dh, BIGNUM *r, BIGNUM *a, const BIGNUM *p,
                           const BIGNUM *m, BN_CTX *ctx,
                           BN_MONT_CTX *m_ctx);

/* called at DH_new */
   int (*init)(DH *dh);

/* called at DH_free */
   int (*finish)(DH *dh);

int flags;

char *app_data; /* ?? */

} DH_METHOD;</screen>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.DH_set_method.pod:RETURN_VALUES"><title>RETURN VALUES</title>
    <para>
      DH_OpenSSL() and DH_get_default_method() return pointers to the
      respective <emphasis role="bold">DH_METHOD</emphasis>s.
    </para>
    <para>
      DH_set_default_method() returns no value.
    </para>
    <para>
      DH_set_method() returns non-zero if the provided <emphasis role="bold">meth</emphasis> was successfully set as the method for
      <emphasis role="bold">dh</emphasis> (including unloading the ENGINE
      handle if the previous method was supplied by an ENGINE).
    </para>
    <para>
      DH_new_method() returns NULL and sets an error code that can be
      obtained by ERR_get_error(3) if the allocation fails. Otherwise it
      returns a pointer to the newly allocated structure.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.DH_set_method.pod:NOTES"><title>NOTES</title>
    <para>
      As of version 0.9.7, DH_METHOD implementations are grouped together
      with other algorithmic APIs (eg. RSA_METHOD, EVP_CIPHER, etc) in
      <emphasis role="bold">ENGINE</emphasis> modules. If a default ENGINE
      is specified for DH functionality using an ENGINE API function, that
      will override any DH defaults set using the DH API (ie.
      DH_set_default_method()). For this reason, the ENGINE API is the
      recommended way to control default implementations for use in DH and
      other cryptographic algorithms.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.DH_set_method.pod:SEE_ALSO"><title>SEE ALSO</title>
    <para>
      dh(3), DH_new(3)
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.DH_set_method.pod:HISTORY"><title>HISTORY</title>
    <para>
      DH_set_default_method(), DH_get_default_method(), DH_set_method(),
      DH_new_method() and DH_OpenSSL() were added in OpenSSL 0.9.4.
    </para>
    <para>
      DH_set_default_openssl_method() and DH_get_default_openssl_method()
      replaced DH_set_default_method() and DH_get_default_method()
      respectively, and DH_set_method() and DH_new_method() were altered to
      use <emphasis role="bold">ENGINE</emphasis>s rather than <emphasis role="bold">DH_METHOD</emphasis>s during development of the engine
      version of OpenSSL 0.9.6. For 0.9.7, the handling of defaults in the
      ENGINE API was restructured so that this change was reversed, and
      behaviour of the other functions resembled more closely the previous
      behaviour. The behaviour of defaults in the ENGINE API now
      transparently overrides the behaviour of defaults in the DH API
      without requiring changing these function prototypes.
    </para>
  </refsection>
</refentry>