<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>ASN1_TIME_set.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>ASN1_TIME_set, ASN1_TIME_adj, ASN1_TIME_check, ASN1_TIME_set_string,
ASN1_TIME_print, ASN1_TIME_diff</refname>
<refpurpose>ASN.1 Time functions.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis>ASN1_TIME *ASN1_TIME_set(ASN1_TIME *s, time_t t);
ASN1_TIME *ASN1_TIME_adj(ASN1_TIME *s, time_t t,
                         int offset_day, long offset_sec);
int ASN1_TIME_set_string(ASN1_TIME *s, const char *str);
int ASN1_TIME_check(const ASN1_TIME *t);
int ASN1_TIME_print(BIO *b, const ASN1_TIME *s);</synopsis>
<synopsis>int ASN1_TIME_diff(int *pday, int *psec,
                   const ASN1_TIME *from, const ASN1_TIME *to);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="ID-b821d210c836e42d8e2f4febf484e8e0"><title>DESCRIPTION</title>
    <para>
      The function ASN1_TIME_set() sets the ASN1_TIME structure <emphasis role="bold">s</emphasis> to the time represented by the time_t value
      <emphasis role="bold">t</emphasis>. If <emphasis role="bold">s</emphasis> is NULL a new ASN1_TIME structure is
      allocated and returned.
    </para>
    <para>
      ASN1_TIME_adj() sets the ASN1_TIME structure <emphasis role="bold">s</emphasis> to the time represented by the time
      <emphasis role="bold">offset_day</emphasis> and <emphasis role="bold">offset_sec</emphasis> after the time_t value <emphasis role="bold">t</emphasis>. The values of <emphasis role="bold">offset_day</emphasis> or <emphasis role="bold">offset_sec</emphasis> can be negative to set a time
      before <emphasis role="bold">t</emphasis>. The <emphasis role="bold">offset_sec</emphasis> value can also exceed the number of
      seconds in a day. If <emphasis role="bold">s</emphasis> is NULL a new
      ASN1_TIME structure is allocated and returned.
    </para>
    <para>
      ASN1_TIME_set_string() sets ASN1_TIME structure <emphasis role="bold">s</emphasis> to the time represented by string <emphasis role="bold">str</emphasis> which must be in appropriate ASN.1 time
      format (for example YYMMDDHHMMSSZ or YYYYMMDDHHMMSSZ).
    </para>
    <para>
      ASN1_TIME_check() checks the syntax of ASN1_TIME structure <emphasis role="bold">s</emphasis>.
    </para>
    <para>
      ASN1_TIME_print() prints out the time <emphasis role="bold">s</emphasis> to BIO <emphasis role="bold">b</emphasis> in
      human readable format. It will be of the format MMM DD HH:MM:SS YYYY
      [GMT], for example "Feb  3 00:55:52 2015 GMT" it does not include a
      newline. If the time structure has invalid format it prints out "Bad
      time value" and returns an error.
    </para>
    <para>
      ASN1_TIME_diff() sets <emphasis role="bold">*pday</emphasis> and
      <emphasis role="bold">*psec</emphasis> to the time difference between
      <emphasis role="bold">from</emphasis> and <emphasis role="bold">to</emphasis>. If <emphasis role="bold">to</emphasis>
      represents a time later than <emphasis role="bold">from</emphasis>
      then one or both (depending on the time difference) of <emphasis role="bold">*pday</emphasis> and <emphasis role="bold">*psec</emphasis> will be positive. If <emphasis role="bold">to</emphasis> represents a time earlier than <emphasis role="bold">from</emphasis> then one or both of <emphasis role="bold">*pday</emphasis> and <emphasis role="bold">*psec</emphasis> will be negative. If <emphasis role="bold">to</emphasis> and <emphasis role="bold">from</emphasis>
      represent the same time then <emphasis role="bold">*pday</emphasis>
      and <emphasis role="bold">*psec</emphasis> will both be zero. If both
      <emphasis role="bold">*pday</emphasis> and <emphasis role="bold">*psec</emphasis> are non-zero they will always have the
      same sign. The value of <emphasis role="bold">*psec</emphasis> will
      always be less than the number of seconds in a day. If <emphasis role="bold">from</emphasis> or <emphasis role="bold">to</emphasis> is
      NULL the current time is used.
    </para>
  </refsection>
  <refsection xml:id="ID-b2cae13ac5d8358aec5bec1612f1568e"><title>NOTES</title>
    <para>
      The ASN1_TIME structure corresponds to the ASN.1 structure <emphasis role="bold">Time</emphasis> defined in RFC5280 et al. The time
      setting functions obey the rules outlined in RFC5280: if the date can
      be represented by UTCTime it is used, else GeneralizedTime is used.
    </para>
    <para>
      The ASN1_TIME structure is represented as an ASN1_STRING internally
      and can be freed up using ASN1_STRING_free().
    </para>
    <para>
      The ASN1_TIME structure can represent years from 0000 to 9999 but no
      attempt is made to correct ancient calendar changes (for example from
      Julian to Gregorian calendars).
    </para>
    <para>
      Some applications add offset times directly to a time_t value and
      pass the results to ASN1_TIME_set() (or equivalent). This can cause
      problems as the time_t value can overflow on some systems resulting
      in unexpected results. New applications should use ASN1_TIME_adj()
      instead and pass the offset value in the <emphasis role="bold">offset_sec</emphasis> and <emphasis role="bold">offset_day</emphasis> parameters instead of directly
      manipulating a time_t value.
    </para>
  </refsection>
  <refsection xml:id="ID-37430c5453a205ffa0b3ae937602d663"><title>BUGS</title>
    <para>
      ASN1_TIME_print() currently does not print out the time zone: it
      either prints out "GMT" or nothing. But all certificates complying
      with RFC5280 et al use GMT anyway.
    </para>
  </refsection>
  <refsection xml:id="ID-15a9587b72d63a70ff9784e98291e4d8"><title>EXAMPLES</title>
    <para>
      Set a time structure to one hour after the current time and print it
      out:
    </para>
    <screen>#include &lt;time.h&amp;gt;
#include &amp;lt;openssl/asn1.h&amp;gt;
ASN1_TIME *tm;
time_t t;
BIO *b;
t = time(NULL);
tm = ASN1_TIME_adj(NULL, t, 0, 60 * 60);
b = BIO_new_fp(stdout, BIO_NOCLOSE);
ASN1_TIME_print(b, tm);
ASN1_STRING_free(tm);
BIO_free(b);</screen>
    <para>
      Determine if one time is later or sooner than the current time:
    </para>
    <screen>int day, sec;

if (!ASN1_TIME_diff(&amp;day, &amp;sec, NULL, to))
       /* Invalid time format */

if (day &gt; 0 || sec &gt; 0)
  printf("Later\n");
else if (day &lt; 0 || sec &lt; 0)
  printf("Sooner\n");
else
  printf("Same\n");</screen>
  </refsection>
  <refsection xml:id="ID-bab40b44b4ebed5d811bee0c7142ee9d"><title>RETURN VALUES</title>
    <para>
      ASN1_TIME_set() and ASN1_TIME_adj() return a pointer to an ASN1_TIME
      structure or NULL if an error occurred.
    </para>
    <para>
      ASN1_TIME_set_string() returns 1 if the time value is successfully
      set and 0 otherwise.
    </para>
    <para>
      ASN1_TIME_check() returns 1 if the structure is syntactically correct
      and 0 otherwise.
    </para>
    <para>
      ASN1_TIME_print() returns 1 if the time is successfully printed out
      and 0 if an error occurred (I/O error or invalid time format).
    </para>
    <para>
      ASN1_TIME_diff() returns 1 for success and 0 for failure. It can fail
      if the pass ASN1_TIME structure has invalid syntax for example.
    </para>
  </refsection>
  <refsection xml:id="ID-ba6343d875cfc4c52e50230743396049"><title>COPYRIGHT</title>
    <para>
      Copyright 2015-2016 The OpenSSL Project Authors. All Rights Reserved.
    </para>
    <para>
      Licensed under the OpenSSL license (the "License").  You may not use
      this file except in compliance with the License.	You can obtain a
      copy in the file LICENSE in the source distribution or at <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.openssl.org/source/license.html">https://www.openssl.org/source/license.html</link>.
    </para>
  </refsection>
</refentry>