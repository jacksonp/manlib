<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>PKCS12_newpass.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>PKCS12_newpass</refname>
<refpurpose>change the password of a PKCS12 structure</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis>#include &lt;openssl/pkcs12.h&gt;</synopsis>
<synopsis>int PKCS12_newpass(PKCS12 *p12, const char *oldpass, const char *newpass);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="ID-6fff74f06fb39ecef7c0935432f0d416"><title>DESCRIPTION</title>
    <para>
      PKCS12_newpass() changes the password of a PKCS12 structure.
    </para>
    <para>
      <emphasis role="bold">p12</emphasis> is a pointer to a PKCS12
      structure. <emphasis role="bold">oldpass</emphasis> is the existing
      password and <emphasis role="bold">newpass</emphasis> is the new
      password.
    </para>
  </refsection>
  <refsection xml:id="ID-cc689c534cdba614152c520fb8bc5fa7"><title>RETURN VALUES</title>
    <para>
      PKCS12_newpass() returns 1 on success or 0 on failure. Applications
      can retrieve the most recent error from PKCS12_newpass() with
      ERR_get_error().
    </para>
  </refsection>
  <refsection xml:id="ID-3258bc9da24afd59aad89ee3e05aa669"><title>EXAMPLE</title>
    <para>
      This example loads a PKCS#12 file, changes its password and writes
      out the result to a new file.
    </para>
    <screen>#include &lt;stdio.h&amp;gt;
#include &lt;stdlib.h&amp;gt;
#include &amp;lt;openssl/pem.h&amp;gt;
#include &amp;lt;openssl/err.h&amp;gt;
#include &amp;lt;openssl/pkcs12.h&amp;gt;

int main(int argc, char **argv)
{
   FILE *fp;
   PKCS12 *p12;
   if (argc != 5) {
       fprintf(stderr, "Usage: pkread p12file password newpass opfile\n");
       return 1;
   }
   if ((fp = fopen(argv[1], "rb")) == NULL) {
       fprintf(stderr, "Error opening file %s\n", argv[1]);
       return 1;
   }
   p12 = d2i_PKCS12_fp(fp, NULL);
   fclose(fp);
   if (p12 == NULL) {
       fprintf(stderr, "Error reading PKCS#12 file\n");
       ERR_print_errors_fp(stderr);
       return 1;
   }
   if (PKCS12_newpass(p12, argv[2], argv[3]) == 0) {
       fprintf(stderr, "Error changing password\n");
       ERR_print_errors_fp(stderr);
       PKCS12_free(p12);
       return 1;
   }
   if ((fp = fopen(argv[4], "wb")) == NULL) {
       fprintf(stderr, "Error opening file %s\n", argv[4]);
       PKCS12_free(p12);
       return 1;
   }
   i2d_PKCS12_fp(fp, p12);
   PKCS12_free(p12);
   fclose(fp);
   return 0;
}

</screen>
  </refsection>
  <refsection xml:id="ID-73fda90f70256b02619786f8fa1e80b9"><title>NOTES</title>
    <para>
      If the PKCS#12 structure does not have a password, then you must use
      the empty string "" for <emphasis role="bold">oldpass</emphasis>.
      Using NULL for <emphasis role="bold">oldpass</emphasis> will result
      in a PKCS12_newpass() failure.
    </para>
    <para>
      If the wrong password is used for <emphasis role="bold">oldpass</emphasis> then the function will fail, with a
      MAC verification error. In rare cases the PKCS12 structure does not
      contain a MAC: in this case it will usually fail with a decryption
      padding error.
    </para>
  </refsection>
  <refsection xml:id="ID-ce15b8dbd75172f0218d7ba7be3220ea"><title>BUGS</title>
    <para>
      The password format is a NULL terminated ASCII string which is
      converted to Unicode form internally. As a result some passwords
      cannot be supplied to this function.
    </para>
  </refsection>
  <refsection xml:id="ID-33a5f747df178ef55569603f3a9dc001"><title>SEE ALSO</title>
    <para>
      <citerefentry> <refentrytitle>PKCS12_create</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>ERR_get_error</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>
    </para>
  </refsection>
</refentry>