<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>BN_CTX_start.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>BN_CTX_start, BN_CTX_get, BN_CTX_end</refname>
<refpurpose>use temporary BIGNUM variables</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis>#include &lt;openssl/bn.h&gt;</synopsis>
<synopsis>void BN_CTX_start(BN_CTX *ctx);</synopsis>
<synopsis>BIGNUM *BN_CTX_get(BN_CTX *ctx);</synopsis>
<synopsis>void BN_CTX_end(BN_CTX *ctx);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="ID-94717d13537e03a2a3b9cee07562ee17"><title>DESCRIPTION</title>
    <para>
      These functions are used to obtain temporary <emphasis role="bold">BIGNUM</emphasis> variables from a <emphasis role="bold">BN_CTX</emphasis> (which can been created by using
      <citerefentry> <refentrytitle>BN_CTX_new</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>) in order to save the
      overhead of repeatedly creating and freeing <emphasis role="bold">BIGNUM</emphasis>s in functions that are called from
      inside a loop.
    </para>
    <para>
      A function must call BN_CTX_start() first. Then, BN_CTX_get() may be
      called repeatedly to obtain temporary <emphasis role="bold">BIGNUM</emphasis>s. All BN_CTX_get() calls must be made
      before calling any other functions that use the <emphasis role="bold">ctx</emphasis> as an argument.
    </para>
    <para>
      Finally, BN_CTX_end() must be called before returning from the
      function. When BN_CTX_end() is called, the <emphasis role="bold">BIGNUM</emphasis> pointers obtained from BN_CTX_get()
      become invalid.
    </para>
  </refsection>
  <refsection xml:id="ID-70547aa9901c49a178c2cc1cb38d4ea4"><title>RETURN VALUES</title>
    <para>
      BN_CTX_start() and BN_CTX_end() return no values.
    </para>
    <para>
      BN_CTX_get() returns a pointer to the <emphasis role="bold">BIGNUM</emphasis>, or <emphasis role="bold">NULL</emphasis> on error. Once BN_CTX_get() has failed,
      the subsequent calls will return <emphasis role="bold">NULL</emphasis> as well, so it is sufficient to check the
      return value of the last BN_CTX_get() call. In case of an error, an
      error code is set, which can be obtained by <citerefentry>
      <refentrytitle>ERR_get_error</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>.
    </para>
    <screen></screen>
  </refsection>
  <refsection xml:id="ID-358c70b667bb4637cca4e00bf7f9c897"><title>SEE ALSO</title>
    <para>
      <citerefentry> <refentrytitle>BN_CTX_new</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>
    </para>
  </refsection>
  <refsection xml:id="ID-2baa34b825d7e6d8f82f5a1281d9221f"><title>COPYRIGHT</title>
    <para>
      Copyright 2000-2016 The OpenSSL Project Authors. All Rights Reserved.
    </para>
    <para>
      Licensed under the OpenSSL license (the "License").  You may not use
      this file except in compliance with the License.	You can obtain a
      copy in the file LICENSE in the source distribution or at <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.openssl.org/source/license.html">https://www.openssl.org/source/license.html</link>.
    </para>
  </refsection>
</refentry>