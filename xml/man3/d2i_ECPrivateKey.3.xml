<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>d2i_ECPrivateKey.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>i2d_ECPrivateKey, d2i_ECPrivate_key</refname>
<refpurpose>Encode and decode functions for saving and
reading EC_KEY structures</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis format="linespecific">#include &lt;openssl/ec.h&gt;</synopsis>
<synopsis format="linespecific">EC_KEY *d2i_ECPrivateKey(EC_KEY **key, const unsigned char **in, long len);
int i2d_ECPrivateKey(EC_KEY *key, unsigned char **out);</synopsis>
<synopsis format="linespecific">unsigned int EC_KEY_get_enc_flags(const EC_KEY *key);
void EC_KEY_set_enc_flags(EC_KEY *eckey, unsigned int flags);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="sources.openssl.doc.crypto.d2i_ECPrivateKey.pod:DESCRIPTION"><title>DESCRIPTION</title>
    <para>
      The ECPrivateKey encode and decode routines encode and parse an
      <emphasis role="bold">EC_KEY</emphasis> structure into a binary
      format (ASN.1 DER) and back again.
    </para>
    <para>
      These functions are similar to the d2i_X509() functions, and you
      should refer to that page for a detailed description (see
      <citerefentry> <refentrytitle>d2i_X509</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>).
    </para>
    <para>
      The format of the external representation of the public key written
      by i2d_ECPrivateKey (such as whether it is stored in a compressed
      form or not) is described by the point_conversion_form. See
      <citerefentry> <refentrytitle>EC_GROUP_copy</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry> for a description of
      point_conversion_form.
    </para>
    <para>
      When reading a private key encoded without an associated public key
      (e.g. if EC_PKEY_NO_PUBKEY has been used - see below), then
      d2i_ECPrivateKey generates the missing public key automatically.
      Private keys encoded without parameters (e.g. if
      EC_PKEY_NO_PARAMETERS has been used - see below) cannot be loaded
      using d2i_ECPrivateKey.
    </para>
    <para>
      The functions EC_KEY_get_enc_flags and EC_KEY_set_enc_flags get and
      set the value of the encoding flags for the <emphasis role="bold">key</emphasis>. There are two encoding flags currently
      defined - EC_PKEY_NO_PARAMETERS and EC_PKEY_NO_PUBKEY.  These flags
      define the behaviour of how the  <emphasis role="bold">key</emphasis>
      is converted into ASN1 in a call to i2d_ECPrivateKey. If
      EC_PKEY_NO_PARAMETERS is set then the public parameters for the curve
      are not encoded along with the private key. If EC_PKEY_NO_PUBKEY is
      set then the public key is not encoded along with the private key.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.d2i_ECPrivateKey.pod:RETURN_VALUES"><title>RETURN VALUES</title>
    <para>
      d2i_ECPrivateKey() returns a valid <emphasis role="bold">EC_KEY</emphasis> structure or <emphasis role="bold">NULL</emphasis> if an error occurs. The error code that
      can be obtained by <citerefentry>
      <refentrytitle>ERR_get_error</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>.
    </para>
    <para>
      i2d_ECPrivateKey() returns the number of bytes successfully encoded
      or a negative value if an error occurs. The error code can be
      obtained by <citerefentry>
      <refentrytitle>ERR_get_error</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>.
    </para>
    <para>
      EC_KEY_get_enc_flags returns the value of the current encoding flags
      for the EC_KEY.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.d2i_ECPrivateKey.pod:SEE_ALSO"><title>SEE ALSO</title>
    <para>
      <citerefentry> <refentrytitle>crypto</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>ec</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>EC_GROUP_new</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>EC_GROUP_copy</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>EC_POINT_new</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>EC_POINT_add</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>EC_GFp_simple_method</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>d2i_ECPKParameters</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>d2i_ECPrivateKey</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>
    </para>
  </refsection>
</refentry>