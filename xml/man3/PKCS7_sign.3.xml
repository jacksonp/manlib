<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>PKCS7_sign.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>PKCS7_sign</refname>
<refpurpose>create a PKCS#7 signedData structure</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis>#include &lt;openssl/pkcs7.h&gt;</synopsis>
<synopsis>PKCS7 *PKCS7_sign(X509 *signcert, EVP_PKEY *pkey, STACK_OF(X509) *certs, BIO *data, int flags);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="ID-67a335566587e9ab804e64f626d3e4f7"><title>DESCRIPTION</title>
    <para>
      PKCS7_sign() creates and returns a PKCS#7 signedData structure.
      <emphasis role="bold">signcert</emphasis> is the certificate to sign
      with, <emphasis role="bold">pkey</emphasis> is the corresponding
      private key. <emphasis role="bold">certs</emphasis> is an optional
      additional set of certificates to include in the PKCS#7 structure
      (for example any intermediate CAs in the chain).
    </para>
    <para>
      The data to be signed is read from BIO <emphasis role="bold">data</emphasis>.
    </para>
    <para>
      <emphasis role="bold">flags</emphasis> is an optional set of flags.
    </para>
  </refsection>
  <refsection xml:id="ID-21d3aeaa72fd54c6e462f5872a275a94"><title>NOTES</title>
    <para>
      Any of the following flags (ored together) can be passed in the
      <emphasis role="bold">flags</emphasis> parameter.
    </para>
    <para>
      Many S/MIME clients expect the signed content to include valid MIME
      headers. If the <emphasis role="bold">PKCS7_TEXT</emphasis> flag is
      set MIME headers for type <emphasis role="bold">text/plain</emphasis>
      are prepended to the data.
    </para>
    <para>
      If <emphasis role="bold">PKCS7_NOCERTS</emphasis> is set the signer's
      certificate will not be included in the PKCS7 structure, the signer's
      certificate must still be supplied in the <emphasis role="bold">signcert</emphasis> parameter though. This can reduce the
      size of the signature if the signers certificate can be obtained by
      other means: for example a previously signed message.
    </para>
    <para>
      The data being signed is included in the PKCS7 structure, unless
      <emphasis role="bold">PKCS7_DETACHED</emphasis> is set in which case
      it is omitted. This is used for PKCS7 detached signatures which are
      used in S/MIME plaintext signed messages for example.
    </para>
    <para>
      Normally the supplied content is translated into MIME canonical
      format (as required by the S/MIME specifications) if <emphasis role="bold">PKCS7_BINARY</emphasis> is set no translation occurs.
      This option should be used if the supplied data is in binary format
      otherwise the translation will corrupt it.
    </para>
    <para>
      The signedData structure includes several PKCS#7
      autenticatedAttributes including the signing time, the PKCS#7 content
      type and the supported list of ciphers in an SMIMECapabilities
      attribute. If <emphasis role="bold">PKCS7_NOATTR</emphasis> is set
      then no authenticatedAttributes will be used. If <emphasis role="bold">PKCS7_NOSMIMECAP</emphasis> is set then just the
      SMIMECapabilities are omitted.
    </para>
    <para>
      If present the SMIMECapabilities attribute indicates support for the
      following algorithms: triple DES, 128 bit RC2, 64 bit RC2, DES and 40
      bit RC2. If any of these algorithms is disabled then it will not be
      included.
    </para>
    <para>
      If the flags <emphasis role="bold">PKCS7_STREAM</emphasis> is set
      then the returned <emphasis role="bold">PKCS7</emphasis> structure is
      just initialized ready to perform the signing operation. The signing
      is however <emphasis role="bold">not</emphasis> performed and the
      data to be signed is not read from the <emphasis role="bold">data</emphasis> parameter. Signing is deferred until
      after the data has been written. In this way data can be signed in a
      single pass.
    </para>
    <para>
      If the <emphasis role="bold">PKCS7_PARTIAL</emphasis> flag is set a
      partial <emphasis role="bold">PKCS7</emphasis> structure is output to
      which additional signers and capabilities can be added before
      finalization.
    </para>
    <screen></screen>
  </refsection>
  <refsection xml:id="ID-21d3aeaa72fd54c6e462f5872a275a94"><title>NOTES</title>
    <para>
      If the flag <emphasis role="bold">PKCS7_STREAM</emphasis> is set the
      returned <emphasis role="bold">PKCS7</emphasis> structure is
      <emphasis role="bold">not</emphasis> complete and outputting its
      contents via a function that does not properly finalize the <emphasis role="bold">PKCS7</emphasis> structure will give unpredictable
      results.
    </para>
    <para>
      Several functions including SMIME_write_PKCS7(),
      i2d_PKCS7_bio_stream(), PEM_write_bio_PKCS7_stream() finalize the
      structure. Alternatively finalization can be performed by obtaining
      the streaming ASN1 <emphasis role="bold">BIO</emphasis> directly
      using BIO_new_PKCS7().
    </para>
    <para>
      If a signer is specified it will use the default digest for the
      signing algorithm. This is <emphasis role="bold">SHA1</emphasis> for
      both RSA and DSA keys.
    </para>
    <para>
      The <emphasis role="bold">certs</emphasis>, <emphasis role="bold">signcert</emphasis> and <emphasis role="bold">pkey</emphasis> parameters can all be <emphasis role="bold">NULL</emphasis> if the <emphasis role="bold">PKCS7_PARTIAL</emphasis> flag is set. One or more signers
      can be added using the function PKCS7_sign_add_signer().
      PKCS7_final() must also be called to finalize the structure if
      streaming is not enabled. Alternative signing digests can also be
      specified using this method.
    </para>
    <para>
      If <emphasis role="bold">signcert</emphasis> and <emphasis role="bold">pkey</emphasis> are NULL then a certificates only PKCS#7
      structure is output.
    </para>
    <para>
      In versions of OpenSSL before 1.0.0 the <emphasis role="bold">signcert</emphasis> and <emphasis role="bold">pkey</emphasis> parameters must <emphasis role="bold">NOT</emphasis> be NULL.
    </para>
  </refsection>
  <refsection xml:id="ID-1a7849616b21402ddc970ef3c7e68c71"><title>BUGS</title>
    <para>
      Some advanced attributes such as counter signatures are not
      supported.
    </para>
  </refsection>
  <refsection xml:id="ID-908c927da17fac4ede366e75f7d82df5"><title>RETURN VALUES</title>
    <para>
      PKCS7_sign() returns either a valid PKCS7 structure or NULL if an
      error occurred.  The error can be obtained from ERR_get_error(3).
    </para>
  </refsection>
  <refsection xml:id="ID-c616de5437b1e44b9ad3dcfa0b8beeda"><title>SEE ALSO</title>
    <para>
      <citerefentry> <refentrytitle>ERR_get_error</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>PKCS7_verify</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>
    </para>
  </refsection>
  <refsection xml:id="ID-3f33623d76433ad1b5530c2dfae5cb62"><title>HISTORY</title>
    <para>
      The <emphasis role="bold">PKCS7_PARTIAL</emphasis> flag, and the
      ability for <emphasis role="bold">certs</emphasis>, <emphasis role="bold">signcert</emphasis>, and <emphasis role="bold">pkey</emphasis> parameters to be <emphasis role="bold">NULL</emphasis> to be was added in OpenSSL 1.0.0
    </para>
    <para>
      The <emphasis role="bold">PKCS7_STREAM</emphasis> flag was added in
      OpenSSL 1.0.0
    </para>
  </refsection>
</refentry>