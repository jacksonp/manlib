<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>SSL_COMP_add_compression_method.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>SSL_COMP_add_compression_method</refname>
<refpurpose>handle SSL/TLS integrated compression methods</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis format="linespecific">#include &lt;openssl/ssl.h&gt;</synopsis>
<synopsis format="linespecific">int SSL_COMP_add_compression_method(int id, COMP_METHOD *cm);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="sources.openssl.doc.ssl.SSL_COMP_add_compression_method.pod:DESCRIPTION"><title>DESCRIPTION</title>
    <para>
      SSL_COMP_add_compression_method() adds the compression method
      <emphasis role="bold">cm</emphasis> with the identifier <emphasis role="bold">id</emphasis> to the list of available compression
      methods. This list is globally maintained for all SSL operations
      within this application. It cannot be set for specific SSL_CTX or SSL
      objects.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.ssl.SSL_COMP_add_compression_method.pod:NOTES"><title>NOTES</title>
    <para>
      The TLS standard (or SSLv3) allows the integration of compression
      methods into the communication. The TLS RFC does however not specify
      compression methods or their corresponding identifiers, so there is
      currently no compatible way to integrate compression with unknown
      peers. It is therefore currently not recommended to integrate
      compression into applications. Applications for non-public use may
      agree on certain compression methods. Using different compression
      methods with the same identifier will lead to connection failure.
    </para>
    <para>
      An OpenSSL client speaking a protocol that allows compression (SSLv3,
      TLSv1) will unconditionally send the list of all compression methods
      enabled with SSL_COMP_add_compression_method() to the server during
      the handshake. Unlike the mechanisms to set a cipher list, there is
      no method available to restrict the list of compression method on a
      per connection basis.
    </para>
    <para>
      An OpenSSL server will match the identifiers listed by a client
      against its own compression methods and will unconditionally activate
      compression when a matching identifier is found. There is no way to
      restrict the list of compression methods supported on a per
      connection basis.
    </para>
    <para>
      The OpenSSL library has the compression methods <emphasis role="bold">COMP_rle()</emphasis> and (when especially enabled during
      compilation) <emphasis role="bold">COMP_zlib()</emphasis> available.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.ssl.SSL_COMP_add_compression_method.pod:WARNINGS"><title>WARNINGS</title>
    <para>
      Once the identities of the compression methods for the TLS protocol
      have been standardized, the compression API will most likely be
      changed. Using it in the current state is not recommended.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.ssl.SSL_COMP_add_compression_method.pod:RETURN_VALUES"><title>RETURN VALUES</title>
    <para>
      SSL_COMP_add_compression_method() may return the following values:
    </para>
    <para>
      <variablelist>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.ssl.SSL_COMP_add_compression_method.pod:0"/>0</term>
          <listitem>
            <para>
	      The operation succeeded.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.ssl.SSL_COMP_add_compression_method.pod:1"/>1</term>
          <listitem>
            <para>
	      The operation failed. Check the error queue to find out the
	      reason.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.ssl.SSL_COMP_add_compression_method.pod:SEE_ALSO"><title>SEE ALSO</title>
    <para>
      ssl(3)
    </para>
  </refsection>
</refentry>