<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:lang="en">
<info>
    
</info>
<refmeta>
<refentrytitle>xchangepointerdevice</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class="source"> </refmiscinfo>
<refmiscinfo class="manual"> </refmiscinfo>
</refmeta>
<refnamediv>
    <refname>XChangePointerDevice</refname>
    <refpurpose>change which device is the X pointer</refpurpose>
</refnamediv>
<refsynopsisdiv xml:id="_synopsis">
<literallayout class="monospaced">#include &lt;X11/extensions/XInput.h&gt;</literallayout>
<literallayout class="monospaced">Status XChangePointerDevice( Display *display,
                             XDevice *device,
                             int xaxis,
                             int yaxis);</literallayout>
<literallayout class="monospaced">display
       Specifies the connection to the X server.</literallayout>
<literallayout class="monospaced">device
       Specifies the device to be used as the X pointer.</literallayout>
<literallayout class="monospaced">xaxis
       Specifies the axis of the device to be used as the X
       pointer x-axis.</literallayout>
<literallayout class="monospaced">yaxis
       Specifies the axis of the device to be used as the X
       pointer y-axis.</literallayout>
</refsynopsisdiv>
<refsect1 xml:id="_description">
<title>DESCRIPTION</title>
<literallayout class="monospaced">The XChangePointerDevice request causes the server to use the
specified device as the X pointer. The device must have been
opened by the client via XOpenDevice or a BadDevice error will
result. The device must support input class Valuators or a
BadMatch error will result. If the implementation does not
support use of the specified device as the X pointer, a
BadDevice error will result.</literallayout>
<literallayout class="monospaced">If the specified device is grabbed by another client,
AlreadyGrabbed is returned. If the specified device is frozen
by a grab on another device, GrabFrozen is returned. If the
request is successful, Success is returned.</literallayout>
<literallayout class="monospaced">If the request succeeds, a ChangeDeviceNotify event is sent to
all clients that have selected that event. A MappingNotify
event with request = MappingPointer is sent to all clients. The
specified device becomes the X pointer, and the old X pointer
becomes accessible through the input extension protocol
requests.</literallayout>
<literallayout class="monospaced">XChangePointerDevice can generate a BadDevice or a BadMatch
error.</literallayout>
</refsect1>
<refsect1 xml:id="_diagnostics">
<title>DIAGNOSTICS</title>
<literallayout class="monospaced">BadDevice
       An invalid device was specified. The specified device
       does not exist, has not been opened by this client via
       XOpenInputDevice, or is already one of the core X input
       devices (pointer or keyboard). This error may also occur
       if the server implementation does not support using the
       specified device as the X pointer.</literallayout>
<literallayout class="monospaced">BadMatch
       This error may occur if an XChangePointerDevice request
       was made specifying a device that has less than two
       valuators, or specifying a valuator index beyond the
       range supported by the device.</literallayout>
</refsect1>
<refsect1 xml:id="_see_also">
<title>SEE ALSO</title>
<literallayout class="monospaced">XChangeKeyboardDevice(3)</literallayout>
</refsect1>
</refentry>