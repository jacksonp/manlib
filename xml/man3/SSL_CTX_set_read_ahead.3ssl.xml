<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>SSL_CTX_set_read_ahead.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>SSL_CTX_set_read_ahead, SSL_CTX_set_default_read_ahead, SSL_CTX_get_read_ahead,
SSL_CTX_get_default_read_ahead, SSL_set_read_ahead, SSL_get_read_ahead</refname>
<refpurpose>manage whether to read as many input bytes as possible</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis>#include &lt;openssl/ssl.h&gt;</synopsis>
<synopsis>int SSL_get_read_ahead(const SSL *s);
void SSL_set_read_ahead(SSL *s, int yes);</synopsis>
<synopsis>#define SSL_CTX_get_default_read_ahead(ctx)
#define SSL_CTX_set_default_read_ahead(ctx,m)
#define SSL_CTX_get_read_ahead(ctx)
#define SSL_CTX_set_read_ahead(ctx,m)</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="ID-e6e000d8c1d669fdb66cdc519e23b693"><title>DESCRIPTION</title>
    <para>
      SSL_CTX_set_read_ahead() and SSL_set_read_ahead() set whether we
      should read as many input bytes as possible (for non-blocking reads)
      or not. For example if <emphasis role="bold">x</emphasis> bytes are
      currently required by OpenSSL, but <emphasis role="bold">y</emphasis>
      bytes are available from the underlying BIO (where <emphasis role="bold">y</emphasis> &gt; <emphasis role="bold">x</emphasis>),
      then OpenSSL will read all <emphasis role="bold">y</emphasis> bytes
      into its buffer (providing that the buffer is large enough) if
      reading ahead is on, or <emphasis role="bold">x</emphasis> bytes
      otherwise. The parameter <emphasis role="bold">yes</emphasis> or
      <emphasis role="bold">m</emphasis> should be 0 to ensure reading
      ahead is off, or non zero otherwise.
    </para>
    <para>
      SSL_CTX_set_default_read_ahead is a synonym for
      SSL_CTX_set_read_ahead, and SSL_CTX_get_default_read_ahead is a
      synonym for SSL_CTX_get_read_ahead.
    </para>
    <para>
      SSL_CTX_get_read_ahead() and SSL_get_read_ahead() indicate whether
      reading ahead has been set or not.
    </para>
  </refsection>
  <refsection xml:id="ID-a16d5e0496febb51a295811a27586099"><title>NOTES</title>
    <para>
      These functions have no impact when used with DTLS. The return values
      for SSL_CTX_get_read_head() and SSL_get_read_ahead() are undefined
      for DTLS. Setting <emphasis role="bold">read_ahead</emphasis> can
      impact the behaviour of the SSL_pending() function (see
      <citerefentry> <refentrytitle>SSL_pending</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>).
    </para>
  </refsection>
  <refsection xml:id="ID-036f6a72846cd5a462411269cbfbe142"><title>RETURN VALUES</title>
    <para>
      SSL_get_read_ahead() and SSL_CTX_get_read_ahead() return 0 if reading
      ahead is off, and non zero otherwise.
    </para>
  </refsection>
  <refsection xml:id="ID-678f8f78253aecf71812d62041ee9308"><title>SEE ALSO</title>
    <para>
      <citerefentry> <refentrytitle>ssl</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>SSL_pending</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>
    </para>
  </refsection>
  <refsection xml:id="ID-7d4e425ac7ebd6acfb421e99ac90f01a"><title>COPYRIGHT</title>
    <para>
      Copyright 2015-2016 The OpenSSL Project Authors. All Rights Reserved.
    </para>
    <para>
      Licensed under the OpenSSL license (the "License").  You may not use
      this file except in compliance with the License.	You can obtain a
      copy in the file LICENSE in the source distribution or at <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.openssl.org/source/license.html">https://www.openssl.org/source/license.html</link>.
    </para>
  </refsection>
</refentry>