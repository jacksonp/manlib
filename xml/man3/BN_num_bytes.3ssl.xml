<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>BN_num_bytes.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>BN_num_bits, BN_num_bytes, BN_num_bits_word</refname>
<refpurpose>get BIGNUM size</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis>#include &lt;openssl/bn.h&gt;</synopsis>
<synopsis>int BN_num_bytes(const BIGNUM *a);</synopsis>
<synopsis>int BN_num_bits(const BIGNUM *a);</synopsis>
<synopsis>int BN_num_bits_word(BN_ULONG w);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="ID-ca81f9d921620e50180a1ac0b0ab9d2b"><title>DESCRIPTION</title>
    <para>
      BN_num_bytes() returns the size of a <emphasis role="bold">BIGNUM</emphasis> in bytes.
    </para>
    <para>
      BN_num_bits_word() returns the number of significant bits in a word.
      If we take 0x00000432 as an example, it returns 11, not 16, not 32.
      Basically, except for a zero, it returns <emphasis role="italic">floor(log2(w))+1</emphasis>.
    </para>
    <para>
      BN_num_bits() returns the number of significant bits in a <emphasis role="bold">BIGNUM</emphasis>, following the same principle as
      BN_num_bits_word().
    </para>
    <para>
      BN_num_bytes() is a macro.
    </para>
  </refsection>
  <refsection xml:id="ID-40a5dac28f9f45e3641debf3fd59307a"><title>RETURN VALUES</title>
    <para>
      The size.
    </para>
  </refsection>
  <refsection xml:id="ID-193e23ab24d11cd5cba556820aa9533c"><title>NOTES</title>
    <para>
      Some have tried using BN_num_bits() on individual numbers in RSA
      keys, DH keys and DSA keys, and found that they don't always come up
      with the number of bits they expected (something like 512, 1024,
      2048, ...).  This is because generating a number with some specific
      number of bits doesn't always set the highest bits, thereby making
      the number of <emphasis role="italic">significant</emphasis> bits a
      little lower.  If you want to know the "key size" of such a key,
      either use functions like RSA_size(), DH_size() and DSA_size(), or
      use BN_num_bytes() and multiply with 8 (although there's no real
      guarantee that will match the "key size", just a lot more
      probability).
    </para>
  </refsection>
  <refsection xml:id="ID-2121b55fca5c123afe8a12642945fbe9"><title>SEE ALSO</title>
    <para>
      <citerefentry> <refentrytitle>bn</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>DH_size</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>DSA_size</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>RSA_size</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>
    </para>
  </refsection>
  <refsection xml:id="ID-c001022e8886793f89888eb877945cf6"><title>COPYRIGHT</title>
    <para>
      Copyright 2000-2016 The OpenSSL Project Authors. All Rights Reserved.
    </para>
    <para>
      Licensed under the OpenSSL license (the "License").  You may not use
      this file except in compliance with the License.	You can obtain a
      copy in the file LICENSE in the source distribution or at <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.openssl.org/source/license.html">https://www.openssl.org/source/license.html</link>.
    </para>
  </refsection>
</refentry>