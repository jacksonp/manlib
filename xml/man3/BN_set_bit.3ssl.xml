<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>BN_set_bit.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>BN_set_bit, BN_clear_bit, BN_is_bit_set, BN_mask_bits, BN_lshift,
BN_lshift1, BN_rshift, BN_rshift1</refname>
<refpurpose>bit operations on BIGNUMs</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis>#include &lt;openssl/bn.h&gt;</synopsis>
<synopsis>int BN_set_bit(BIGNUM *a, int n);
int BN_clear_bit(BIGNUM *a, int n);</synopsis>
<synopsis>int BN_is_bit_set(const BIGNUM *a, int n);</synopsis>
<synopsis>int BN_mask_bits(BIGNUM *a, int n);</synopsis>
<synopsis>int BN_lshift(BIGNUM *r, const BIGNUM *a, int n);
int BN_lshift1(BIGNUM *r, BIGNUM *a);</synopsis>
<synopsis>int BN_rshift(BIGNUM *r, BIGNUM *a, int n);
int BN_rshift1(BIGNUM *r, BIGNUM *a);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="ID-3cfa8aa794e769491932a6c5a0c39cb9"><title>DESCRIPTION</title>
    <para>
      BN_set_bit() sets bit <emphasis role="bold">n</emphasis> in <emphasis role="bold">a</emphasis> to 1 (<literal role="code">a|=(1&amp;lt;&amp;lt;n)</literal>). The number is
      expanded if necessary.
    </para>
    <para>
      BN_clear_bit() sets bit <emphasis role="bold">n</emphasis> in
      <emphasis role="bold">a</emphasis> to 0 (<literal role="code">a&amp;=~(1&amp;lt;&amp;lt;n)</literal>). An error occurs
      if <emphasis role="bold">a</emphasis> is shorter than <emphasis role="bold">n</emphasis> bits.
    </para>
    <para>
      BN_is_bit_set() tests if bit <emphasis role="bold">n</emphasis> in
      <emphasis role="bold">a</emphasis> is set.
    </para>
    <para>
      BN_mask_bits() truncates <emphasis role="bold">a</emphasis> to an
      <emphasis role="bold">n</emphasis> bit number (<literal role="code">a&amp;=~((~0)&amp;gt;&amp;gt;n)</literal>).  An error
      occurs if <emphasis role="bold">a</emphasis> already is shorter than
      <emphasis role="bold">n</emphasis> bits.
    </para>
    <para>
      BN_lshift() shifts <emphasis role="bold">a</emphasis> left by
      <emphasis role="bold">n</emphasis> bits and places the result in
      <emphasis role="bold">r</emphasis> (<literal role="code">r=a*2^n</literal>). Note that <emphasis role="bold">n</emphasis> must be non-negative. BN_lshift1() shifts
      <emphasis role="bold">a</emphasis> left by one and places the result
      in <emphasis role="bold">r</emphasis> (<literal role="code">r=2*a</literal>).
    </para>
    <para>
      BN_rshift() shifts <emphasis role="bold">a</emphasis> right by
      <emphasis role="bold">n</emphasis> bits and places the result in
      <emphasis role="bold">r</emphasis> (<literal role="code">r=a/2^n</literal>). Note that <emphasis role="bold">n</emphasis> must be non-negative. BN_rshift1() shifts
      <emphasis role="bold">a</emphasis> right by one and places the result
      in <emphasis role="bold">r</emphasis> (<literal role="code">r=a/2</literal>).
    </para>
    <para>
      For the shift functions, <emphasis role="bold">r</emphasis> and
      <emphasis role="bold">a</emphasis> may be the same variable.
    </para>
  </refsection>
  <refsection xml:id="ID-1b554570ba9384482fc4935014de6717"><title>RETURN VALUES</title>
    <para>
      BN_is_bit_set() returns 1 if the bit is set, 0 otherwise.
    </para>
    <para>
      All other functions return 1 for success, 0 on error. The error codes
      can be obtained by <citerefentry>
      <refentrytitle>ERR_get_error</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>.
    </para>
  </refsection>
  <refsection xml:id="ID-63832892cf2c9f32eac5b8c57ed9436e"><title>SEE ALSO</title>
    <para>
      <citerefentry> <refentrytitle>bn</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>BN_num_bytes</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry> <refentrytitle>BN_add</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>
    </para>
  </refsection>
  <refsection xml:id="ID-d8a6b4b159977b4e06dee36158b6059c"><title>COPYRIGHT</title>
    <para>
      Copyright 2000-2016 The OpenSSL Project Authors. All Rights Reserved.
    </para>
    <para>
      Licensed under the OpenSSL license (the "License").  You may not use
      this file except in compliance with the License.	You can obtain a
      copy in the file LICENSE in the source distribution or at <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.openssl.org/source/license.html">https://www.openssl.org/source/license.html</link>.
    </para>
  </refsection>
</refentry>