<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>SSL_CTX_use_psk_identity_hint.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>SSL_CTX_use_psk_identity_hint, SSL_use_psk_identity_hint,
SSL_CTX_set_psk_server_callback, SSL_set_psk_server_callback</refname>
<refpurpose>set PSK
identity hint to use</refpurpose>
  </refnamediv>
  <screen></screen>
  <refsynopsisdiv>
<synopsis format="linespecific">#include &lt;openssl/ssl.h&gt;</synopsis>
<synopsis format="linespecific">int SSL_CTX_use_psk_identity_hint(SSL_CTX *ctx, const char *hint);
int SSL_use_psk_identity_hint(SSL *ssl, const char *hint);</synopsis>
<synopsis format="linespecific">void SSL_CTX_set_psk_server_callback(SSL_CTX *ctx,
       unsigned int (*callback)(SSL *ssl, const char *identity,
       unsigned char *psk, int max_psk_len));
void SSL_set_psk_server_callback(SSL *ssl,
       unsigned int (*callback)(SSL *ssl, const char *identity,
       unsigned char *psk, int max_psk_len));</synopsis>
<synopsis format="linespecific"/>
  </refsynopsisdiv>
  <refsection xml:id="sources.openssl.doc.ssl.SSL_CTX_use_psk_identity_hint.pod:DESCRIPTION"><title>DESCRIPTION</title>
    <para>
      SSL_CTX_use_psk_identity_hint() sets the given <emphasis role="bold">NULL</emphasis>-terminated PSK identity hint <emphasis role="bold">hint</emphasis> to SSL context object <emphasis role="bold">ctx</emphasis>. SSL_use_psk_identity_hint() sets the
      given <emphasis role="bold">NULL</emphasis>-terminated PSK identity
      hint <emphasis role="bold">hint</emphasis> to SSL connection object
      <emphasis role="bold">ssl</emphasis>. If <emphasis role="bold">hint</emphasis> is <emphasis role="bold">NULL</emphasis>
      the current hint from <emphasis role="bold">ctx</emphasis> or
      <emphasis role="bold">ssl</emphasis> is deleted.
    </para>
    <para>
      In the case where PSK identity hint is <emphasis role="bold">NULL</emphasis>, the server does not send the
      ServerKeyExchange message to the client.
    </para>
    <para>
      A server application must provide a callback function which is called
      when the server receives the ClientKeyExchange message from the
      client. The purpose of the callback function is to validate the
      received PSK identity and to fetch the pre-shared key used during the
      connection setup phase. The callback is set using functions
      SSL_CTX_set_psk_server_callback() or SSL_set_psk_server_callback().
      The callback function is given the connection in parameter <emphasis role="bold">ssl</emphasis>, <emphasis role="bold">NULL</emphasis>-terminated PSK identity sent by the
      client in parameter <emphasis role="bold">identity</emphasis>, and a
      buffer <emphasis role="bold">psk</emphasis> of length <emphasis role="bold">max_psk_len</emphasis> bytes where the pre-shared key is
      to be stored.
    </para>
    <screen></screen>
  </refsection>
  <refsection xml:id="sources.openssl.doc.ssl.SSL_CTX_use_psk_identity_hint.pod:RETURN_VALUES"><title>RETURN VALUES</title>
    <para>
      SSL_CTX_use_psk_identity_hint() and SSL_use_psk_identity_hint()
      return 1 on success, 0 otherwise.
    </para>
    <para>
      Return values from the server callback are interpreted as follows:
    </para>
    <para>
      <variablelist>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.ssl.SSL_CTX_use_psk_identity_hint.pod:0"/>0</term>
          <listitem>
            <para>
	      PSK identity was not found. An "unknown_psk_identity" alert
	      message will be sent and the connection setup fails.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.ssl.SSL_CTX_use_psk_identity_hint.pod:gt0"/>&gt;0</term>
          <listitem>
            <para>
	      PSK identity was found and the server callback has provided
	      the PSK successfully in parameter <emphasis role="bold">psk</emphasis>. Return value is the length of
	      <emphasis role="bold">psk</emphasis> in bytes. It is an error
	      to return a value greater than <emphasis role="bold">max_psk_len</emphasis>.
            </para>
            <para>
	      If the PSK identity was not found but the callback instructs
	      the protocol to continue anyway, the callback must provide
	      some random data to <emphasis role="bold">psk</emphasis> and
	      return the length of the random data, so the connection will
	      fail with decryption_error before it will be finished
	      completely.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </para>
  </refsection>
</refentry>