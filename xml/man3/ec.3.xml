<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>ec.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>ec</refname>
<refpurpose>EC key processing</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis format="linespecific"><emphasis role="bold">openssl</emphasis> <emphasis role="bold">ec</emphasis>
[<emphasis role="bold">-inform PEM|DER</emphasis>]
[<emphasis role="bold">-outform PEM|DER</emphasis>]
[<emphasis role="bold">-in filename</emphasis>]
[<emphasis role="bold">-passin arg</emphasis>]
[<emphasis role="bold">-out filename</emphasis>]
[<emphasis role="bold">-passout arg</emphasis>]
[<emphasis role="bold">-des</emphasis>]
[<emphasis role="bold">-des3</emphasis>]
[<emphasis role="bold">-idea</emphasis>]
[<emphasis role="bold">-text</emphasis>]
[<emphasis role="bold">-noout</emphasis>]
[<emphasis role="bold">-param_out</emphasis>]
[<emphasis role="bold">-pubin</emphasis>]
[<emphasis role="bold">-pubout</emphasis>]
[<emphasis role="bold">-conv_form arg</emphasis>]
[<emphasis role="bold">-param_enc arg</emphasis>]
[<emphasis role="bold">-engine id</emphasis>]</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="sources.openssl.doc.apps.ec.pod:DESCRIPTION"><title>DESCRIPTION</title>
    <para>
      The <emphasis role="bold">ec</emphasis> command processes EC keys.
      They can be converted between various forms and their components
      printed out. <emphasis role="bold">Note</emphasis> OpenSSL uses the
      private key format specified in 'SEC 1: Elliptic Curve Cryptography'
      (http://www.secg.org/). To convert a OpenSSL EC private key into the
      PKCS#8 private key format use the <emphasis role="bold">pkcs8</emphasis> command. 
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.ec.pod:COMMAND_OPTIONS"><title>COMMAND OPTIONS</title>
    <para>
      <variablelist>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ec.pod:-inform_DERPEM"/><emphasis role="bold">-inform DER|PEM</emphasis></term>
          <listitem>
            <para>
	      This specifies the input format. The <emphasis role="bold">DER</emphasis> option with a private key uses an
	      ASN.1 DER encoded SEC1 private key. When used with a public
	      key it uses the SubjectPublicKeyInfo structure as specified
	      in RFC 3280. The <emphasis role="bold">PEM</emphasis> form is
	      the default format: it consists of the <emphasis role="bold">DER</emphasis> format base64 encoded with
	      additional header and footer lines. In the case of a private
	      key PKCS#8 format is also accepted.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ec.pod:-outform_DERPEM"/><emphasis role="bold">-outform DER|PEM</emphasis></term>
          <listitem>
            <para>
	      This specifies the output format, the options have the same
	      meaning as the <emphasis role="bold">-inform</emphasis>
	      option. 
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ec.pod:-in_filename"/><emphasis role="bold">-in filename</emphasis></term>
          <listitem>
            <para>
	      This specifies the input filename to read a key from or
	      standard input if this option is not specified. If the key is
	      encrypted a pass phrase will be prompted for.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ec.pod:-passin_arg"/><emphasis role="bold">-passin arg</emphasis></term>
          <listitem>
            <para>
	      the input file password source. For more information about
	      the format of <emphasis role="bold">arg</emphasis> see the
	      <emphasis role="bold">PASS PHRASE ARGUMENTS</emphasis>
	      section in openssl(1).
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ec.pod:-out_filename"/><emphasis role="bold">-out filename</emphasis></term>
          <listitem>
            <para>
	      This specifies the output filename to write a key to or
	      standard output by is not specified. If any encryption
	      options are set then a pass phrase will be prompted for. The
	      output filename should <emphasis role="bold">not</emphasis>
	      be the same as the input filename.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ec.pod:-passout_arg"/><emphasis role="bold">-passout arg</emphasis></term>
          <listitem>
            <para>
	      the output file password source. For more information about
	      the format of <emphasis role="bold">arg</emphasis> see the
	      <emphasis role="bold">PASS PHRASE ARGUMENTS</emphasis>
	      section in openssl(1).
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ec.pod:-des-des3-idea"/><emphasis role="bold">-des|-des3|-idea</emphasis></term>
          <listitem>
            <para>
	      These options encrypt the private key with the DES, triple
	      DES, IDEA or any other cipher supported by OpenSSL before
	      outputting it. A pass phrase is prompted for. If none of
	      these options is specified the key is written in plain text.
	      This means that using the <emphasis role="bold">ec</emphasis>
	      utility to read in an encrypted key with no encryption option
	      can be used to remove the pass phrase from a key, or by
	      setting the encryption options it can be use to add or change
	      the pass phrase. These options can only be used with PEM
	      format output files. 
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ec.pod:-text"/><emphasis role="bold">-text</emphasis></term>
          <listitem>
            <para>
	      prints out the public, private key components and parameters.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ec.pod:-noout"/><emphasis role="bold">-noout</emphasis></term>
          <listitem>
            <para>
	      this option prevents output of the encoded version of the
	      key.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ec.pod:-modulus"/><emphasis role="bold">-modulus</emphasis></term>
          <listitem>
            <para>
	      this option prints out the value of the public key component
	      of the key.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ec.pod:-pubin"/><emphasis role="bold">-pubin</emphasis></term>
          <listitem>
            <para>
	      by default a private key is read from the input file: with
	      this option a public key is read instead.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ec.pod:-pubout"/><emphasis role="bold">-pubout</emphasis></term>
          <listitem>
            <para>
	      by default a private key is output. With this option a public
	      key will be output instead. This option is automatically set
	      if the input is a public key.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ec.pod:-conv_form"/><emphasis role="bold">-conv_form</emphasis></term>
          <listitem>
            <para>
	      This specifies how the points on the elliptic curve are
	      converted into octet strings. Possible values are: <emphasis role="bold">compressed</emphasis> (the default value),
	      <emphasis role="bold">uncompressed</emphasis> and <emphasis role="bold">hybrid</emphasis>. For more information regarding
	      the point conversion forms please read the X9.62 standard.
	      <emphasis role="bold">Note</emphasis> Due to patent issues
	      the <emphasis role="bold">compressed</emphasis> option is
	      disabled by default for binary curves and can be enabled by
	      defining the preprocessor macro <emphasis role="bold">OPENSSL_EC_BIN_PT_COMP</emphasis> at compile
	      time.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ec.pod:-param_enc_arg"/><emphasis role="bold">-param_enc arg</emphasis></term>
          <listitem>
            <para>
	      This specifies how the elliptic curve parameters are encoded.
	      Possible value are: <emphasis role="bold">named_curve</emphasis>, i.e. the ec parameters
	      are specified by a OID, or <emphasis role="bold">explicit</emphasis> where the ec parameters are
	      explicitly given (see RFC 3279 for the definition of the EC
	      parameters structures). The default value is <emphasis role="bold">named_curve</emphasis>. <emphasis role="bold">Note</emphasis> the <emphasis role="bold">implicitlyCA</emphasis> alternative ,as specified
	      in RFC 3279, is currently not implemented in OpenSSL. 
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ec.pod:-engine_id"/><emphasis role="bold">-engine id</emphasis></term>
          <listitem>
            <para>
	      specifying an engine (by its unique <emphasis role="bold">id</emphasis> string) will cause <emphasis role="bold">ec</emphasis> to attempt to obtain a functional
	      reference to the specified engine, thus initialising it if
	      needed. The engine will then be set as the default for all
	      available algorithms.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.ec.pod:NOTES"><title>NOTES</title>
    <para>
      The PEM private key format uses the header and footer lines:
    </para>
    <screen>-----BEGIN EC PRIVATE KEY-----
-----END EC PRIVATE KEY-----</screen>
    <para>
      The PEM public key format uses the header and footer lines:
    </para>
    <screen>-----BEGIN PUBLIC KEY-----
-----END PUBLIC KEY-----</screen>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.ec.pod:EXAMPLES"><title>EXAMPLES</title>
    <para>
      To encrypt a private key using triple DES:
    </para>
    <screen>openssl ec -in key.pem -des3 -out keyout.pem</screen>
    <para>
      To convert a private key from PEM to DER format:
    </para>
    <screen>openssl ec -in key.pem -outform DER -out keyout.der</screen>
    <para>
      To print out the components of a private key to standard output:
    </para>
    <screen>openssl ec -in key.pem -text -noout</screen>
    <para>
      To just output the public part of a private key:
    </para>
    <screen>openssl ec -in key.pem -pubout -out pubkey.pem</screen>
    <para>
      To change the parameters encoding to <emphasis role="bold">explicit</emphasis>:
    </para>
    <screen>openssl ec -in key.pem -param_enc explicit -out keyout.pem</screen>
    <para>
      To change the point conversion form to <emphasis role="bold">compressed</emphasis>:
    </para>
    <screen>openssl ec -in key.pem -conv_form compressed -out keyout.pem</screen>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.ec.pod:SEE_ALSO"><title>SEE ALSO</title>
    <para>
      ecparam(1), dsa(1), rsa(1)
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.ec.pod:HISTORY"><title>HISTORY</title>
    <para>
      The ec command was first introduced in OpenSSL 0.9.8.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.ec.pod:AUTHOR"><title>AUTHOR</title>
    <para>
      Nils Larsch for the OpenSSL project (http://www.openssl.org).
    </para>
  </refsection>
</refentry>