<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>OCSP_REQUEST_new.pod</refentrytitle>
  </refmeta>
  <para>
    OCSP_REQUEST_new, OCSP_REQUEST_free, OCSP_request_add0_id,
    OCSP_request_sign, OCSP_request_add1_cert, OCSP_request_onereq_count,
    OCSP_request_onereq_get0 - OCSP request functions.
  </para>
  <refsynopsisdiv>
<synopsis>#include &lt;openssl/ocsp.h&gt;</synopsis>
<synopsis>OCSP_REQUEST *OCSP_REQUEST_new(void);
void OCSP_REQUEST_free(OCSP_REQUEST *req);</synopsis>
<synopsis>OCSP_ONEREQ *OCSP_request_add0_id(OCSP_REQUEST *req, OCSP_CERTID *cid);</synopsis>
<synopsis>int OCSP_request_sign(OCSP_REQUEST *req,
                      X509 *signer, EVP_PKEY *key, const EVP_MD *dgst,
                      STACK_OF(X509) *certs, unsigned long flags);</synopsis>
<synopsis>int OCSP_request_add1_cert(OCSP_REQUEST *req, X509 *cert);</synopsis>
<synopsis>int OCSP_request_onereq_count(OCSP_REQUEST *req);
OCSP_ONEREQ *OCSP_request_onereq_get0(OCSP_REQUEST *req, int i);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="ID-e08257d6dd5de13585ae968a7c5b798a"><title>DESCRIPTION</title>
    <para>
      OCSP_REQUEST_new() allocates and returns an empty <emphasis role="bold">OCSP_REQUEST</emphasis> structure.
    </para>
    <para>
      OCSP_REQUEST_free() frees up the request structure <emphasis role="bold">req</emphasis>.
    </para>
    <para>
      OCSP_request_add0_id() adds certificate ID <emphasis role="bold">cid</emphasis> to <emphasis role="bold">req</emphasis>.
      It returns the <emphasis role="bold">OCSP_ONEREQ</emphasis> structure
      added so an application can add additional extensions to the request.
      The <emphasis role="bold">id</emphasis> parameter <emphasis role="bold">MUST NOT</emphasis> be freed up after the operation.
    </para>
    <para>
      OCSP_request_sign() signs OCSP request <emphasis role="bold">req</emphasis> using certificate <emphasis role="bold">signer</emphasis>, private key <emphasis role="bold">key</emphasis>, digest <emphasis role="bold">dgst</emphasis> and additional certificates <emphasis role="bold">certs</emphasis>. If the <emphasis role="bold">flags</emphasis> option <emphasis role="bold">OCSP_NOCERTS</emphasis> is set then no certificates will
      be included in the request.
    </para>
    <para>
      OCSP_request_add1_cert() adds certificate <emphasis role="bold">cert</emphasis> to request <emphasis role="bold">req</emphasis>. The application is responsible for
      freeing up <emphasis role="bold">cert</emphasis> after use.
    </para>
    <para>
      OCSP_request_onereq_count() returns the total number of <emphasis role="bold">OCSP_ONEREQ</emphasis> structures in <emphasis role="bold">req</emphasis>.
    </para>
    <para>
      OCSP_request_onereq_get0() returns an internal pointer to the
      <emphasis role="bold">OCSP_ONEREQ</emphasis> contained in <emphasis role="bold">req</emphasis> of index <emphasis role="bold">i</emphasis>. The index value <emphasis role="bold">i</emphasis> runs from 0 to
      OCSP_request_onereq_count(req) - 1.
    </para>
  </refsection>
  <refsection xml:id="ID-bd5968e0402de70add9c31b31ef43590"><title>RETURN VALUES</title>
    <para>
      OCSP_REQUEST_new() returns an empty <emphasis role="bold">OCSP_REQUEST</emphasis> structure or <emphasis role="bold">NULL</emphasis> if an error occurred.
    </para>
    <para>
      OCSP_request_add0_id() returns the <emphasis role="bold">OCSP_ONEREQ</emphasis> structure containing <emphasis role="bold">cid</emphasis> or <emphasis role="bold">NULL</emphasis>
      if an error occurred.
    </para>
    <para>
      OCSP_request_sign() and OCSP_request_add1_cert() return 1 for success
      and 0 for failure.
    </para>
    <para>
      OCSP_request_onereq_count() returns the total number of <emphasis role="bold">OCSP_ONEREQ</emphasis> structures in <emphasis role="bold">req</emphasis>.
    </para>
    <para>
      OCSP_request_onereq_get0() returns a pointer to an <emphasis role="bold">OCSP_ONEREQ</emphasis> structure or <emphasis role="bold">NULL</emphasis> if the index value is out or range.
    </para>
  </refsection>
  <refsection xml:id="ID-6c92442d9533a2bae5c6217f204a9d7c"><title>NOTES</title>
    <para>
      An OCSP request structure contains one or more <emphasis role="bold">OCSP_ONEREQ</emphasis> structures corresponding to each
      certificate.
    </para>
    <para>
      OCSP_request_onereq_count() and OCSP_request_onereq_get0() are mainly
      used by OCSP responders.
    </para>
  </refsection>
  <refsection xml:id="ID-59ede92453137f808d2162acca0529fe"><title>EXAMPLE</title>
    <para>
      Create an <emphasis role="bold">OCSP_REQUEST</emphasis> structure for
      certificate <emphasis role="bold">cert</emphasis> with issuer
      <emphasis role="bold">issuer</emphasis>:
    </para>
    <screen>OCSP_REQUEST *req;
OCSP_ID *cid;

req = OCSP_REQUEST_new();
if (req == NULL)
   /* error */
cid = OCSP_cert_to_id(EVP_sha1(), cert, issuer);
if (cid == NULL)
   /* error */

if (OCSP_REQUEST_add0_id(req, cid) == NULL)
   /* error */

/* Do something with req, e.g. query responder */

OCSP_REQUEST_free(req);</screen>
  </refsection>
  <refsection xml:id="ID-3e3c1f5e460d47a97941724b5e7a9d03"><title>SEE ALSO</title>
    <para>
      <citerefentry> <refentrytitle>crypto</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>OCSP_cert_to_id</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>OCSP_request_add1_nonce</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>OCSP_response_find_status</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>OCSP_response_status</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>OCSP_sendreq_new</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>
    </para>
  </refsection>
</refentry>