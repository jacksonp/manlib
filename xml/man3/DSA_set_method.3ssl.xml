<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>DSA_set_method.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>DSA_set_default_method, DSA_get_default_method,
DSA_set_method, DSA_new_method, DSA_OpenSSL</refname>
<refpurpose>select DSA method</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis>#include &lt;openssl/dsa.h&gt;</synopsis>
<synopsis>void DSA_set_default_method(const DSA_METHOD *meth);</synopsis>
<synopsis>const DSA_METHOD *DSA_get_default_method(void);</synopsis>
<synopsis>int DSA_set_method(DSA *dsa, const DSA_METHOD *meth);</synopsis>
<synopsis>DSA *DSA_new_method(ENGINE *engine);</synopsis>
<synopsis>DSA_METHOD *DSA_OpenSSL(void);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="ID-2a01b0e873724fc53b48cc830f0926f8"><title>DESCRIPTION</title>
    <para>
      A <emphasis role="bold">DSA_METHOD</emphasis> specifies the functions
      that OpenSSL uses for DSA operations. By modifying the method,
      alternative implementations such as hardware accelerators may be
      used. IMPORTANT: See the NOTES section for important information
      about how these DSA API functions are affected by the use of
      <emphasis role="bold">ENGINE</emphasis> API calls.
    </para>
    <para>
      Initially, the default DSA_METHOD is the OpenSSL internal
      implementation, as returned by DSA_OpenSSL().
    </para>
    <para>
      DSA_set_default_method() makes <emphasis role="bold">meth</emphasis>
      the default method for all DSA structures created later. <emphasis role="bold">NB</emphasis>: This is true only whilst no ENGINE has
      been set as a default for DSA, so this function is no longer
      recommended.
    </para>
    <para>
      DSA_get_default_method() returns a pointer to the current default
      DSA_METHOD. However, the meaningfulness of this result is dependent
      on whether the ENGINE API is being used, so this function is no
      longer recommended.
    </para>
    <para>
      DSA_set_method() selects <emphasis role="bold">meth</emphasis> to
      perform all operations using the key <emphasis role="bold">rsa</emphasis>. This will replace the DSA_METHOD used by
      the DSA key and if the previous method was supplied by an ENGINE, the
      handle to that ENGINE will be released during the change. It is
      possible to have DSA keys that only work with certain DSA_METHOD
      implementations (eg. from an ENGINE module that supports embedded
      hardware-protected keys), and in such cases attempting to change the
      DSA_METHOD for the key can have unexpected results. See
      <citerefentry> <refentrytitle>DSA_meth_new</refentrytitle>
      </citerefentry> for information on constructing custom DSA_METHOD
      objects;
    </para>
    <para>
      DSA_new_method() allocates and initializes a DSA structure so that
      <emphasis role="bold">engine</emphasis> will be used for the DSA
      operations. If <emphasis role="bold">engine</emphasis> is NULL, the
      default engine for DSA operations is used, and if no default ENGINE
      is set, the DSA_METHOD controlled by DSA_set_default_method() is
      used.
    </para>
  </refsection>
  <refsection xml:id="ID-8a010a8edf29a2b0b8f46c7244d0ca3a"><title>RETURN VALUES</title>
    <para>
      DSA_OpenSSL() and DSA_get_default_method() return pointers to the
      respective <emphasis role="bold">DSA_METHOD</emphasis>s.
    </para>
    <para>
      DSA_set_default_method() returns no value.
    </para>
    <para>
      DSA_set_method() returns non-zero if the provided <emphasis role="bold">meth</emphasis> was successfully set as the method for
      <emphasis role="bold">dsa</emphasis> (including unloading the ENGINE
      handle if the previous method was supplied by an ENGINE).
    </para>
    <para>
      DSA_new_method() returns NULL and sets an error code that can be
      obtained by <citerefentry>
      <refentrytitle>ERR_get_error</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry> if the allocation fails. Otherwise it returns a
      pointer to the newly allocated structure.
    </para>
  </refsection>
  <refsection xml:id="ID-74ecb9e45faa4e8b1653def766776751"><title>SEE ALSO</title>
    <para>
      <citerefentry> <refentrytitle>dsa</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>DSA_new</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>DSA_meth_new</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>
    </para>
  </refsection>
  <refsection xml:id="ID-f5c03051ff2a973428694e405466c1d1"><title>COPYRIGHT</title>
    <para>
      Copyright 2000-2016 The OpenSSL Project Authors. All Rights Reserved.
    </para>
    <para>
      Licensed under the OpenSSL license (the "License").  You may not use
      this file except in compliance with the License.	You can obtain a
      copy in the file LICENSE in the source distribution or at <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.openssl.org/source/license.html">https://www.openssl.org/source/license.html</link>.
    </para>
  </refsection>
</refentry>