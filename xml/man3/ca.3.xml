<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>ca.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>ca</refname>
<refpurpose>sample minimal CA application</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis format="linespecific"><emphasis role="bold">openssl</emphasis> <emphasis role="bold">ca</emphasis>
[<emphasis role="bold">-verbose</emphasis>]
[<emphasis role="bold">-config filename</emphasis>]
[<emphasis role="bold">-name section</emphasis>]
[<emphasis role="bold">-gencrl</emphasis>]
[<emphasis role="bold">-revoke file</emphasis>]
[<emphasis role="bold">-crl_reason reason</emphasis>]
[<emphasis role="bold">-crl_hold instruction</emphasis>]
[<emphasis role="bold">-crl_compromise time</emphasis>]
[<emphasis role="bold">-crl_CA_compromise time</emphasis>]
[<emphasis role="bold">-crldays days</emphasis>]
[<emphasis role="bold">-crlhours hours</emphasis>]
[<emphasis role="bold">-crlexts section</emphasis>]
[<emphasis role="bold">-startdate date</emphasis>]
[<emphasis role="bold">-enddate date</emphasis>]
[<emphasis role="bold">-days arg</emphasis>]
[<emphasis role="bold">-md arg</emphasis>]
[<emphasis role="bold">-policy arg</emphasis>]
[<emphasis role="bold">-keyfile arg</emphasis>]
[<emphasis role="bold">-key arg</emphasis>]
[<emphasis role="bold">-passin arg</emphasis>]
[<emphasis role="bold">-cert file</emphasis>]
[<emphasis role="bold">-selfsign</emphasis>]
[<emphasis role="bold">-in file</emphasis>]
[<emphasis role="bold">-out file</emphasis>]
[<emphasis role="bold">-notext</emphasis>]
[<emphasis role="bold">-outdir dir</emphasis>]
[<emphasis role="bold">-infiles</emphasis>]
[<emphasis role="bold">-spkac file</emphasis>]
[<emphasis role="bold">-ss_cert file</emphasis>]
[<emphasis role="bold">-preserveDN</emphasis>]
[<emphasis role="bold">-noemailDN</emphasis>]
[<emphasis role="bold">-batch</emphasis>]
[<emphasis role="bold">-msie_hack</emphasis>]
[<emphasis role="bold">-extensions section</emphasis>]
[<emphasis role="bold">-extfile section</emphasis>]
[<emphasis role="bold">-engine id</emphasis>]
[<emphasis role="bold">-subj arg</emphasis>]
[<emphasis role="bold">-utf8</emphasis>]
[<emphasis role="bold">-multivalue-rdn</emphasis>]</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="sources.openssl.doc.apps.ca.pod:DESCRIPTION"><title>DESCRIPTION</title>
    <para>
      The <emphasis role="bold">ca</emphasis> command is a minimal CA
      application. It can be used to sign certificate requests in a variety
      of forms and generate CRLs it also maintains a text database of
      issued certificates and their status.
    </para>
    <para>
      The options descriptions will be divided into each purpose.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.ca.pod:CA_OPTIONS"><title>CA OPTIONS</title>
    <para>
      <variablelist>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-config_filename"/><emphasis role="bold">-config filename</emphasis></term>
          <listitem>
            <para>
	      specifies the configuration file to use.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-name_section"/><emphasis role="bold">-name section</emphasis></term>
          <listitem>
            <para>
	      specifies the configuration file section to use (overrides
	      <emphasis role="bold">default_ca</emphasis> in the <emphasis role="bold">ca</emphasis> section).
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-in_filename"/><emphasis role="bold">-in filename</emphasis></term>
          <listitem>
            <para>
	      an input filename containing a single certificate request to
	      be signed by the CA.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-ss_cert_filename"/><emphasis role="bold">-ss_cert filename</emphasis></term>
          <listitem>
            <para>
	      a single self signed certificate to be signed by the CA.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-spkac_filename"/><emphasis role="bold">-spkac filename</emphasis></term>
          <listitem>
            <para>
	      a file containing a single Netscape signed public key and
	      challenge and additional field values to be signed by the CA.
	      See the <emphasis role="bold">SPKAC FORMAT</emphasis> section
	      for information on the required format.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-infiles"/><emphasis role="bold">-infiles</emphasis></term>
          <listitem>
            <para>
	      if present this should be the last option, all subsequent
	      arguments are assumed to the the names of files containing
	      certificate requests.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-out_filename"/><emphasis role="bold">-out filename</emphasis></term>
          <listitem>
            <para>
	      the output file to output certificates to. The default is
	      standard output. The certificate details will also be printed
	      out to this file.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-outdir_directory"/><emphasis role="bold">-outdir directory</emphasis></term>
          <listitem>
            <para>
	      the directory to output certificates to. The certificate will
	      be written to a filename consisting of the serial number in
	      hex with ".pem" appended.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-cert"/><emphasis role="bold">-cert</emphasis></term>
          <listitem>
            <para>
	      the CA certificate file.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-keyfile_filename"/><emphasis role="bold">-keyfile filename</emphasis></term>
          <listitem>
            <para>
	      the private key to sign requests with.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-key_password"/><emphasis role="bold">-key password</emphasis></term>
          <listitem>
            <para>
	      the password used to encrypt the private key. Since on some
	      systems the command line arguments are visible (e.g. Unix
	      with the 'ps' utility) this option should be used with
	      caution.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-selfsign"/><emphasis role="bold">-selfsign</emphasis></term>
          <listitem>
            <para>
	      indicates the issued certificates are to be signed with the
	      key the certificate requests were signed with (given with
	      <emphasis role="bold">-keyfile</emphasis>). Cerificate
	      requests signed with a different key are ignored.  If
	      <emphasis role="bold">-spkac</emphasis>, <emphasis role="bold">-ss_cert</emphasis> or <emphasis role="bold">-gencrl</emphasis> are given, <emphasis role="bold">-selfsign</emphasis> is ignored.
            </para>
            <para>
	      A consequence of using <emphasis role="bold">-selfsign</emphasis> is that the self-signed
	      certificate appears among the entries in the certificate
	      database (see the configuration option <emphasis role="bold">database</emphasis>), and uses the same serial
	      number counter as all other certificates sign with the
	      self-signed certificate.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-passin_arg"/><emphasis role="bold">-passin arg</emphasis></term>
          <listitem>
            <para>
	      the key password source. For more information about the
	      format of <emphasis role="bold">arg</emphasis> see the
	      <emphasis role="bold">PASS PHRASE ARGUMENTS</emphasis>
	      section in openssl(1).
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-verbose"/><emphasis role="bold">-verbose</emphasis></term>
          <listitem>
            <para>
	      this prints extra details about the operations being
	      performed.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-notext"/><emphasis role="bold">-notext</emphasis></term>
          <listitem>
            <para>
	      don't output the text form of a certificate to the output
	      file.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-startdate_date"/><emphasis role="bold">-startdate date</emphasis></term>
          <listitem>
            <para>
	      this allows the start date to be explicitly set. The format
	      of the date is YYMMDDHHMMSSZ (the same as an ASN1 UTCTime
	      structure).
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-enddate_date"/><emphasis role="bold">-enddate date</emphasis></term>
          <listitem>
            <para>
	      this allows the expiry date to be explicitly set. The format
	      of the date is YYMMDDHHMMSSZ (the same as an ASN1 UTCTime
	      structure).
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-days_arg"/><emphasis role="bold">-days arg</emphasis></term>
          <listitem>
            <para>
	      the number of days to certify the certificate for.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-md_alg"/><emphasis role="bold">-md alg</emphasis></term>
          <listitem>
            <para>
	      the message digest to use. Possible values include md5, sha1
	      and mdc2. This option also applies to CRLs.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-policy_arg"/><emphasis role="bold">-policy arg</emphasis></term>
          <listitem>
            <para>
	      this option defines the CA "policy" to use. This is a section
	      in the configuration file which decides which fields should
	      be mandatory or match the CA certificate. Check out the
	      <emphasis role="bold">POLICY FORMAT</emphasis> section for
	      more information.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-msie_hack"/><emphasis role="bold">-msie_hack</emphasis></term>
          <listitem>
            <para>
	      this is a legacy option to make <emphasis role="bold">ca</emphasis> work with very old versions of the
	      IE certificate enrollment control "certenr3". It used
	      UniversalStrings for almost everything. Since the old control
	      has various security bugs its use is strongly discouraged.
	      The newer control "Xenroll" does not need this option.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-preserveDN"/><emphasis role="bold">-preserveDN</emphasis></term>
          <listitem>
            <para>
	      Normally the DN order of a certificate is the same as the
	      order of the fields in the relevant policy section. When this
	      option is set the order is the same as the request. This is
	      largely for compatibility with the older IE enrollment
	      control which would only accept certificates if their DNs
	      match the order of the request. This is not needed for
	      Xenroll. 
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-noemailDN"/><emphasis role="bold">-noemailDN</emphasis></term>
          <listitem>
            <para>
	      The DN of a certificate can contain the EMAIL field if
	      present in the request DN, however it is good policy just
	      having the e-mail set into the altName extension of the
	      certificate. When this option is set the EMAIL field is
	      removed from the certificate' subject and set only in the,
	      eventually present, extensions. The <emphasis role="bold">email_in_dn</emphasis> keyword can be used in the
	      configuration file to enable this behaviour.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-batch"/><emphasis role="bold">-batch</emphasis></term>
          <listitem>
            <para>
	      this sets the batch mode. In this mode no questions will be
	      asked and all certificates will be certified automatically.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-extensions_section"/><emphasis role="bold">-extensions section</emphasis></term>
          <listitem>
            <para>
	      the section of the configuration file containing certificate
	      extensions to be added when a certificate is issued (defaults
	      to <emphasis role="bold">x509_extensions</emphasis> unless
	      the <emphasis role="bold">-extfile</emphasis> option is
	      used). If no extension section is present then, a V1
	      certificate is created. If the extension section is present
	      (even if it is empty), then a V3 certificate is created. See
	      the:w x509v3_config(5) manual page for details of the
	      extension section format.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-extfile_file"/><emphasis role="bold">-extfile file</emphasis></term>
          <listitem>
            <para>
	      an additional configuration file to read certificate
	      extensions from (using the default section unless the
	      <emphasis role="bold">-extensions</emphasis> option is also
	      used).
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-engine_id"/><emphasis role="bold">-engine id</emphasis></term>
          <listitem>
            <para>
	      specifying an engine (by its unique <emphasis role="bold">id</emphasis> string) will cause <emphasis role="bold">ca</emphasis> to attempt to obtain a functional
	      reference to the specified engine, thus initialising it if
	      needed. The engine will then be set as the default for all
	      available algorithms.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-subj_arg"/><emphasis role="bold">-subj arg</emphasis></term>
          <listitem>
            <para>
	      supersedes subject name given in the request. The arg must be
	      formatted as <emphasis role="italic">/type0=value0/type1=value1/type2=...</emphasis>,
	      characters may be escaped by \ (backslash), no spaces are
	      skipped.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-utf8"/><emphasis role="bold">-utf8</emphasis></term>
          <listitem>
            <para>
	      this option causes field values to be interpreted as UTF8
	      strings, by default they are interpreted as ASCII. This means
	      that the field values, whether prompted from a terminal or
	      obtained from a configuration file, must be valid UTF8
	      strings. 
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-multivalue-rdn"/><emphasis role="bold">-multivalue-rdn</emphasis></term>
          <listitem>
            <para>
	      this option causes the -subj argument to be interpretedt with
	      full support for multivalued RDNs. Example:
            </para>
            <para>
	      <emphasis role="italic">/DC=org/DC=OpenSSL/DC=users/UID=123456+CN=John
	      Doe</emphasis>
            </para>
            <para>
	      If -multi-rdn is not used then the UID value is <emphasis role="italic">123456+CN=John Doe</emphasis>.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.ca.pod:CRL_OPTIONS"><title>CRL OPTIONS</title>
    <para>
      <variablelist>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-gencrl"/><emphasis role="bold">-gencrl</emphasis></term>
          <listitem>
            <para>
	      this option generates a CRL based on information in the index
	      file.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-crldays_num"/><emphasis role="bold">-crldays num</emphasis></term>
          <listitem>
            <para>
	      the number of days before the next CRL is due. That is the
	      days from now to place in the CRL nextUpdate field.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-crlhours_num"/><emphasis role="bold">-crlhours num</emphasis></term>
          <listitem>
            <para>
	      the number of hours before the next CRL is due.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-revoke_filename"/><emphasis role="bold">-revoke filename</emphasis></term>
          <listitem>
            <para>
	      a filename containing a certificate to revoke.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-crl_reason_reason"/><emphasis role="bold">-crl_reason reason</emphasis></term>
          <listitem>
            <para>
	      revocation reason, where <emphasis role="bold">reason</emphasis> is one of: <emphasis role="bold">unspecified</emphasis>, <emphasis role="bold">keyCompromise</emphasis>, <emphasis role="bold">CACompromise</emphasis>, <emphasis role="bold">affiliationChanged</emphasis>, <emphasis role="bold">superseded</emphasis>, <emphasis role="bold">cessationOfOperation</emphasis>, <emphasis role="bold">certificateHold</emphasis> or <emphasis role="bold">removeFromCRL</emphasis>. The matching of
	      <emphasis role="bold">reason</emphasis> is case insensitive.
	      Setting any revocation reason will make the CRL v2.
            </para>
            <para>
	      In practive <emphasis role="bold">removeFromCRL</emphasis> is
	      not particularly useful because it is only used in delta CRLs
	      which are not currently implemented.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-crl_hold_instruction"/><emphasis role="bold">-crl_hold instruction</emphasis></term>
          <listitem>
            <para>
	      This sets the CRL revocation reason code to <emphasis role="bold">certificateHold</emphasis> and the hold
	      instruction to <emphasis role="bold">instruction</emphasis>
	      which must be an OID. Although any OID can be used only
	      <emphasis role="bold">holdInstructionNone</emphasis> (the use
	      of which is discouraged by RFC2459) <emphasis role="bold">holdInstructionCallIssuer</emphasis> or <emphasis role="bold">holdInstructionReject</emphasis> will normally be
	      used.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-crl_compromise_time"/><emphasis role="bold">-crl_compromise time</emphasis></term>
          <listitem>
            <para>
	      This sets the revocation reason to <emphasis role="bold">keyCompromise</emphasis> and the compromise time
	      to <emphasis role="bold">time</emphasis>. <emphasis role="bold">time</emphasis> should be in GeneralizedTime
	      format that is <emphasis role="bold">YYYYMMDDHHMMSSZ</emphasis>.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-crl_CA_compromise_time"/><emphasis role="bold">-crl_CA_compromise time</emphasis></term>
          <listitem>
            <para>
	      This is the same as <emphasis role="bold">crl_compromise</emphasis> except the revocation
	      reason is set to <emphasis role="bold">CACompromise</emphasis>.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:-crlexts_section"/><emphasis role="bold">-crlexts section</emphasis></term>
          <listitem>
            <para>
	      the section of the configuration file containing CRL
	      extensions to include. If no CRL extension section is present
	      then a V1 CRL is created, if the CRL extension section is
	      present (even if it is empty) then a V2 CRL is created. The
	      CRL extensions specified are CRL extensions and <emphasis role="bold">not</emphasis> CRL entry extensions.	It should
	      be noted that some software (for example Netscape) can't
	      handle V2 CRLs. See x509v3_config(5) manual page for details
	      of the extension section format.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.ca.pod:CONFIGURATION_FILE_OPTIONS"><title>CONFIGURATION FILE OPTIONS</title>
    <para>
      The section of the configuration file containing options for
      <emphasis role="bold">ca</emphasis> is found as follows: If the
      <emphasis role="bold">-name</emphasis> command line option is used,
      then it names the section to be used. Otherwise the section to be
      used must be named in the <emphasis role="bold">default_ca</emphasis>
      option of the <emphasis role="bold">ca</emphasis> section of the
      configuration file (or in the default section of the configuration
      file). Besides <emphasis role="bold">default_ca</emphasis>, the
      following options are read directly from the <emphasis role="bold">ca</emphasis> section: RANDFILE preserve msie_hack With
      the exception of <emphasis role="bold">RANDFILE</emphasis>, this is
      probably a bug and may change in future releases.
    </para>
    <para>
      Many of the configuration file options are identical to command line
      options. Where the option is present in the configuration file and
      the command line the command line value is used. Where an option is
      described as mandatory then it must be present in the configuration
      file or the command line equivalent (if any) used.
    </para>
    <para>
      <variablelist>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:oid_file"/><emphasis role="bold">oid_file</emphasis></term>
          <listitem>
            <para>
	      This specifies a file containing additional <emphasis role="bold">OBJECT IDENTIFIERS</emphasis>. Each line of the
	      file should consist of the numerical form of the object
	      identifier followed by white space then the short name
	      followed by white space and finally the long name.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:oid_section"/><emphasis role="bold">oid_section</emphasis></term>
          <listitem>
            <para>
	      This specifies a section in the configuration file containing
	      extra object identifiers. Each line should consist of the
	      short name of the object identifier followed by <emphasis role="bold">=</emphasis> and the numerical form. The short
	      and long names are the same when this option is used.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:new_certs_dir"/><emphasis role="bold">new_certs_dir</emphasis></term>
          <listitem>
            <para>
	      the same as the <emphasis role="bold">-outdir</emphasis>
	      command line option. It specifies the directory where new
	      certificates will be placed. Mandatory.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:certificate"/><emphasis role="bold">certificate</emphasis></term>
          <listitem>
            <para>
	      the same as <emphasis role="bold">-cert</emphasis>. It gives
	      the file containing the CA certificate. Mandatory.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:private_key"/><emphasis role="bold">private_key</emphasis></term>
          <listitem>
            <para>
	      same as the <emphasis role="bold">-keyfile</emphasis> option.
	      The file containing the CA private key. Mandatory.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:RANDFILE"/><emphasis role="bold">RANDFILE</emphasis></term>
          <listitem>
            <para>
	      a file used to read and write random number seed information,
	      or an EGD socket (see RAND_egd(3)).
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:default_days"/><emphasis role="bold">default_days</emphasis></term>
          <listitem>
            <para>
	      the same as the <emphasis role="bold">-days</emphasis>
	      option. The number of days to certify a certificate for.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:default_startdate"/><emphasis role="bold">default_startdate</emphasis></term>
          <listitem>
            <para>
	      the same as the <emphasis role="bold">-startdate</emphasis>
	      option. The start date to certify a certificate for. If not
	      set the current time is used.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:default_enddate"/><emphasis role="bold">default_enddate</emphasis></term>
          <listitem>
            <para>
	      the same as the <emphasis role="bold">-enddate</emphasis>
	      option. Either this option or <emphasis role="bold">default_days</emphasis> (or the command line
	      equivalents) must be present.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:default_crl_hours_default_crl_days"/><emphasis role="bold">default_crl_hours default_crl_days</emphasis></term>
          <listitem>
            <para>
	      the same as the <emphasis role="bold">-crlhours</emphasis>
	      and the <emphasis role="bold">-crldays</emphasis> options.
	      These will only be used if neither command line option is
	      present. At least one of these must be present to generate a
	      CRL.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:default_md"/><emphasis role="bold">default_md</emphasis></term>
          <listitem>
            <para>
	      the same as the <emphasis role="bold">-md</emphasis> option.
	      The message digest to use. Mandatory.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:database"/><emphasis role="bold">database</emphasis></term>
          <listitem>
            <para>
	      the text database file to use. Mandatory. This file must be
	      present though initially it will be empty.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:unique_subject"/><emphasis role="bold">unique_subject</emphasis></term>
          <listitem>
            <para>
	      if the value <emphasis role="bold">yes</emphasis> is given,
	      the valid certificate entries in the database must have
	      unique subjects.	if the value <emphasis role="bold">no</emphasis> is given, several valid certificate
	      entries may have the exact same subject. The default value is
	      <emphasis role="bold">yes</emphasis>, to be compatible with
	      older (pre 0.9.8) versions of OpenSSL.  However, to make CA
	      certificate roll-over easier, it's recommended to use the
	      value <emphasis role="bold">no</emphasis>, especially if
	      combined with the <emphasis role="bold">-selfsign</emphasis>
	      command line option.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:serial"/><emphasis role="bold">serial</emphasis></term>
          <listitem>
            <para>
	      a text file containing the next serial number to use in hex.
	      Mandatory. This file must be present and contain a valid
	      serial number.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:crlnumber"/><emphasis role="bold">crlnumber</emphasis></term>
          <listitem>
            <para>
	      a text file containing the next CRL number to use in hex. The
	      crl number will be inserted in the CRLs only if this file
	      exists. If this file is present, it must contain a valid CRL
	      number.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:x509_extensions"/><emphasis role="bold">x509_extensions</emphasis></term>
          <listitem>
            <para>
	      the same as <emphasis role="bold">-extensions</emphasis>.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:crl_extensions"/><emphasis role="bold">crl_extensions</emphasis></term>
          <listitem>
            <para>
	      the same as <emphasis role="bold">-crlexts</emphasis>.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:preserve"/><emphasis role="bold">preserve</emphasis></term>
          <listitem>
            <para>
	      the same as <emphasis role="bold">-preserveDN</emphasis>
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:email_in_dn"/><emphasis role="bold">email_in_dn</emphasis></term>
          <listitem>
            <para>
	      the same as <emphasis role="bold">-noemailDN</emphasis>. If
	      you want the EMAIL field to be removed from the DN of the
	      certificate simply set this to 'no'. If not present the
	      default is to allow for the EMAIL filed in the certificate's
	      DN.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:msie_hack"/><emphasis role="bold">msie_hack</emphasis></term>
          <listitem>
            <para>
	      the same as <emphasis role="bold">-msie_hack</emphasis>
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:policy"/><emphasis role="bold">policy</emphasis></term>
          <listitem>
            <para>
	      the same as <emphasis role="bold">-policy</emphasis>.
	      Mandatory. See the <emphasis role="bold">POLICY
	      FORMAT</emphasis> section for more information.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:name_opt_cert_opt"/><emphasis role="bold">name_opt</emphasis>, <emphasis role="bold">cert_opt</emphasis></term>
          <listitem>
            <para>
	      these options allow the format used to display the
	      certificate details when asking the user to confirm signing.
	      All the options supported by the <emphasis role="bold">x509</emphasis> utilities <emphasis role="bold">-nameopt</emphasis> and <emphasis role="bold">-certopt</emphasis> switches can be used here,
	      except the <emphasis role="bold">no_signame</emphasis> and
	      <emphasis role="bold">no_sigdump</emphasis> are permanently
	      set and cannot be disabled (this is because the certificate
	      signature cannot be displayed because the certificate has not
	      been signed at this point).
            </para>
            <para>
	      For convenience the values <emphasis role="bold">ca_default</emphasis> are accepted by both to
	      produce a reasonable output.
            </para>
            <para>
	      If neither option is present the format used in earlier
	      versions of OpenSSL is used. Use of the old format is
	      <emphasis role="bold">strongly</emphasis> discouraged because
	      it only displays fields mentioned in the <emphasis role="bold">policy</emphasis> section, mishandles
	      multicharacter string types and does not display extensions.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.ca.pod:copy_extensions"/><emphasis role="bold">copy_extensions</emphasis></term>
          <listitem>
            <para>
	      determines how extensions in certificate requests should be
	      handled. If set to <emphasis role="bold">none</emphasis> or
	      this option is not present then extensions are ignored and
	      not copied to the certificate. If set to <emphasis role="bold">copy</emphasis> then any extensions present in
	      the request that are not already present are copied to the
	      certificate. If set to <emphasis role="bold">copyall</emphasis> then all extensions in the
	      request are copied to the certificate: if the extension is
	      already present in the certificate it is deleted first. See
	      the <emphasis role="bold">WARNINGS</emphasis> section before
	      using this option.
            </para>
            <para>
	      The main use of this option is to allow a certificate request
	      to supply values for certain extensions such as
	      subjectAltName.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.ca.pod:POLICY_FORMAT"><title>POLICY FORMAT</title>
    <para>
      The policy section consists of a set of variables corresponding to
      certificate DN fields. If the value is "match" then the field value
      must match the same field in the CA certificate. If the value is
      "supplied" then it must be present. If the value is "optional" then
      it may be present. Any fields not mentioned in the policy section are
      silently deleted, unless the <emphasis role="bold">-preserveDN</emphasis> option is set but this can be
      regarded more of a quirk than intended behaviour.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.ca.pod:SPKAC_FORMAT"><title>SPKAC FORMAT</title>
    <para>
      The input to the <emphasis role="bold">-spkac</emphasis> command line
      option is a Netscape signed public key and challenge. This will
      usually come from the <emphasis role="bold">KEYGEN</emphasis> tag in
      an HTML form to create a new private key. It is however possible to
      create SPKACs using the <emphasis role="bold">spkac</emphasis>
      utility. 
    </para>
    <para>
      The file should contain the variable SPKAC set to the value of the
      SPKAC and also the required DN components as name value pairs. If you
      need to include the same component twice then it can be preceded by a
      number and a '.'.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.ca.pod:EXAMPLES"><title>EXAMPLES</title>
    <para>
      Note: these examples assume that the <emphasis role="bold">ca</emphasis> directory structure is already set up and
      the relevant files already exist. This usually involves creating a CA
      certificate and private key with <emphasis role="bold">req</emphasis>, a serial number file and an empty index
      file and placing them in the relevant directories.
    </para>
    <para>
      To use the sample configuration file below the directories demoCA,
      demoCA/private and demoCA/newcerts would be created. The CA
      certificate would be copied to demoCA/cacert.pem and its private key
      to demoCA/private/cakey.pem. A file demoCA/serial would be created
      containing for example "01" and the empty index file
      demoCA/index.txt.
    </para>
    <screen></screen>
    <para>
      Sign a certificate request:
    </para>
    <screen>openssl ca -in req.pem -out newcert.pem</screen>
    <para>
      Sign a certificate request, using CA extensions:
    </para>
    <screen>openssl ca -in req.pem -extensions v3_ca -out newcert.pem</screen>
    <para>
      Generate a CRL
    </para>
    <screen>openssl ca -gencrl -out crl.pem</screen>
    <para>
      Sign several requests:
    </para>
    <screen>openssl ca -infiles req1.pem req2.pem req3.pem</screen>
    <para>
      Certify a Netscape SPKAC:
    </para>
    <screen>openssl ca -spkac spkac.txt</screen>
    <para>
      A sample SPKAC file (the SPKAC line has been truncated for clarity):
    </para>
    <screen>SPKAC=MIG0MGAwXDANBgkqhkiG9w0BAQEFAANLADBIAkEAn7PDhCeV/xIxUg8V70YRxK2A5
CN=Steve Test
emailAddress=steve@openssl.org
0.OU=OpenSSL Group
1.OU=Another Group</screen>
    <para>
      A sample configuration file with the relevant sections for <emphasis role="bold">ca</emphasis>:
    </para>
    <screen>[ ca ]
default_ca      = CA_default            # The default ca section

[ CA_default ]

dir            = ./demoCA              # top dir
database       = $dir/index.txt        # index file.
new_certs_dir  = $dir/newcerts         # new certs dir

certificate    = $dir/cacert.pem       # The CA cert
serial         = $dir/serial           # serial no file
private_key    = $dir/private/cakey.pem# CA private key
RANDFILE       = $dir/private/.rand    # random number file

default_days   = 365                   # how long to certify for
default_crl_days= 30                   # how long before next CRL
default_md     = md5                   # md to use

policy         = policy_any            # default policy
email_in_dn    = no                    # Don't add the email into cert DN

name_opt       = ca_default            # Subject name display option
cert_opt       = ca_default            # Certificate display option
copy_extensions = none                 # Don't copy extensions from request

[ policy_any ]
countryName            = supplied
stateOrProvinceName    = optional
organizationName       = optional
organizationalUnitName = optional
commonName             = supplied
emailAddress           = optional</screen>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.ca.pod:FILES"><title>FILES</title>
    <para>
      Note: the location of all files can change either by compile time
      options, configuration file entries, environment variables or command
      line options. The values below reflect the default values.
    </para>
    <screen>/usr/local/ssl/lib/openssl.cnf - master configuration file
./demoCA                       - main CA directory
./demoCA/cacert.pem            - CA certificate
./demoCA/private/cakey.pem     - CA private key
./demoCA/serial                - CA serial number file
./demoCA/serial.old            - CA serial number backup file
./demoCA/index.txt             - CA text database file
./demoCA/index.txt.old         - CA text database backup file
./demoCA/certs                 - certificate output file
./demoCA/.rnd                  - CA random seed information</screen>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.ca.pod:ENVIRONMENT_VARIABLES"><title>ENVIRONMENT VARIABLES</title>
    <para>
      <emphasis role="bold">OPENSSL_CONF</emphasis> reflects the location
      of master configuration file it can be overridden by the <emphasis role="bold">-config</emphasis> command line option.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.ca.pod:RESTRICTIONS"><title>RESTRICTIONS</title>
    <para>
      The text database index file is a critical part of the process and if
      corrupted it can be difficult to fix. It is theoretically possible to
      rebuild the index file from all the issued certificates and a current
      CRL: however there is no option to do this. 
    </para>
    <para>
      V2 CRL features like delta CRLs are not currently supported.
    </para>
    <para>
      Although several requests can be input and handled at once it is only
      possible to include one SPKAC or self signed certificate.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.ca.pod:BUGS"><title>BUGS</title>
    <para>
      The use of an in memory text database can cause problems when large
      numbers of certificates are present because, as the name implies the
      database has to be kept in memory.
    </para>
    <para>
      The <emphasis role="bold">ca</emphasis> command really needs
      rewriting or the required functionality exposed at either a command
      or interface level so a more friendly utility (perl script or GUI)
      can handle things properly. The scripts <emphasis role="bold">CA.sh</emphasis> and <emphasis role="bold">CA.pl</emphasis> help a little but not very much.
    </para>
    <para>
      Any fields in a request that are not present in a policy are silently
      deleted. This does not happen if the <emphasis role="bold">-preserveDN</emphasis> option is used. To enforce the
      absence of the EMAIL field within the DN, as suggested by RFCs,
      regardless the contents of the request' subject the <emphasis role="bold">-noemailDN</emphasis> option can be used. The behaviour
      should be more friendly and configurable.
    </para>
    <para>
      Cancelling some commands by refusing to certify a certificate can
      create an empty file.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.ca.pod:WARNINGS"><title>WARNINGS</title>
    <para>
      The <emphasis role="bold">ca</emphasis> command is quirky and at
      times downright unfriendly.
    </para>
    <para>
      The <emphasis role="bold">ca</emphasis> utility was originally meant
      as an example of how to do things in a CA. It was not supposed to be
      used as a full blown CA itself: nevertheless some people are using it
      for this purpose.
    </para>
    <para>
      The <emphasis role="bold">ca</emphasis> command is effectively a
      single user command: no locking is done on the various files and
      attempts to run more than one <emphasis role="bold">ca</emphasis>
      command on the same database can have unpredictable results.
    </para>
    <para>
      The <emphasis role="bold">copy_extensions</emphasis> option should be
      used with caution. If care is not taken then it can be a security
      risk. For example if a certificate request contains a
      basicConstraints extension with CA:TRUE and the <emphasis role="bold">copy_extensions</emphasis> value is set to <emphasis role="bold">copyall</emphasis> and the user does not spot this when
      the certificate is displayed then this will hand the requestor a
      valid CA certificate.
    </para>
    <para>
      This situation can be avoided by setting <emphasis role="bold">copy_extensions</emphasis> to <emphasis role="bold">copy</emphasis> and including basicConstraints with
      CA:FALSE in the configuration file. Then if the request contains a
      basicConstraints extension it will be ignored.
    </para>
    <para>
      It is advisable to also include values for other extensions such as
      <emphasis role="bold">keyUsage</emphasis> to prevent a request
      supplying its own values.
    </para>
    <para>
      Additional restrictions can be placed on the CA certificate itself.
      For example if the CA certificate has:
    </para>
    <screen>basicConstraints = CA:TRUE, pathlen:0</screen>
    <para>
      then even if a certificate is issued with CA:TRUE it will not be
      valid.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.ca.pod:SEE_ALSO"><title>SEE ALSO</title>
    <para>
      req(1), spkac(1), x509(1), CA.pl(1), config(5), x509v3_config(5)
    </para>
  </refsection>
</refentry>