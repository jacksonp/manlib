<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>EVP_DigestSignInit.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>EVP_DigestSignInit, EVP_DigestSignUpdate, EVP_DigestSignFinal</refname>
<refpurpose>EVP signing functions</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis format="linespecific">#include &lt;openssl/evp.h&gt;</synopsis>
<synopsis format="linespecific">int EVP_DigestSignInit(EVP_MD_CTX *ctx, EVP_PKEY_CTX **pctx,
                       const EVP_MD *type, ENGINE *e, EVP_PKEY *pkey);
int EVP_DigestSignUpdate(EVP_MD_CTX *ctx, const void *d, unsigned int cnt);
int EVP_DigestSignFinal(EVP_MD_CTX *ctx, unsigned char *sig, size_t *siglen);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="sources.openssl.doc.crypto.EVP_DigestSignInit.pod:DESCRIPTION"><title>DESCRIPTION</title>
    <para>
      The EVP signature routines are a high level interface to digital
      signatures.
    </para>
    <para>
      EVP_DigestSignInit() sets up signing context <emphasis role="bold">ctx</emphasis> to use digest <emphasis role="bold">type</emphasis> from ENGINE <emphasis role="bold">impl</emphasis> and private key <emphasis role="bold">pkey</emphasis>. <emphasis role="bold">ctx</emphasis>
      must be initialized with EVP_MD_CTX_init() before calling this
      function. If <emphasis role="bold">pctx</emphasis> is not NULL the
      EVP_PKEY_CTX of the signing operation will be written to <emphasis role="bold">*pctx</emphasis>: this can be used to set alternative
      signing options.
    </para>
    <para>
      EVP_DigestSignUpdate() hashes <emphasis role="bold">cnt</emphasis>
      bytes of data at <emphasis role="bold">d</emphasis> into the
      signature context <emphasis role="bold">ctx</emphasis>. This function
      can be called several times on the same <emphasis role="bold">ctx</emphasis> to include additional data. This function
      is currently implemented using a macro.
    </para>
    <para>
      EVP_DigestSignFinal() signs the data in <emphasis role="bold">ctx</emphasis> places the signature in <emphasis role="bold">sig</emphasis>. If <emphasis role="bold">sig</emphasis>
      is <emphasis role="bold">NULL</emphasis> then the maximum size of the
      output buffer is written to the <emphasis role="bold">siglen</emphasis> parameter. If <emphasis role="bold">sig</emphasis> is not <emphasis role="bold">NULL</emphasis> then before the call the <emphasis role="bold">siglen</emphasis> parameter should contain the length of
      the <emphasis role="bold">sig</emphasis> buffer, if the call is
      successful the signature is written to <emphasis role="bold">sig</emphasis> and the amount of data written to
      <emphasis role="bold">siglen</emphasis>.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.EVP_DigestSignInit.pod:RETURN_VALUES"><title>RETURN VALUES</title>
    <para>
      EVP_DigestSignInit() EVP_DigestSignUpdate() and
      EVP_DigestSignaFinal() return 1 for success and 0 or a negative value
      for failure. In particular a return value of -2 indicates the
      operation is not supported by the public key algorithm.
    </para>
    <para>
      The error codes can be obtained from <citerefentry>
      <refentrytitle>ERR_get_error</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.EVP_DigestSignInit.pod:NOTES"><title>NOTES</title>
    <para>
      The <emphasis role="bold">EVP</emphasis> interface to digital
      signatures should almost always be used in preference to the low
      level interfaces. This is because the code then becomes transparent
      to the algorithm used and much more flexible.
    </para>
    <para>
      In previous versions of OpenSSL there was a link between message
      digest types and public key algorithms. This meant that "clone"
      digests such as EVP_dss1() needed to be used to sign using SHA1 and
      DSA. This is no longer necessary and the use of clone digest is now
      discouraged.
    </para>
    <para>
      For some key types and parameters the random number generator must be
      seeded or the operation will fail.
    </para>
    <para>
      The call to EVP_DigestSignFinal() internally finalizes a copy of the
      digest context. This means that calls to EVP_DigestSignUpdate() and
      EVP_DigestSignFinal() can be called later to digest and sign
      additional data.
    </para>
    <para>
      Since only a copy of the digest context is ever finalized the context
      must be cleaned up after use by calling EVP_MD_CTX_cleanup() or a
      memory leak will occur.
    </para>
    <para>
      The use of EVP_PKEY_size() with these functions is discouraged
      because some signature operations may have a signature length which
      depends on the parameters set. As a result EVP_PKEY_size() would have
      to return a value which indicates the maximum possible signature for
      any set of parameters.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.EVP_DigestSignInit.pod:SEE_ALSO"><title>SEE ALSO</title>
    <para>
      <citerefentry> <refentrytitle>EVP_DigestVerifyInit</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>EVP_DigestInit</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>err</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry> <refentrytitle>evp</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>hmac</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry> <refentrytitle>md2</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>md5</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry> <refentrytitle>mdc2</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>ripemd</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry> <refentrytitle>sha</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>dgst</refentrytitle> <manvolnum>1</manvolnum>
      </citerefentry>
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.EVP_DigestSignInit.pod:HISTORY"><title>HISTORY</title>
    <para>
      EVP_DigestSignInit(), EVP_DigestSignUpdate() and
      EVP_DigestSignFinal() were first added to OpenSSL 1.0.0. 
    </para>
  </refsection>
</refentry>