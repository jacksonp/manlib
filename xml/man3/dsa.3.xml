<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>dsa.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>dsa</refname>
<refpurpose>DSA key processing</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis format="linespecific"><emphasis role="bold">openssl</emphasis> <emphasis role="bold">dsa</emphasis>
[<emphasis role="bold">-inform PEM|DER</emphasis>]
[<emphasis role="bold">-outform PEM|DER</emphasis>]
[<emphasis role="bold">-in filename</emphasis>]
[<emphasis role="bold">-passin arg</emphasis>]
[<emphasis role="bold">-out filename</emphasis>]
[<emphasis role="bold">-passout arg</emphasis>]
[<emphasis role="bold">-des</emphasis>]
[<emphasis role="bold">-des3</emphasis>]
[<emphasis role="bold">-idea</emphasis>]
[<emphasis role="bold">-text</emphasis>]
[<emphasis role="bold">-noout</emphasis>]
[<emphasis role="bold">-modulus</emphasis>]
[<emphasis role="bold">-pubin</emphasis>]
[<emphasis role="bold">-pubout</emphasis>]
[<emphasis role="bold">-engine id</emphasis>]</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="sources.openssl.doc.apps.dsa.pod:DESCRIPTION"><title>DESCRIPTION</title>
    <para>
      The <emphasis role="bold">dsa</emphasis> command processes DSA keys.
      They can be converted between various forms and their components
      printed out. <emphasis role="bold">Note</emphasis> This command uses
      the traditional SSLeay compatible format for private key encryption:
      newer applications should use the more secure PKCS#8 format using the
      <emphasis role="bold">pkcs8</emphasis>
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.dsa.pod:COMMAND_OPTIONS"><title>COMMAND OPTIONS</title>
    <para>
      <variablelist>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.dsa.pod:-inform_DERPEM"/><emphasis role="bold">-inform DER|PEM</emphasis></term>
          <listitem>
            <para>
	      This specifies the input format. The <emphasis role="bold">DER</emphasis> option with a private key uses an
	      ASN1 DER encoded form of an ASN.1 SEQUENCE consisting of the
	      values of version (currently zero), p, q, g, the public and
	      private key components respectively as ASN.1 INTEGERs. When
	      used with a public key it uses a SubjectPublicKeyInfo
	      structure: it is an error if the key is not DSA.
            </para>
            <para>
	      The <emphasis role="bold">PEM</emphasis> form is the default
	      format: it consists of the <emphasis role="bold">DER</emphasis> format base64 encoded with
	      additional header and footer lines. In the case of a private
	      key PKCS#8 format is also accepted.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.dsa.pod:-outform_DERPEM"/><emphasis role="bold">-outform DER|PEM</emphasis></term>
          <listitem>
            <para>
	      This specifies the output format, the options have the same
	      meaning as the <emphasis role="bold">-inform</emphasis>
	      option. 
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.dsa.pod:-in_filename"/><emphasis role="bold">-in filename</emphasis></term>
          <listitem>
            <para>
	      This specifies the input filename to read a key from or
	      standard input if this option is not specified. If the key is
	      encrypted a pass phrase will be prompted for.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.dsa.pod:-passin_arg"/><emphasis role="bold">-passin arg</emphasis></term>
          <listitem>
            <para>
	      the input file password source. For more information about
	      the format of <emphasis role="bold">arg</emphasis> see the
	      <emphasis role="bold">PASS PHRASE ARGUMENTS</emphasis>
	      section in openssl(1).
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.dsa.pod:-out_filename"/><emphasis role="bold">-out filename</emphasis></term>
          <listitem>
            <para>
	      This specifies the output filename to write a key to or
	      standard output by is not specified. If any encryption
	      options are set then a pass phrase will be prompted for. The
	      output filename should <emphasis role="bold">not</emphasis>
	      be the same as the input filename.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.dsa.pod:-passout_arg"/><emphasis role="bold">-passout arg</emphasis></term>
          <listitem>
            <para>
	      the output file password source. For more information about
	      the format of <emphasis role="bold">arg</emphasis> see the
	      <emphasis role="bold">PASS PHRASE ARGUMENTS</emphasis>
	      section in openssl(1).
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.dsa.pod:-des-des3-idea"/><emphasis role="bold">-des|-des3|-idea</emphasis></term>
          <listitem>
            <para>
	      These options encrypt the private key with the DES, triple
	      DES, or the IDEA ciphers respectively before outputting it. A
	      pass phrase is prompted for. If none of these options is
	      specified the key is written in plain text. This means that
	      using the <emphasis role="bold">dsa</emphasis> utility to
	      read in an encrypted key with no encryption option can be
	      used to remove the pass phrase from a key, or by setting the
	      encryption options it can be use to add or change the pass
	      phrase. These options can only be used with PEM format output
	      files. 
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.dsa.pod:-text"/><emphasis role="bold">-text</emphasis></term>
          <listitem>
            <para>
	      prints out the public, private key components and parameters.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.dsa.pod:-noout"/><emphasis role="bold">-noout</emphasis></term>
          <listitem>
            <para>
	      this option prevents output of the encoded version of the
	      key.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.dsa.pod:-modulus"/><emphasis role="bold">-modulus</emphasis></term>
          <listitem>
            <para>
	      this option prints out the value of the public key component
	      of the key.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.dsa.pod:-pubin"/><emphasis role="bold">-pubin</emphasis></term>
          <listitem>
            <para>
	      by default a private key is read from the input file: with
	      this option a public key is read instead.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.dsa.pod:-pubout"/><emphasis role="bold">-pubout</emphasis></term>
          <listitem>
            <para>
	      by default a private key is output. With this option a public
	      key will be output instead. This option is automatically set
	      if the input is a public key.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.dsa.pod:-engine_id"/><emphasis role="bold">-engine id</emphasis></term>
          <listitem>
            <para>
	      specifying an engine (by its unique <emphasis role="bold">id</emphasis> string) will cause <emphasis role="bold">dsa</emphasis> to attempt to obtain a functional
	      reference to the specified engine, thus initialising it if
	      needed. The engine will then be set as the default for all
	      available algorithms.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.dsa.pod:NOTES"><title>NOTES</title>
    <para>
      The PEM private key format uses the header and footer lines:
    </para>
    <screen>-----BEGIN DSA PRIVATE KEY-----
-----END DSA PRIVATE KEY-----</screen>
    <para>
      The PEM public key format uses the header and footer lines:
    </para>
    <screen>-----BEGIN PUBLIC KEY-----
-----END PUBLIC KEY-----</screen>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.dsa.pod:EXAMPLES"><title>EXAMPLES</title>
    <para>
      To remove the pass phrase on a DSA private key:
    </para>
    <screen>openssl dsa -in key.pem -out keyout.pem</screen>
    <para>
      To encrypt a private key using triple DES:
    </para>
    <screen>openssl dsa -in key.pem -des3 -out keyout.pem</screen>
    <para>
      To convert a private key from PEM to DER format:
    </para>
    <screen>openssl dsa -in key.pem -outform DER -out keyout.der</screen>
    <para>
      To print out the components of a private key to standard output:
    </para>
    <screen>openssl dsa -in key.pem -text -noout</screen>
    <para>
      To just output the public part of a private key:
    </para>
    <screen>openssl dsa -in key.pem -pubout -out pubkey.pem</screen>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.dsa.pod:SEE_ALSO"><title>SEE ALSO</title>
    <para>
      dsaparam(1), gendsa(1), rsa(1), genrsa(1)
    </para>
  </refsection>
</refentry>