<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>X509_check_host.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>X509_check_host, X509_check_email, X509_check_ip, X509_check_ip_asc</refname>
<refpurpose>X.509 certificate matching</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis format="linespecific">#include &lt;openssl/x509.h&gt;</synopsis>
<synopsis format="linespecific">int X509_check_host(X509 *, const unsigned char *name,
                    size_t namelen, unsigned int flags);
int X509_check_email(X509 *, const unsigned char *address,
                    size_t addresslen, unsigned int flags);
int X509_check_ip(X509 *, const unsigned char *address,
                  size_t addresslen, unsigned int flags);
int X509_check_ip_asc(X509 *, const char *address, unsigned int flags);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="sources.openssl.doc.crypto.X509_check_host.pod:DESCRIPTION"><title>DESCRIPTION</title>
    <para>
      The certificate matching functions are intended to be called to check
      if a certificate matches a given host name, email address, or IP
      address.	The validity of the certificate and its trust level has to
      be checked by other means.
    </para>
    <para>
      X509_check_host() checks if the certificate matches the specified
      host name, which must be encoded in the preferred name syntax
      described in section 3.5 of RFC 1034. The <emphasis role="bold">namelen</emphasis> argument must be the number of
      characters in the name string or zero in which case the length is
      calculated with strlen(name).
    </para>
    <para>
      X509_check_email() checks if the certificate matches the specified
      email address.  Only the mailbox syntax of RFC 822 is supported,
      comments are not allowed, and no attempt is made to normalize quoted
      characters.  The <emphasis role="bold">addresslen</emphasis> argument
      must be the number of characters in the address string. The <emphasis role="bold">namelen</emphasis> argument must be the number of
      characters in the name string or zero in which case the length is
      calculated with strlen(name).
    </para>
    <para>
      X509_check_ip() checks if the certificate matches a specified IPv4 or
      IPv6 address.  The <emphasis role="bold">address</emphasis> array is
      in binary format, in network byte order.	The length is either 4
      (IPv4) or 16 (IPv6).  Only explicitly marked addresses in the
      certificates are considered; IP addresses stored in DNS names and
      Common Names are ignored.
    </para>
    <para>
      X509_check_ip_asc() is similar, except that the NUL-terminated string
      <emphasis role="bold">address</emphasis> is first converted to the
      internal representation.
    </para>
    <para>
      The <emphasis role="bold">flags</emphasis> argument is usually 0.  It
      can be the bitwise OR of the flags:
    </para>
    <para>
      <variablelist>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.crypto.X509_check_host.pod:X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT"/><emphasis role="bold">X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT</emphasis>,</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.crypto.X509_check_host.pod:X509_CHECK_FLAG_NO_WILDCARDS"/><emphasis role="bold">X509_CHECK_FLAG_NO_WILDCARDS</emphasis>,</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.crypto.X509_check_host.pod:X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS"/><emphasis role="bold">X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS</emphasis>,</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.crypto.X509_check_host.pod:X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS."/><emphasis role="bold">X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS</emphasis>.</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </para>
    <para>
      The <emphasis role="bold">X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT</emphasis> flag
      causes the function to consider the subject DN even if the
      certificate contains at least one subject alternative name of the
      right type (DNS name or email address as appropriate); the default is
      to ignore the subject DN when at least one corresponding subject
      alternative names is present.
    </para>
    <para>
      If set, <emphasis role="bold">X509_CHECK_FLAG_NO_WILDCARDS</emphasis>
      disables wildcard expansion; this only applies to <emphasis role="bold">X509_check_host</emphasis>.
    </para>
    <para>
      If set, <emphasis role="bold">X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS</emphasis>
      suppresses support for "*" as wildcard pattern in labels that have a
      prefix or suffix, such as: "www*" or "*www"; this only aplies to
      <emphasis role="bold">X509_check_host</emphasis>.
    </para>
    <para>
      If set, <emphasis role="bold">X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS</emphasis>, allows
      a "*" that constitutes the complete label of a DNS name (e.g.
      "*.example.com") to match more than one label in <emphasis role="bold">name</emphasis>; this only applies to <emphasis role="bold">X509_check_host</emphasis>.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.X509_check_host.pod:RETURN_VALUES"><title>RETURN VALUES</title>
    <para>
      The functions return 1 for a successful match, 0 for a failed match
      and -1 for an internal error: typically a memory allocation failure.
    </para>
    <para>
      X509_check_ip_asc() can also return -2 if the IP address string is
      malformed.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.X509_check_host.pod:SEE_ALSO"><title>SEE ALSO</title>
    <para>
      SSL_get_verify_result(3)
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.X509_check_host.pod:HISTORY"><title>HISTORY</title>
    <para>
      These functions were added in OpenSSL 1.1.0.
    </para>
  </refsection>
</refentry>