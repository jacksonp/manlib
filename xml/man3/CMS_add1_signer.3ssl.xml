<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>CMS_add1_signer.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>CMS_add1_signer, CMS_SignerInfo_sign</refname>
<refpurpose>add a signer to a CMS_ContentInfo signed data structure.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis>#include &lt;openssl/cms.h&gt;</synopsis>
<synopsis>CMS_SignerInfo *CMS_add1_signer(CMS_ContentInfo *cms, X509 *signcert, EVP_PKEY *pkey, const EVP_MD *md, unsigned int flags);</synopsis>
<synopsis>int CMS_SignerInfo_sign(CMS_SignerInfo *si);</synopsis>
<synopsis/>
  </refsynopsisdiv>
  <refsection xml:id="ID-d4ea95b970c91addcfea93a2e9f115dd"><title>DESCRIPTION</title>
    <para>
      CMS_add1_signer() adds a signer with certificate <emphasis role="bold">signcert</emphasis> and private key <emphasis role="bold">pkey</emphasis> using message digest <emphasis role="bold">md</emphasis> to CMS_ContentInfo SignedData structure
      <emphasis role="bold">cms</emphasis>.
    </para>
    <para>
      The CMS_ContentInfo structure should be obtained from an initial call
      to CMS_sign() with the flag <emphasis role="bold">CMS_PARTIAL</emphasis> set or in the case or re-signing a
      valid CMS_ContentInfo SignedData structure.
    </para>
    <para>
      If the <emphasis role="bold">md</emphasis> parameter is <emphasis role="bold">NULL</emphasis> then the default digest for the public
      key algorithm will be used.
    </para>
    <para>
      Unless the <emphasis role="bold">CMS_REUSE_DIGEST</emphasis> flag is
      set the returned CMS_ContentInfo structure is not complete and must
      be finalized either by streaming (if applicable) or a call to
      CMS_final().
    </para>
    <para>
      The CMS_SignerInfo_sign() function will explicitly sign a
      CMS_SignerInfo structure, its main use is when <emphasis role="bold">CMS_REUSE_DIGEST</emphasis> and <emphasis role="bold">CMS_PARTIAL</emphasis> flags are both set.
    </para>
  </refsection>
  <refsection xml:id="ID-d11a63e220d1dce546be491c64af512f"><title>NOTES</title>
    <para>
      The main purpose of CMS_add1_signer() is to provide finer control
      over a CMS signed data structure where the simpler CMS_sign()
      function defaults are not appropriate. For example if multiple
      signers or non default digest algorithms are needed. New attributes
      can also be added using the returned CMS_SignerInfo structure and the
      CMS attribute utility functions or the CMS signed receipt request
      functions.
    </para>
    <para>
      Any of the following flags (ored together) can be passed in the
      <emphasis role="bold">flags</emphasis> parameter.
    </para>
    <para>
      If <emphasis role="bold">CMS_REUSE_DIGEST</emphasis> is set then an
      attempt is made to copy the content digest value from the
      CMS_ContentInfo structure: to add a signer to an existing structure. 
      An error occurs if a matching digest value cannot be found to copy.
      The returned CMS_ContentInfo structure will be valid and finalized
      when this flag is set.
    </para>
    <para>
      If <emphasis role="bold">CMS_PARTIAL</emphasis> is set in addition to
      <emphasis role="bold">CMS_REUSE_DIGEST</emphasis> then the
      CMS_SignerInfo structure will not be finalized so additional
      attributes can be added. In this case an explicit call to
      CMS_SignerInfo_sign() is needed to finalize it.
    </para>
    <para>
      If <emphasis role="bold">CMS_NOCERTS</emphasis> is set the signer's
      certificate will not be included in the CMS_ContentInfo structure,
      the signer's certificate must still be supplied in the <emphasis role="bold">signcert</emphasis> parameter though. This can reduce the
      size of the signature if the signers certificate can be obtained by
      other means: for example a previously signed message.
    </para>
    <para>
      The SignedData structure includes several CMS signedAttributes
      including the signing time, the CMS content type and the supported
      list of ciphers in an SMIMECapabilities attribute. If <emphasis role="bold">CMS_NOATTR</emphasis> is set then no signedAttributes
      will be used. If <emphasis role="bold">CMS_NOSMIMECAP</emphasis> is
      set then just the SMIMECapabilities are omitted.
    </para>
    <para>
      OpenSSL will by default identify signing certificates using issuer
      name and serial number. If <emphasis role="bold">CMS_USE_KEYID</emphasis> is set it will use the subject
      key identifier value instead. An error occurs if the signing
      certificate does not have a subject key identifier extension.
    </para>
    <para>
      If present the SMIMECapabilities attribute indicates support for the
      following algorithms in preference order: 256 bit AES, Gost R3411-94,
      Gost 28147-89, 192 bit AES, 128 bit AES, triple DES, 128 bit RC2, 64
      bit RC2, DES and 40 bit RC2. If any of these algorithms is not
      available then it will not be included: for example the GOST
      algorithms will not be included if the GOST ENGINE is not loaded.
    </para>
    <para>
      CMS_add1_signer() returns an internal pointer to the CMS_SignerInfo
      structure just added, this can be used to set additional attributes
      before it is finalized.
    </para>
  </refsection>
  <refsection xml:id="ID-05d54052eaf56d3fb7405a02a66d41da"><title>RETURN VALUES</title>
    <para>
      CMS_add1_signer() returns an internal pointer to the CMS_SignerInfo
      structure just added or NULL if an error occurs.
    </para>
  </refsection>
  <refsection xml:id="ID-5797ff56625560ae5f6faa44ae755a3a"><title>SEE ALSO</title>
    <para>
      <citerefentry> <refentrytitle>ERR_get_error</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>CMS_sign</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>CMS_final</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>,
    </para>
  </refsection>
  <refsection xml:id="ID-86d4162de36201af6ae16cdcb705fe6d"><title>COPYRIGHT</title>
    <para>
      Copyright 2014-2016 The OpenSSL Project Authors. All Rights Reserved.
    </para>
    <para>
      Licensed under the OpenSSL license (the "License").  You may not use
      this file except in compliance with the License.	You can obtain a
      copy in the file LICENSE in the source distribution or at <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.openssl.org/source/license.html">https://www.openssl.org/source/license.html</link>.
    </para>
  </refsection>
</refentry>