<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>ts.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>ts</refname>
<refpurpose>Time Stamping Authority tool (client/server)</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis><emphasis role="bold">openssl</emphasis> <emphasis role="bold">ts</emphasis>
<emphasis role="bold">-query</emphasis>
[<emphasis role="bold">-rand</emphasis> file:file...]
[<emphasis role="bold">-config</emphasis> configfile]
[<emphasis role="bold">-data</emphasis> file_to_hash]
[<emphasis role="bold">-digest</emphasis> digest_bytes]
[<emphasis role="bold">-[digest]</emphasis>]
[<emphasis role="bold">-tspolicy</emphasis> object_id]
[<emphasis role="bold">-no_nonce</emphasis>]
[<emphasis role="bold">-cert</emphasis>]
[<emphasis role="bold">-in</emphasis> request.tsq]
[<emphasis role="bold">-out</emphasis> request.tsq]
[<emphasis role="bold">-text</emphasis>]</synopsis>
<synopsis><emphasis role="bold">openssl</emphasis> <emphasis role="bold">ts</emphasis>
<emphasis role="bold">-reply</emphasis>
[<emphasis role="bold">-config</emphasis> configfile]
[<emphasis role="bold">-section</emphasis> tsa_section]
[<emphasis role="bold">-queryfile</emphasis> request.tsq]
[<emphasis role="bold">-passin</emphasis> password_src]
[<emphasis role="bold">-signer</emphasis> tsa_cert.pem]
[<emphasis role="bold">-inkey</emphasis> private.pem]
[<emphasis role="bold">-sha1|-sha224|-sha256|-sha384|-sha512</emphasis>]
[<emphasis role="bold">-chain</emphasis> certs_file.pem]
[<emphasis role="bold">-tspolicy</emphasis> object_id]
[<emphasis role="bold">-in</emphasis> response.tsr]
[<emphasis role="bold">-token_in</emphasis>]
[<emphasis role="bold">-out</emphasis> response.tsr]
[<emphasis role="bold">-token_out</emphasis>]
[<emphasis role="bold">-text</emphasis>]
[<emphasis role="bold">-engine</emphasis> id]</synopsis>
<synopsis><emphasis role="bold">openssl</emphasis> <emphasis role="bold">ts</emphasis>
<emphasis role="bold">-verify</emphasis>
[<emphasis role="bold">-data</emphasis> file_to_hash]
[<emphasis role="bold">-digest</emphasis> digest_bytes]
[<emphasis role="bold">-queryfile</emphasis> request.tsq]
[<emphasis role="bold">-in</emphasis> response.tsr]
[<emphasis role="bold">-token_in</emphasis>]
[<emphasis role="bold">-CApath</emphasis> trusted_cert_path]
[<emphasis role="bold">-CAfile</emphasis> trusted_certs.pem]
[<emphasis role="bold">-untrusted</emphasis> cert_file.pem]
[<emphasis role="italic">verify options</emphasis>]</synopsis>
<synopsis><emphasis role="italic">verify options:</emphasis>
[-attime timestamp]
[-check_ss_sig]
[-crl_check]
[-crl_check_all]
[-explicit_policy]
[-extended_crl]
[-ignore_critical]
[-inhibit_any]
[-inhibit_map]
[-issuer_checks]
[-no_alt_chains]
[-no_check_time]
[-partial_chain]
[-policy arg]
[-policy_check]
[-policy_print]
[-purpose purpose]
[-suiteB_128]
[-suiteB_128_only]
[-suiteB_192]
[-trusted_first]
[-use_deltas]
[-auth_level num]
[-verify_depth num]
[-verify_email email]
[-verify_hostname hostname]
[-verify_ip ip]
[-verify_name name]
[-x509_strict]</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="ID-9133f4ed33609e54fe5d61ffa7b2660f"><title>DESCRIPTION</title>
    <para>
      The <emphasis role="bold">ts</emphasis> command is a basic Time
      Stamping Authority (TSA) client and server application as specified
      in RFC 3161 (Time-Stamp Protocol, TSP). A TSA can be part of a PKI
      deployment and its role is to provide long term proof of the
      existence of a certain datum before a particular time. Here is a
      brief description of the protocol:
    </para>
    <para>
      <orderedlist numeration="arabic">
        <listitem>
          <para>
	    The TSA client computes a one-way hash value for a data file
	    and sends the hash to the TSA.
          </para>
        </listitem>
        <listitem>
          <para>
	    The TSA attaches the current date and time to the received hash
	    value, signs them and sends the time stamp token back to the
	    client. By creating this token the TSA certifies the existence
	    of the original data file at the time of response generation.
          </para>
        </listitem>
        <listitem>
          <para>
	    The TSA client receives the time stamp token and verifies the
	    signature on it. It also checks if the token contains the same
	    hash value that it had sent to the TSA.
          </para>
        </listitem>
      </orderedlist>
    </para>
    <para>
      There is one DER encoded protocol data unit defined for transporting
      a time stamp request to the TSA and one for sending the time stamp
      response back to the client. The <emphasis role="bold">ts</emphasis>
      command has three main functions: creating a time stamp request based
      on a data file, creating a time stamp response based on a request,
      verifying if a response corresponds to a particular request or a data
      file.
    </para>
    <para>
      There is no support for sending the requests/responses automatically
      over HTTP or TCP yet as suggested in RFC 3161. The users must send
      the requests either by ftp or e-mail.
    </para>
  </refsection>
  <refsection xml:id="ID-b72c032e9095c694c9718fee990b8f69"><title>OPTIONS</title>
    <refsection xml:id="ID-c9f429349b8d7b9ac54dea6c88330355"><title>Time Stamp Request generation</title>
      <para>
	The <emphasis role="bold">-query</emphasis> switch can be used for
	creating and printing a time stamp request with the following
	options:
      </para>
      <para>
        <variablelist>
          <varlistentry>
            <term><emphasis role="bold">-rand</emphasis> file:file...</term>
            <listitem>
              <para>
		The files containing random data for seeding the random
		number generator. Multiple files can be specified, the
		separator is <emphasis role="bold">;</emphasis> for
		MS-Windows, <emphasis role="bold">,</emphasis> for VMS and
		<emphasis role="bold">:</emphasis> for all other platforms.
		(Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-config</emphasis> configfile</term>
            <listitem>
              <para>
		The configuration file to use, this option overrides the
		<emphasis role="bold">OPENSSL_CONF</emphasis> environment
		variable. Only the OID section of the config file is used
		with the <emphasis role="bold">-query</emphasis> command.
		(Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-data</emphasis> file_to_hash</term>
            <listitem>
              <para>
		The data file for which the time stamp request needs to be
		created. stdin is the default if neither the <emphasis role="bold">-data</emphasis> nor the <emphasis role="bold">-digest</emphasis> parameter is specified.
		(Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-digest</emphasis> digest_bytes</term>
            <listitem>
              <para>
		It is possible to specify the message imprint explicitly
		without the data file. The imprint must be specified in a
		hexadecimal format, two characters per byte, the bytes
		optionally separated by colons (e.g. 1A:F6:01:... or
		1AF601...). The number of bytes must match the message
		digest algorithm in use. (Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-[digest]</emphasis></term>
            <listitem>
              <para>
		The message digest to apply to the data file. Any digest
		supported by the OpenSSL <emphasis role="bold">dgst</emphasis> command can be used. The
		default is SHA-1. (Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-tspolicy</emphasis> object_id</term>
            <listitem>
              <para>
		The policy that the client expects the TSA to use for
		creating the time stamp token. Either the dotted OID
		notation or OID names defined in the config file can be
		used. If no policy is requested the TSA will use its own
		default policy. (Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-no_nonce</emphasis></term>
            <listitem>
              <para>
		No nonce is specified in the request if this option is
		given. Otherwise a 64 bit long pseudo-random none is
		included in the request. It is recommended to use nonce to
		protect against replay-attacks. (Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-cert</emphasis></term>
            <listitem>
              <para>
		The TSA is expected to include its signing certificate in
		the response. (Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-in</emphasis> request.tsq</term>
            <listitem>
              <para>
		This option specifies a previously created time stamp
		request in DER format that will be printed into the output
		file. Useful when you need to examine the content of a
		request in human-readable
              </para>
              <para>
		format. (Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-out</emphasis> request.tsq</term>
            <listitem>
              <para>
		Name of the output file to which the request will be
		written. Default is stdout. (Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-text</emphasis></term>
            <listitem>
              <para>
		If this option is specified the output is human-readable
		text format instead of DER. (Optional)
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </para>
    </refsection>
    <refsection xml:id="ID-ff048feeda46f2c4f4557fdd3c17dbb1"><title>Time Stamp Response generation</title>
      <para>
	A time stamp response (TimeStampResp) consists of a response status
	and the time stamp token itself (ContentInfo), if the token
	generation was successful. The <emphasis role="bold">-reply</emphasis> command is for creating a time stamp
	response or time stamp token based on a request and printing the
	response/token in human-readable format. If <emphasis role="bold">-token_out</emphasis> is not specified the output is
	always a time stamp response (TimeStampResp), otherwise it is a
	time stamp token (ContentInfo).
      </para>
      <para>
        <variablelist>
          <varlistentry>
            <term><emphasis role="bold">-config</emphasis> configfile</term>
            <listitem>
              <para>
		The configuration file to use, this option overrides the
		<emphasis role="bold">OPENSSL_CONF</emphasis> environment
		variable. See <emphasis role="bold">CONFIGURATION FILE
		OPTIONS</emphasis> for configurable variables. (Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-section</emphasis> tsa_section</term>
            <listitem>
              <para>
		The name of the config file section containing the settings
		for the response generation. If not specified the default
		TSA section is used, see <emphasis role="bold">CONFIGURATION FILE OPTIONS</emphasis> for
		details. (Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-queryfile</emphasis> request.tsq</term>
            <listitem>
              <para>
		The name of the file containing a DER encoded time stamp
		request. (Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-passin</emphasis> password_src</term>
            <listitem>
              <para>
		Specifies the password source for the private key of the
		TSA. See <emphasis role="bold">PASS PHRASE
		ARGUMENTS</emphasis> in <citerefentry>
		<refentrytitle>openssl</refentrytitle>
		<manvolnum>1</manvolnum> </citerefentry>. (Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-signer</emphasis> tsa_cert.pem</term>
            <listitem>
              <para>
		The signer certificate of the TSA in PEM format. The TSA
		signing certificate must have exactly one extended key
		usage assigned to it: timeStamping. The extended key usage
		must also be critical, otherwise the certificate is going
		to be refused. Overrides the <emphasis role="bold">signer_cert</emphasis> variable of the config
		file. (Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-inkey</emphasis> private.pem</term>
            <listitem>
              <para>
		The signer private key of the TSA in PEM format. Overrides
		the <emphasis role="bold">signer_key</emphasis> config file
		option. (Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-sha1|-sha224|-sha256|-sha384|-sha512</emphasis></term>
            <listitem>
              <para>
		Signing digest to use. Overrides the <emphasis role="bold">signer_digest</emphasis> config file option.
		(Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-chain</emphasis> certs_file.pem</term>
            <listitem>
              <para>
		The collection of certificates in PEM format that will all
		be included in the response in addition to the signer
		certificate if the <emphasis role="bold">-cert</emphasis>
		option was used for the request. This file is supposed to
		contain the certificate chain for the signer certificate
		from its issuer upwards. The <emphasis role="bold">-reply</emphasis> command does not build a
		certificate chain automatically. (Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-tspolicy</emphasis> object_id</term>
            <listitem>
              <para>
		The default policy to use for the response unless the
		client explicitly requires a particular TSA policy. The OID
		can be specified either in dotted notation or with its
		name. Overrides the <emphasis role="bold">default_policy</emphasis> config file option.
		(Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-in</emphasis> response.tsr</term>
            <listitem>
              <para>
		Specifies a previously created time stamp response or time
		stamp token (if <emphasis role="bold">-token_in</emphasis>
		is also specified) in DER format that will be written to
		the output file. This option does not require a request, it
		is useful e.g. when you need to examine the content of a
		response or token or you want to extract the time stamp
		token from a response. If the input is a token and the
		output is a time stamp response a default 'granted' status
		info is added to the token. (Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-token_in</emphasis></term>
            <listitem>
              <para>
		This flag can be used together with the <emphasis role="bold">-in</emphasis> option and indicates that the
		input is a DER encoded time stamp token (ContentInfo)
		instead of a time stamp response (TimeStampResp).
		(Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-out</emphasis> response.tsr</term>
            <listitem>
              <para>
		The response is written to this file. The format and
		content of the file depends on other options (see <emphasis role="bold">-text</emphasis>, <emphasis role="bold">-token_out</emphasis>). The default is stdout.
		(Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-token_out</emphasis></term>
            <listitem>
              <para>
		The output is a time stamp token (ContentInfo) instead of
		time stamp response (TimeStampResp). (Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-text</emphasis></term>
            <listitem>
              <para>
		If this option is specified the output is human-readable
		text format instead of DER. (Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-engine</emphasis> id</term>
            <listitem>
              <para>
		Specifying an engine (by its unique <emphasis role="bold">id</emphasis> string) will cause <emphasis role="bold">ts</emphasis> to attempt to obtain a functional
		reference to the specified engine, thus initialising it if
		needed. The engine will then be set as the default for all
		available algorithms. Default is builtin. (Optional)
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </para>
    </refsection>
    <refsection xml:id="ID-b336f66e4f7a2a9cfa91e6b33489fa93"><title>Time Stamp Response verification</title>
      <para>
	The <emphasis role="bold">-verify</emphasis> command is for
	verifying if a time stamp response or time stamp token is valid and
	matches a particular time stamp request or data file. The <emphasis role="bold">-verify</emphasis> command does not use the
	configuration file.
      </para>
      <para>
        <variablelist>
          <varlistentry>
            <term><emphasis role="bold">-data</emphasis> file_to_hash</term>
            <listitem>
              <para>
		The response or token must be verified against
		file_to_hash. The file is hashed with the message digest
		algorithm specified in the token. The <emphasis role="bold">-digest</emphasis> and <emphasis role="bold">-queryfile</emphasis> options must not be
		specified with this one. (Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-digest</emphasis> digest_bytes</term>
            <listitem>
              <para>
		The response or token must be verified against the message
		digest specified with this option. The number of bytes must
		match the message digest algorithm specified in the token.
		The <emphasis role="bold">-data</emphasis> and <emphasis role="bold">-queryfile</emphasis> options must not be
		specified with this one. (Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-queryfile</emphasis> request.tsq</term>
            <listitem>
              <para>
		The original time stamp request in DER format. The
		<emphasis role="bold">-data</emphasis> and <emphasis role="bold">-digest</emphasis> options must not be
		specified with this one. (Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-in</emphasis> response.tsr</term>
            <listitem>
              <para>
		The time stamp response that needs to be verified in DER
		format. (Mandatory)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-token_in</emphasis></term>
            <listitem>
              <para>
		This flag can be used together with the <emphasis role="bold">-in</emphasis> option and indicates that the
		input is a DER encoded time stamp token (ContentInfo)
		instead of a time stamp response (TimeStampResp).
		(Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-CApath</emphasis> trusted_cert_path</term>
            <listitem>
              <para>
		The name of the directory containing the trusted CA
		certificates of the client. See the similar option of
		<citerefentry> <refentrytitle>verify</refentrytitle>
		<manvolnum>1</manvolnum> </citerefentry> for additional
		details. Either this option or <emphasis role="bold">-CAfile</emphasis> must be specified.
		(Optional)
              </para>
              <screen></screen>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-CAfile</emphasis> trusted_certs.pem</term>
            <listitem>
              <para>
		The name of the file containing a set of trusted
		self-signed CA certificates in PEM format. See the similar
		option of <citerefentry>
		<refentrytitle>verify</refentrytitle>
		<manvolnum>1</manvolnum> </citerefentry> for additional
		details. Either this option or <emphasis role="bold">-CApath</emphasis> must be specified.
		(Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="bold">-untrusted</emphasis> cert_file.pem</term>
            <listitem>
              <para>
		Set of additional untrusted certificates in PEM format
		which may be needed when building the certificate chain for
		the TSA's signing certificate. This file must contain the
		TSA signing certificate and all intermediate CA
		certificates unless the response includes them. (Optional)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis role="italic">verify options</emphasis></term>
            <listitem>
              <para>
		The options <emphasis role="bold">-attime
		timestamp</emphasis>, <emphasis role="bold">-check_ss_sig</emphasis>, <emphasis role="bold">-crl_check</emphasis>, <emphasis role="bold">-crl_check_all</emphasis>, <emphasis role="bold">-explicit_policy</emphasis>, <emphasis role="bold">-extended_crl</emphasis>, <emphasis role="bold">-ignore_critical</emphasis>, <emphasis role="bold">-inhibit_any</emphasis>, <emphasis role="bold">-inhibit_map</emphasis>, <emphasis role="bold">-issuer_checks</emphasis>, <emphasis role="bold">-no_alt_chains</emphasis>, <emphasis role="bold">-no_check_time</emphasis>, <emphasis role="bold">-partial_chain</emphasis>, <emphasis role="bold">-policy</emphasis>, <emphasis role="bold">-policy_check</emphasis>, <emphasis role="bold">-policy_print</emphasis>, <emphasis role="bold">-purpose</emphasis>, <emphasis role="bold">-suiteB_128</emphasis>, <emphasis role="bold">-suiteB_128_only</emphasis>, <emphasis role="bold">-suiteB_192</emphasis>, <emphasis role="bold">-trusted_first</emphasis>, <emphasis role="bold">-use_deltas</emphasis>, <emphasis role="bold">-auth_level</emphasis>, <emphasis role="bold">-verify_depth</emphasis>, <emphasis role="bold">-verify_email</emphasis>, <emphasis role="bold">-verify_hostname</emphasis>, <emphasis role="bold">-verify_ip</emphasis>, <emphasis role="bold">-verify_name</emphasis>, and <emphasis role="bold">-x509_strict</emphasis> can be used to control
		timestamp verification.  See <citerefentry>
		<refentrytitle>verify</refentrytitle>
		<manvolnum>1</manvolnum> </citerefentry>.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </para>
    </refsection>
  </refsection>
  <refsection xml:id="ID-f1374926756cea0d868d5a543c6b7efc"><title>CONFIGURATION FILE OPTIONS</title>
    <para>
      The <emphasis role="bold">-query</emphasis> and <emphasis role="bold">-reply</emphasis> commands make use of a configuration
      file defined by the <emphasis role="bold">OPENSSL_CONF</emphasis>
      environment variable. See <citerefentry>
      <refentrytitle>config</refentrytitle> <manvolnum>5</manvolnum>
      </citerefentry> for a general description of the syntax of the config
      file. The <emphasis role="bold">-query</emphasis> command uses only
      the symbolic OID names section and it can work without it. However,
      the <emphasis role="bold">-reply</emphasis> command needs the config
      file for its operation.
    </para>
    <para>
      When there is a command line switch equivalent of a variable the
      switch always overrides the settings in the config file.
    </para>
    <para>
      <variablelist>
        <varlistentry>
          <term><emphasis role="bold">tsa</emphasis> section, <emphasis role="bold">default_tsa</emphasis></term>
          <listitem>
            <para>
	      This is the main section and it specifies the name of another
	      section that contains all the options for the <emphasis role="bold">-reply</emphasis> command. This default section
	      can be overridden with the <emphasis role="bold">-section</emphasis> command line switch.
	      (Optional)
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis role="bold">oid_file</emphasis></term>
          <listitem>
            <para>
	      See <citerefentry> <refentrytitle>ca</refentrytitle>
	      <manvolnum>1</manvolnum> </citerefentry> for description.
	      (Optional)
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis role="bold">oid_section</emphasis></term>
          <listitem>
            <para>
	      See <citerefentry> <refentrytitle>ca</refentrytitle>
	      <manvolnum>1</manvolnum> </citerefentry> for description.
	      (Optional)
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis role="bold">RANDFILE</emphasis></term>
          <listitem>
            <para>
	      See <citerefentry> <refentrytitle>ca</refentrytitle>
	      <manvolnum>1</manvolnum> </citerefentry> for description.
	      (Optional)
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis role="bold">serial</emphasis></term>
          <listitem>
            <para>
	      The name of the file containing the hexadecimal serial number
	      of the last time stamp response created. This number is
	      incremented by 1 for each response. If the file does not
	      exist at the time of response generation a new file is
	      created with serial number 1. (Mandatory)
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis role="bold">crypto_device</emphasis></term>
          <listitem>
            <para>
	      Specifies the OpenSSL engine that will be set as the default
	      for all available algorithms. The default value is builtin,
	      you can specify any other engines supported by OpenSSL (e.g.
	      use chil for the NCipher HSM). (Optional)
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis role="bold">signer_cert</emphasis></term>
          <listitem>
            <para>
	      TSA signing certificate in PEM format. The same as the
	      <emphasis role="bold">-signer</emphasis> command line option.
	      (Optional)
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis role="bold">certs</emphasis></term>
          <listitem>
            <para>
	      A file containing a set of PEM encoded certificates that need
	      to be included in the response. The same as the <emphasis role="bold">-chain</emphasis> command line option. (Optional)
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis role="bold">signer_key</emphasis></term>
          <listitem>
            <para>
	      The private key of the TSA in PEM format. The same as the
	      <emphasis role="bold">-inkey</emphasis> command line option.
	      (Optional)
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis role="bold">signer_digest</emphasis></term>
          <listitem>
            <para>
	      Signing digest to use. The same as the <emphasis role="bold">-sha1|-sha224|-sha256|-sha384|-sha512</emphasis>
	      command line option. (Optional)
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis role="bold">default_policy</emphasis></term>
          <listitem>
            <para>
	      The default policy to use when the request does not mandate
	      any policy. The same as the <emphasis role="bold">-tspolicy</emphasis> command line option.
	      (Optional)
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis role="bold">other_policies</emphasis></term>
          <listitem>
            <para>
	      Comma separated list of policies that are also acceptable by
	      the TSA and used only if the request explicitly specifies one
	      of them. (Optional)
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis role="bold">digests</emphasis></term>
          <listitem>
            <para>
	      The list of message digest algorithms that the TSA accepts.
	      At least one algorithm must be specified. (Mandatory)
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis role="bold">accuracy</emphasis></term>
          <listitem>
            <para>
	      The accuracy of the time source of the TSA in seconds,
	      milliseconds and microseconds. E.g. secs:1, millisecs:500,
	      microsecs:100. If any of the components is missing zero is
	      assumed for that field. (Optional)
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis role="bold">clock_precision_digits</emphasis></term>
          <listitem>
            <para>
	      Specifies the maximum number of digits, which represent the
	      fraction of seconds, that  need to be included in the time
	      field. The trailing zeroes must be removed from the time, so
	      there might actually be fewer digits, or no fraction of
	      seconds at all. Supported only on UNIX platforms. The maximum
	      value is 6, default is 0. (Optional)
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis role="bold">ordering</emphasis></term>
          <listitem>
            <para>
	      If this option is yes the responses generated by this TSA can
	      always be ordered, even if the time difference between two
	      responses is less than the sum of their accuracies. Default
	      is no. (Optional)
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis role="bold">tsa_name</emphasis></term>
          <listitem>
            <para>
	      Set this option to yes if the subject name of the TSA must be
	      included in the TSA name field of the response. Default is
	      no. (Optional)
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis role="bold">ess_cert_id_chain</emphasis></term>
          <listitem>
            <para>
	      The SignedData objects created by the TSA always contain the
	      certificate identifier of the signing certificate in a signed
	      attribute (see RFC 2634, Enhanced Security Services). If this
	      option is set to yes and either the <emphasis role="bold">certs</emphasis> variable or the <emphasis role="bold">-chain</emphasis> option is specified then the
	      certificate identifiers of the chain will also be included in
	      the SigningCertificate signed attribute. If this variable is
	      set to no, only the signing certificate identifier is
	      included. Default is no. (Optional)
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </para>
  </refsection>
  <refsection xml:id="ID-1829b11827c279b97276d65517ed4f70"><title>ENVIRONMENT VARIABLES</title>
    <para>
      <emphasis role="bold">OPENSSL_CONF</emphasis> contains the path of
      the configuration file and can be overridden by the <emphasis role="bold">-config</emphasis> command line option.
    </para>
  </refsection>
  <refsection xml:id="ID-526672152cae8667054bbe53b290732d"><title>EXAMPLES</title>
    <para>
      All the examples below presume that <emphasis role="bold">OPENSSL_CONF</emphasis> is set to a proper configuration
      file, e.g. the example configuration file openssl/apps/openssl.cnf
      will do.
    </para>
    <refsection xml:id="ID-be524ba0811f4127195efd5950290b9d"><title>Time Stamp Request</title>
      <para>
	To create a time stamp request for design1.txt with SHA-1 without
	nonce and policy and no certificate is required in the response:
      </para>
      <screen>openssl ts -query -data design1.txt -no_nonce \
      -out design1.tsq</screen>
      <para>
	To create a similar time stamp request with specifying the message
	imprint explicitly:
      </para>
      <screen>openssl ts -query -digest b7e5d3f93198b38379852f2c04e78d73abdd0f4b \
       -no_nonce -out design1.tsq</screen>
      <para>
	To print the content of the previous request in human readable
	format:
      </para>
      <screen>openssl ts -query -in design1.tsq -text</screen>
      <para>
	To create a time stamp request which includes the MD-5 digest of
	design2.txt, requests the signer certificate and nonce, specifies a
	policy id (assuming the tsa_policy1 name is defined in the OID
	section of the config file):
      </para>
      <screen>openssl ts -query -data design2.txt -md5 \
      -tspolicy tsa_policy1 -cert -out design2.tsq</screen>
    </refsection>
    <refsection xml:id="ID-d99c6f5649fba8332804183715643bd5"><title>Time Stamp Response</title>
      <para>
	Before generating a response a signing certificate must be created
	for the TSA that contains the <emphasis role="bold">timeStamping</emphasis> critical extended key usage
	extension without any other key usage extensions. You can add the
	'extendedKeyUsage = critical,timeStamping' line to the user
	certificate section of the config file to generate a proper
	certificate. See <citerefentry> <refentrytitle>req</refentrytitle>
	<manvolnum>1</manvolnum> </citerefentry>, <citerefentry>
	<refentrytitle>ca</refentrytitle> <manvolnum>1</manvolnum>
	</citerefentry>, <citerefentry> <refentrytitle>x509</refentrytitle>
	<manvolnum>1</manvolnum> </citerefentry> for instructions. The
	examples below assume that cacert.pem contains the certificate of
	the CA, tsacert.pem is the signing certificate issued by cacert.pem
	and tsakey.pem is the private key of the TSA.
      </para>
      <para>
	To create a time stamp response for a request:
      </para>
      <screen>openssl ts -reply -queryfile design1.tsq -inkey tsakey.pem \
      -signer tsacert.pem -out design1.tsr</screen>
      <para>
	If you want to use the settings in the config file you could just
	write:
      </para>
      <screen>openssl ts -reply -queryfile design1.tsq -out design1.tsr</screen>
      <para>
	To print a time stamp reply to stdout in human readable format:
      </para>
      <screen>openssl ts -reply -in design1.tsr -text</screen>
      <para>
	To create a time stamp token instead of time stamp response:
      </para>
      <screen>openssl ts -reply -queryfile design1.tsq -out design1_token.der -token_out</screen>
      <para>
	To print a time stamp token to stdout in human readable format:
      </para>
      <screen>openssl ts -reply -in design1_token.der -token_in -text -token_out</screen>
      <para>
	To extract the time stamp token from a response:
      </para>
      <screen>openssl ts -reply -in design1.tsr -out design1_token.der -token_out</screen>
      <para>
	To add 'granted' status info to a time stamp token thereby creating
	a valid response:
      </para>
      <screen>openssl ts -reply -in design1_token.der -token_in -out design1.tsr</screen>
    </refsection>
    <refsection xml:id="ID-c9247b9f39141329ca18309e9d351d3b"><title>Time Stamp Verification</title>
      <para>
	To verify a time stamp reply against a request:
      </para>
      <screen>openssl ts -verify -queryfile design1.tsq -in design1.tsr \
      -CAfile cacert.pem -untrusted tsacert.pem</screen>
      <para>
	To verify a time stamp reply that includes the certificate chain:
      </para>
      <screen>openssl ts -verify -queryfile design2.tsq -in design2.tsr \
      -CAfile cacert.pem</screen>
      <para>
	To verify a time stamp token against the original data file:
	openssl ts -verify -data design2.txt -in design2.tsr \ -CAfile
	cacert.pem
      </para>
      <para>
	To verify a time stamp token against a message imprint: openssl ts
	-verify -digest b7e5d3f93198b38379852f2c04e78d73abdd0f4b \ -in
	design2.tsr -CAfile cacert.pem
      </para>
      <para>
	You could also look at the 'test' directory for more examples.
      </para>
    </refsection>
  </refsection>
  <refsection xml:id="ID-2807d3dbd9e15a60d81b1810ed566a38"><title>BUGS</title>
    <para>
      If you find any bugs or you have suggestions please write to Zoltan
      Glozik &lt;zglozik@opentsa.org&gt;. Known issues:
    </para>
    <para>
      <variablelist>
        <varlistentry>
          <term>* No support for time stamps over SMTP, though it is quite easy
to implement an automatic e-mail based TSA with <citerefentry>
  <refentrytitle>procmail</refentrytitle>
  <manvolnum>1</manvolnum>
</citerefentry>
and <citerefentry>
  <refentrytitle>perl</refentrytitle>
  <manvolnum>1</manvolnum>
</citerefentry>. HTTP server support is provided in the form of
a separate apache module. HTTP client support is provided by
<citerefentry>
  <refentrytitle>tsget</refentrytitle>
  <manvolnum>1</manvolnum>
</citerefentry>. Pure TCP/IP protocol is not supported.</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>* The file containing the last serial number of the TSA is not
locked when being read or written. This is a problem if more than one
instance of <citerefentry>
  <refentrytitle>openssl</refentrytitle>
  <manvolnum>1</manvolnum>
</citerefentry> is trying to create a time stamp
response at the same time. This is not an issue when using the apache
server module, it does proper locking.</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>* Look for the FIXME word in the source files.</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>* The source code should really be reviewed by somebody else, too.</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>* More testing is needed, I have done only some basic tests (see
test/testtsa).</term>
          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </para>
  </refsection>
  <refsection xml:id="ID-5e8c828530662dda8ec64be113bfa8eb"><title>SEE ALSO</title>
    <para>
      <citerefentry> <refentrytitle>tsget</refentrytitle>
      <manvolnum>1</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>openssl</refentrytitle> <manvolnum>1</manvolnum>
      </citerefentry>, <citerefentry> <refentrytitle>req</refentrytitle>
      <manvolnum>1</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>x509</refentrytitle> <manvolnum>1</manvolnum>
      </citerefentry>, <citerefentry> <refentrytitle>ca</refentrytitle>
      <manvolnum>1</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>genrsa</refentrytitle> <manvolnum>1</manvolnum>
      </citerefentry>, <citerefentry> <refentrytitle>config</refentrytitle>
      <manvolnum>5</manvolnum> </citerefentry>
    </para>
  </refsection>
</refentry>