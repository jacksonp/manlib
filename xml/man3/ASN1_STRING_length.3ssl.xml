<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>ASN1_STRING_length.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>ASN1_STRING_dup, ASN1_STRING_cmp, ASN1_STRING_set, ASN1_STRING_length,
ASN1_STRING_type, ASN1_STRING_get0_data, ASN1_STRING_data,
ASN1_STRING_to_UTF8</refname>
<refpurpose>ASN1_STRING utility functions</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis>#include &lt;openssl/asn1.h&gt;</synopsis>
<synopsis>int ASN1_STRING_length(ASN1_STRING *x);
const unsigned char * ASN1_STRING_get0_data(const ASN1_STRING *x);
unsigned char * ASN1_STRING_data(ASN1_STRING *x);</synopsis>
<synopsis>ASN1_STRING * ASN1_STRING_dup(ASN1_STRING *a);</synopsis>
<synopsis>int ASN1_STRING_cmp(ASN1_STRING *a, ASN1_STRING *b);</synopsis>
<synopsis>int ASN1_STRING_set(ASN1_STRING *str, const void *data, int len);</synopsis>
<synopsis>int ASN1_STRING_type(const ASN1_STRING *x);</synopsis>
<synopsis>int ASN1_STRING_to_UTF8(unsigned char **out, const ASN1_STRING *in);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="ID-04e72c7814bfa7327f87be4abb5a0901"><title>DESCRIPTION</title>
    <para>
      These functions allow an <emphasis role="bold">ASN1_STRING</emphasis>
      structure to be manipulated.
    </para>
    <para>
      ASN1_STRING_length() returns the length of the content of <emphasis role="bold">x</emphasis>.
    </para>
    <para>
      ASN1_STRING_get0_data() returns an internal pointer to the data of
      <emphasis role="bold">x</emphasis>. Since this is an internal pointer
      it should <emphasis role="bold">not</emphasis> be freed or modified
      in any way.
    </para>
    <para>
      ASN1_STRING_data() is similar to ASN1_STRING_get0_data() except the
      returned value is not constant. This function is deprecated:
      applications should use ASN1_STRING_get0_data() instead.
    </para>
    <para>
      ASN1_STRING_dup() returns a copy of the structure <emphasis role="bold">a</emphasis>.
    </para>
    <para>
      ASN1_STRING_cmp() compares <emphasis role="bold">a</emphasis> and
      <emphasis role="bold">b</emphasis> returning 0 if the two are
      identical. The string types and content are compared.
    </para>
    <para>
      ASN1_STRING_set() sets the data of string <emphasis role="bold">str</emphasis> to the buffer <emphasis role="bold">data</emphasis> or length <emphasis role="bold">len</emphasis>. The supplied data is copied. If <emphasis role="bold">len</emphasis> is -1 then the length is determined by
      strlen(data).
    </para>
    <para>
      ASN1_STRING_type() returns the type of <emphasis role="bold">x</emphasis>, using standard constants such as <emphasis role="bold">V_ASN1_OCTET_STRING</emphasis>.
    </para>
    <para>
      ASN1_STRING_to_UTF8() converts the string <emphasis role="bold">in</emphasis> to UTF8 format, the converted data is
      allocated in a buffer in <emphasis role="bold">*out</emphasis>. The
      length of <emphasis role="bold">out</emphasis> is returned or a
      negative error code. The buffer <emphasis role="bold">*out</emphasis>
      should be freed using OPENSSL_free().
    </para>
  </refsection>
  <refsection xml:id="ID-4c9d93bd0100b5481d2a96baa8dec01d"><title>NOTES</title>
    <para>
      Almost all ASN1 types in OpenSSL are represented as an <emphasis role="bold">ASN1_STRING</emphasis> structure. Other types such as
      <emphasis role="bold">ASN1_OCTET_STRING</emphasis> are simply
      typedef'ed to <emphasis role="bold">ASN1_STRING</emphasis> and the
      functions call the <emphasis role="bold">ASN1_STRING</emphasis>
      equivalents. <emphasis role="bold">ASN1_STRING</emphasis> is also
      used for some <emphasis role="bold">CHOICE</emphasis> types which
      consist entirely of primitive string types such as <emphasis role="bold">DirectoryString</emphasis> and <emphasis role="bold">Time</emphasis>.
    </para>
    <para>
      These functions should <emphasis role="bold">not</emphasis> be used
      to examine or modify <emphasis role="bold">ASN1_INTEGER</emphasis> or
      <emphasis role="bold">ASN1_ENUMERATED</emphasis> types: the relevant
      <emphasis role="bold">INTEGER</emphasis> or <emphasis role="bold">ENUMERATED</emphasis> utility functions should be used
      instead.
    </para>
    <para>
      In general it cannot be assumed that the data returned by
      ASN1_STRING_data() is null terminated or does not contain embedded
      nulls. The actual format of the data will depend on the actual string
      type itself: for example for and IA5String the data will be ASCII,
      for a BMPString two bytes per character in big endian format,
      UTF8String will be in UTF8 format.
    </para>
    <para>
      Similar care should be take to ensure the data is in the correct
      format when calling ASN1_STRING_set().
    </para>
  </refsection>
  <refsection xml:id="ID-8052639892ebdee5a65e3a3ad57fd0a4"><title>SEE ALSO</title>
    <para>
      <citerefentry> <refentrytitle>ERR_get_error</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>
    </para>
  </refsection>
  <refsection xml:id="ID-d8370e271bc3b130fc2f2189790bfaf5"><title>COPYRIGHT</title>
    <para>
      Copyright 2002-2016 The OpenSSL Project Authors. All Rights Reserved.
    </para>
    <para>
      Licensed under the OpenSSL license (the "License").  You may not use
      this file except in compliance with the License.	You can obtain a
      copy in the file LICENSE in the source distribution or at <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.openssl.org/source/license.html">https://www.openssl.org/source/license.html</link>.
    </para>
  </refsection>
</refentry>