<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>SSL_CTX_set_cipher_list.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>SSL_CTX_set_cipher_list, SSL_set_cipher_list</refname>
<refpurpose>choose list of available SSL_CIPHERs</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis format="linespecific">#include &lt;openssl/ssl.h&gt;</synopsis>
<synopsis format="linespecific">int SSL_CTX_set_cipher_list(SSL_CTX *ctx, const char *str);
int SSL_set_cipher_list(SSL *ssl, const char *str);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="sources.openssl.doc.ssl.SSL_CTX_set_cipher_list.pod:DESCRIPTION"><title>DESCRIPTION</title>
    <para>
      SSL_CTX_set_cipher_list() sets the list of available ciphers for
      <emphasis role="bold">ctx</emphasis> using the control string
      <emphasis role="bold">str</emphasis>. The format of the string is
      described in ciphers(1). The list of ciphers is inherited by all
      <emphasis role="bold">ssl</emphasis> objects created from <emphasis role="bold">ctx</emphasis>.
    </para>
    <para>
      SSL_set_cipher_list() sets the list of ciphers only for <emphasis role="bold">ssl</emphasis>.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.ssl.SSL_CTX_set_cipher_list.pod:NOTES"><title>NOTES</title>
    <para>
      The control string <emphasis role="bold">str</emphasis> should be
      universally usable and not depend on details of the library
      configuration (ciphers compiled in). Thus no syntax checking takes
      place. Items that are not recognized, because the corresponding
      ciphers are not compiled in or because they are mistyped, are simply
      ignored. Failure is only flagged if no ciphers could be collected at
      all.
    </para>
    <para>
      It should be noted, that inclusion of a cipher to be used into the
      list is a necessary condition. On the client side, the inclusion into
      the list is also sufficient unless the security level excludes it. On
      the server side, additional restrictions apply. All ciphers have
      additional requirements. ADH ciphers don't need a certificate, but
      DH-parameters must have been set. All other ciphers need a
      corresponding certificate and key.
    </para>
    <para>
      A RSA cipher can only be chosen, when a RSA certificate is available.
      RSA export ciphers with a keylength of 512 bits for the RSA key
      require a temporary 512 bit RSA key, as typically the supplied key
      has a length of 1024 bit (see SSL_CTX_set_tmp_rsa_callback(3)). RSA
      ciphers using DHE need a certificate and key and additional
      DH-parameters (see SSL_CTX_set_tmp_dh_callback(3)).
    </para>
    <para>
      A DSA cipher can only be chosen, when a DSA certificate is available.
      DSA ciphers always use DH key exchange and therefore need
      DH-parameters (see SSL_CTX_set_tmp_dh_callback(3)).
    </para>
    <para>
      When these conditions are not met for any cipher in the list (e.g. a
      client only supports export RSA ciphers with a asymmetric key length
      of 512 bits and the server is not configured to use temporary RSA
      keys), the "no shared cipher" (SSL_R_NO_SHARED_CIPHER) error is
      generated and the handshake will fail.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.ssl.SSL_CTX_set_cipher_list.pod:RETURN_VALUES"><title>RETURN VALUES</title>
    <para>
      SSL_CTX_set_cipher_list() and SSL_set_cipher_list() return 1 if any
      cipher could be selected and 0 on complete failure.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.ssl.SSL_CTX_set_cipher_list.pod:SEE_ALSO"><title>SEE ALSO</title>
    <para>
      ssl(3), SSL_get_ciphers(3), SSL_CTX_use_certificate(3),
      SSL_CTX_set_tmp_rsa_callback(3), SSL_CTX_set_tmp_dh_callback(3),
      ciphers(1)
    </para>
  </refsection>
</refentry>