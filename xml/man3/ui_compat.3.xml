<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>ui_compat.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>des_read_password, des_read_2passwords, des_read_pw_string, des_read_pw</refname>
<refpurpose>Compatibility user interface functions</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis format="linespecific">#include &lt;openssl/des_old.h&gt;</synopsis>
<synopsis format="linespecific">int des_read_password(DES_cblock *key,const char *prompt,int verify);
int des_read_2passwords(DES_cblock *key1,DES_cblock *key2,
       const char *prompt,int verify);</synopsis>
<synopsis format="linespecific">int des_read_pw_string(char *buf,int length,const char *prompt,int verify);
int des_read_pw(char *buf,char *buff,int size,const char *prompt,int verify);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="sources.openssl.doc.crypto.ui_compat.pod:DESCRIPTION"><title>DESCRIPTION</title>
    <para>
      The DES library contained a few routines to prompt for passwords. 
      These aren't necessarely dependent on DES, and have therefore become
      part of the UI compatibility library.
    </para>
    <para>
      des_read_pw() writes the string specified by <emphasis role="italic">prompt</emphasis> to standard output turns echo off and
      reads an input string from the terminal.	The string is returned in
      <emphasis role="italic">buf</emphasis>, which must have spac for at
      least <emphasis role="italic">size</emphasis> bytes. If <emphasis role="italic">verify</emphasis> is set, the user is asked for the
      password twice and unless the two copies match, an error is returned.
       The second password is stored in <emphasis role="italic">buff</emphasis>, which must therefore also be at least
      <emphasis role="italic">size</emphasis> bytes.  A return code of -1
      indicates a system error, 1 failure due to use interaction, and 0 is
      success.	All other functions described here use des_read_pw() to do
      the work.
    </para>
    <para>
      des_read_pw_string() is a variant of des_read_pw() that provides a
      buffer for you if <emphasis role="italic">verify</emphasis> is set.
    </para>
    <para>
      des_read_password() calls des_read_pw() and converts the password to
      a DES key by calling DES_string_to_key(); des_read_2password()
      operates in the same way as des_read_password() except that it
      generates two keys by using the DES_string_to_2key() function.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.ui_compat.pod:NOTES"><title>NOTES</title>
    <para>
      des_read_pw_string() is available in the MIT Kerberos library as
      well, and is also available under the name EVP_read_pw_string().
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.ui_compat.pod:SEE_ALSO"><title>SEE ALSO</title>
    <para>
      ui(3), ui_create(3)
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.ui_compat.pod:AUTHOR"><title>AUTHOR</title>
    <para>
      Richard Levitte (richard@levitte.org) for the OpenSSL project
      (http://www.openssl.org).
    </para>
  </refsection>
</refentry>