<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>SSL_CTX_set_psk_client_callback.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>SSL_CTX_set_psk_client_callback, SSL_set_psk_client_callback</refname>
<refpurpose>set PSK client callback</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis>#include &lt;openssl/ssl.h&gt;</synopsis>
<synopsis>void SSL_CTX_set_psk_client_callback(SSL_CTX *ctx,
       unsigned int (*callback)(SSL *ssl, const char *hint,
       char *identity, unsigned int max_identity_len,
       unsigned char *psk, unsigned int max_psk_len));
void SSL_set_psk_client_callback(SSL *ssl,
       unsigned int (*callback)(SSL *ssl, const char *hint,
       char *identity, unsigned int max_identity_len,
       unsigned char *psk, unsigned int max_psk_len));</synopsis>
<synopsis/>
  </refsynopsisdiv>
  <refsection xml:id="ID-3d37af7b4c4c4b80c013c7b2e2145853"><title>DESCRIPTION</title>
    <para>
      A client application must provide a callback function which is called
      when the client is sending the ClientKeyExchange message to the
      server.
    </para>
    <para>
      The purpose of the callback function is to select the PSK identity
      and the pre-shared key to use during the connection setup phase.
    </para>
    <para>
      The callback is set using functions SSL_CTX_set_psk_client_callback()
      or SSL_set_psk_client_callback(). The callback function is given the
      connection in parameter <emphasis role="bold">ssl</emphasis>, a
      <emphasis role="bold">NULL</emphasis>-terminated PSK identity hint
      sent by the server in parameter <emphasis role="bold">hint</emphasis>, a buffer <emphasis role="bold">identity</emphasis> of length <emphasis role="bold">max_identity_len</emphasis> bytes where the resulting
      <emphasis role="bold">NULL</emphasis>-terminated identity is to be
      stored, and a buffer <emphasis role="bold">psk</emphasis> of length
      <emphasis role="bold">max_psk_len</emphasis> bytes where the
      resulting pre-shared key is to be stored.
    </para>
  </refsection>
  <refsection xml:id="ID-5388958faf013f443985877ce8cd4f2e"><title>NOTES</title>
    <para>
      Note that parameter <emphasis role="bold">hint</emphasis> given to
      the callback may be <emphasis role="bold">NULL</emphasis>.
    </para>
  </refsection>
  <refsection xml:id="ID-61498779aa27c9fa50439543cad8e69d"><title>RETURN VALUES</title>
    <para>
      Return values from the client callback are interpreted as follows:
    </para>
    <para>
      On success (callback found a PSK identity and a pre-shared key to
      use) the length (&gt; 0) of <emphasis role="bold">psk</emphasis> in
      bytes is returned.
    </para>
    <para>
      Otherwise or on errors callback should return 0. In this case the
      connection setup fails.
    </para>
  </refsection>
</refentry>