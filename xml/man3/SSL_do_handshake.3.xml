<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>SSL_do_handshake.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>SSL_do_handshake</refname>
<refpurpose>perform a TLS/SSL handshake</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis format="linespecific">#include &lt;openssl/ssl.h&gt;</synopsis>
<synopsis format="linespecific">int SSL_do_handshake(SSL *ssl);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="sources.openssl.doc.ssl.SSL_do_handshake.pod:DESCRIPTION"><title>DESCRIPTION</title>
    <para>
      SSL_do_handshake() will wait for a SSL/TLS handshake to take place.
      If the connection is in client mode, the handshake will be started.
      The handshake routines may have to be explicitly set in advance using
      either SSL_set_connect_state(3) or SSL_set_accept_state(3).
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.ssl.SSL_do_handshake.pod:NOTES"><title>NOTES</title>
    <para>
      The behaviour of SSL_do_handshake() depends on the underlying BIO.
    </para>
    <para>
      If the underlying BIO is <emphasis role="bold">blocking</emphasis>,
      SSL_do_handshake() will only return once the handshake has been
      finished or an error occurred, except for SGC (Server Gated
      Cryptography). For SGC, SSL_do_handshake() may return with -1, but
      SSL_get_error() will yield <emphasis role="bold">SSL_ERROR_WANT_READ/WRITE</emphasis> and
      SSL_do_handshake() should be called again.
    </para>
    <para>
      If the underlying BIO is <emphasis role="bold">non-blocking</emphasis>, SSL_do_handshake() will also
      return when the underlying BIO could not satisfy the needs of
      SSL_do_handshake() to continue the handshake. In this case a call to
      SSL_get_error() with the return value of SSL_do_handshake() will
      yield <emphasis role="bold">SSL_ERROR_WANT_READ</emphasis> or
      <emphasis role="bold">SSL_ERROR_WANT_WRITE</emphasis>. The calling
      process then must repeat the call after taking appropriate action to
      satisfy the needs of SSL_do_handshake(). The action depends on the
      underlying BIO. When using a non-blocking socket, nothing is to be
      done, but select() can be used to check for the required condition.
      When using a buffering BIO, like a BIO pair, data must be written
      into or retrieved out of the BIO before being able to continue.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.ssl.SSL_do_handshake.pod:RETURN_VALUES"><title>RETURN VALUES</title>
    <para>
      The following return values can occur:
    </para>
    <para>
      <variablelist>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.ssl.SSL_do_handshake.pod:0"/>0</term>
          <listitem>
            <para>
	      The TLS/SSL handshake was not successful but was shut down
	      controlled and by the specifications of the TLS/SSL protocol.
	      Call SSL_get_error() with the return value <emphasis role="bold">ret</emphasis> to find out the reason.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.ssl.SSL_do_handshake.pod:1"/>1</term>
          <listitem>
            <para>
	      The TLS/SSL handshake was successfully completed, a TLS/SSL
	      connection has been established.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.ssl.SSL_do_handshake.pod:lt0"/>&lt;0</term>
          <listitem>
            <para>
	      The TLS/SSL handshake was not successful because a fatal
	      error occurred either at the protocol level or a connection
	      failure occurred. The shutdown was not clean. It can also
	      occur of action is need to continue the operation for
	      non-blocking BIOs. Call SSL_get_error() with the return value
	      <emphasis role="bold">ret</emphasis> to find out the reason.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.ssl.SSL_do_handshake.pod:SEE_ALSO"><title>SEE ALSO</title>
    <para>
      SSL_get_error(3), SSL_connect(3), SSL_accept(3), ssl(3), bio(3),
      SSL_set_connect_state(3)
    </para>
  </refsection>
</refentry>