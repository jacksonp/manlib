<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>SSL_CTX_set_msg_callback.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>SSL_CTX_set_msg_callback, SSL_CTX_set_msg_callback_arg, SSL_set_msg_callback, SSL_get_msg_callback_arg</refname>
<refpurpose>install callback for observing protocol messages</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis format="linespecific">#include &lt;openssl/ssl.h&gt;</synopsis>
<synopsis format="linespecific">void SSL_CTX_set_msg_callback(SSL_CTX *ctx, void (*cb)(int write_p, int version, int content_type, const void *buf, size_t len, SSL *ssl, void *arg));
void SSL_CTX_set_msg_callback_arg(SSL_CTX *ctx, void *arg);</synopsis>
<synopsis format="linespecific">void SSL_set_msg_callback(SSL *ssl, void (*cb)(int write_p, int version, int content_type, const void *buf, size_t len, SSL *ssl, void *arg));
void SSL_set_msg_callback_arg(SSL *ssl, void *arg);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="sources.openssl.doc.ssl.SSL_CTX_set_msg_callback.pod:DESCRIPTION"><title>DESCRIPTION</title>
    <para>
      SSL_CTX_set_msg_callback() or SSL_set_msg_callback() can be used to
      define a message callback function <emphasis role="italic">cb</emphasis> for observing all SSL/TLS protocol
      messages (such as handshake messages) that are received or sent. 
      SSL_CTX_set_msg_callback_arg() and SSL_set_msg_callback_arg() can be
      used to set argument <emphasis role="italic">arg</emphasis> to the
      callback function, which is available for arbitrary application use.
    </para>
    <para>
      SSL_CTX_set_msg_callback() and SSL_CTX_set_msg_callback_arg() specify
      default settings that will be copied to new <emphasis role="bold">SSL</emphasis> objects by SSL_new(3).
      SSL_set_msg_callback() and SSL_set_msg_callback_arg() modify the
      actual settings of an <emphasis role="bold">SSL</emphasis> object.
      Using a <emphasis role="bold">0</emphasis> pointer for <emphasis role="italic">cb</emphasis> disables the message callback.
    </para>
    <para>
      When <emphasis role="italic">cb</emphasis> is called by the SSL/TLS
      library for a protocol message, the function arguments have the
      following meaning:
    </para>
    <para>
      <variablelist>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.ssl.SSL_CTX_set_msg_callback.pod:write_p"/><emphasis role="italic">write_p</emphasis></term>
          <listitem>
            <para>
	      This flag is <emphasis role="bold">0</emphasis> when a
	      protocol message has been received and <emphasis role="bold">1</emphasis> when a protocol message has been
	      sent.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.ssl.SSL_CTX_set_msg_callback.pod:version"/><emphasis role="italic">version</emphasis></term>
          <listitem>
            <para>
	      The protocol version according to which the protocol message
	      is interpreted by the library. Currently, this is one of
	      <emphasis role="bold">SSL2_VERSION</emphasis>, <emphasis role="bold">SSL3_VERSION</emphasis> and <emphasis role="bold">TLS1_VERSION</emphasis> (for SSL 2.0, SSL 3.0 and
	      TLS 1.0, respectively).
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.ssl.SSL_CTX_set_msg_callback.pod:content_type"/><emphasis role="italic">content_type</emphasis></term>
          <listitem>
            <para>
	      In the case of SSL 2.0, this is always <emphasis role="bold">0</emphasis>.  In the case of SSL 3.0 or TLS 1.0,
	      this is one of the <emphasis role="bold">ContentType</emphasis> values defined in the
	      protocol specification (<emphasis role="bold">change_cipher_spec(20)</emphasis>, <emphasis role="bold">alert(21)</emphasis>, <emphasis role="bold">handshake(22)</emphasis>; but never <emphasis role="bold">application_data(23)</emphasis> because the
	      callback will only be called for protocol messages).
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.ssl.SSL_CTX_set_msg_callback.pod:buf_len"/><emphasis role="italic">buf</emphasis>, <emphasis role="italic">len</emphasis></term>
          <listitem>
            <para>
	      <emphasis role="italic">buf</emphasis> points to a buffer
	      containing the protocol message, which consists of <emphasis role="italic">len</emphasis> bytes. The buffer is no longer
	      valid after the callback function has returned.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.ssl.SSL_CTX_set_msg_callback.pod:ssl"/><emphasis role="italic">ssl</emphasis></term>
          <listitem>
            <para>
	      The <emphasis role="bold">SSL</emphasis> object that received
	      or sent the message.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.ssl.SSL_CTX_set_msg_callback.pod:arg"/><emphasis role="italic">arg</emphasis></term>
          <listitem>
            <para>
	      The user-defined argument optionally defined by
	      SSL_CTX_set_msg_callback_arg() or SSL_set_msg_callback_arg().
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.ssl.SSL_CTX_set_msg_callback.pod:NOTES"><title>NOTES</title>
    <para>
      Protocol messages are passed to the callback function after
      decryption and fragment collection where applicable. (Thus record
      boundaries are not visible.)
    </para>
    <para>
      If processing a received protocol message results in an error, the
      callback function may not be called.  For example, the callback
      function will never see messages that are considered too large to be
      processed.
    </para>
    <para>
      Due to automatic protocol version negotiation, <emphasis role="italic">version</emphasis> is not necessarily the protocol
      version used by the sender of the message: If a TLS 1.0 ClientHello
      message is received by an SSL 3.0-only server, <emphasis role="italic">version</emphasis> will be <emphasis role="bold">SSL3_VERSION</emphasis>.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.ssl.SSL_CTX_set_msg_callback.pod:SEE_ALSO"><title>SEE ALSO</title>
    <para>
      ssl(3), SSL_new(3)
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.ssl.SSL_CTX_set_msg_callback.pod:HISTORY"><title>HISTORY</title>
    <para>
      SSL_CTX_set_msg_callback(), SSL_CTX_set_msg_callback_arg(),
      SSL_set_msg_callback() and SSL_get_msg_callback_arg() were added in
      OpenSSL 0.9.7.
    </para>
  </refsection>
</refentry>