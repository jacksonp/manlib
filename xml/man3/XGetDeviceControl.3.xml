<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:lang="en">
<info>
    
</info>
<refmeta>
<refentrytitle>xgetdevicecontrol</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class="source"> </refmiscinfo>
<refmiscinfo class="manual"> </refmiscinfo>
</refmeta>
<refnamediv>
    <refname>XGetDeviceControl</refname>
    <refname>XChangeDeviceControl</refname>
    <refpurpose>query and change    input device controls</refpurpose>
</refnamediv>
<refsynopsisdiv xml:id="_synopsis">
<literallayout class="monospaced">#include &lt;X11/extensions/XInput.h&gt;</literallayout>
<literallayout class="monospaced">XDeviceControl *XGetDeviceControl( Display *display,
                                   XDevice *device,
                                   int *controlType);</literallayout>
<literallayout class="monospaced">int XChangeDeviceControl( Display *display,
                          XDevice *device,
                          int controlType,
                          XDeviceControl *control);</literallayout>
<literallayout class="monospaced">display
       Specifies the connection to the X server.</literallayout>
<literallayout class="monospaced">device
       Specifies the device whose control is to be interrogated
       or modified.</literallayout>
<literallayout class="monospaced">controlType
       Specifies the type of control to be interrogated or
       changed.</literallayout>
<literallayout class="monospaced">control
       Specifies the address of an XDeviceControl structure
       that contains the new values for the Device.</literallayout>
</refsynopsisdiv>
<refsect1 xml:id="_description">
<title>DESCRIPTION</title>
<literallayout class="monospaced">These requests are provided to manipulate those input devices
that support device control. A BadMatch error will be generated
if the requested device does not support any device controls.</literallayout>
<literallayout class="monospaced">Valid device control types that can be used with these requests
include the following:</literallayout>
<literallayout class="monospaced">DEVICE_RESOLUTION: Queries or changes the resolution of
valuators on input devices.</literallayout>
<literallayout class="monospaced">The XGetDeviceControl request returns a pointer to an
XDeviceControl structure.</literallayout>
<literallayout class="monospaced">XGetDeviceControl can generate a BadDevice or BadMatch error.</literallayout>
<literallayout class="monospaced">The XChangeDeviceControl request modifies the values of one
control on the specified device. The control is identified by
the id field of the XDeviceControl structure that is passed
with the request.</literallayout>
<literallayout class="monospaced">XChangeDeviceControl can generate a BadDevice, BadMatch, or
BadValue error.</literallayout>
</refsect1>
<refsect1 xml:id="_structures">
<title>STRUCTURES</title>
<literallayout class="monospaced">Each control is described by a structure specific to that control.
These structures are defined in the file XInput.h.</literallayout>
<literallayout class="monospaced">XDeviceControl is a generic structure that contains two fields
that are at the beginning of each class of control:</literallayout>
<literallayout class="monospaced">typedef struct {
    XID class;
    int length;
} XDeviceControl;</literallayout>
<literallayout class="monospaced">The XDeviceResolutionState structure defines the information
that is returned for device resolution for devices with
valuators.</literallayout>
<literallayout class="monospaced">typedef struct {
    XID control;
    int length;
    int num_valuators;
    int* resolutions;
    int* min_resolutions;
    int* max_resolutions;
} XDeviceResolutionState;</literallayout>
<literallayout class="monospaced">The XDeviceResolutionControl structure defines the attributes
that can be controlled for keyboard Devices.</literallayout>
<literallayout class="monospaced">typedef struct {
    XID control;
    int length;
    int first_valuator;
    int num_valuators;
    int* resolutions;
} XDeviceResolutionControl;</literallayout>
</refsect1>
<refsect1 xml:id="_diagnostics">
<title>DIAGNOSTICS</title>
<literallayout class="monospaced">BadDevice
       An invalid device was specified. The specified device
       does not exist or has not been opened by this client via
       XOpenInputDevice. This error may also occur if some
       other client has caused the specified device to become
       the X keyboard or X pointer device via the
       XChangeKeyboardDevice or XChangePointerDevice requests.</literallayout>
<literallayout class="monospaced">BadMatch
       This error may occur if an XGetDeviceControl request was
       made specifying a device that has no controls or an
       XChangeDeviceControl request was made with an
       XDeviceControl structure that contains an invalid Device
       type. It may also occur if an invalid combination of
       mask bits is specified ( DvKey but no DvAutoRepeatMode
       for keyboard Devices), or if an invalid KeySym is
       specified for a string Device.</literallayout>
<literallayout class="monospaced">BadValue
       Some numeric value falls outside the range of values
       accepted by the XChangeDeviceControl request. Unless a
       specific range is specified for an argument, the full
       range defined by the argument's type is accepted. Any
       argument defined as a set of alternatives can generate
       this error.</literallayout>
</refsect1>
</refentry>