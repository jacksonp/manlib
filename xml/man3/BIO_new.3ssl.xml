<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>BIO_new.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>BIO_new, BIO_set, BIO_up_ref, BIO_free, BIO_vfree, BIO_free_all</refname>
<refpurpose>BIO allocation and freeing functions</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis>#include &lt;openssl/bio.h&gt;</synopsis>
<synopsis>BIO *  BIO_new(const BIO_METHOD *type);
int    BIO_set(BIO *a,const BIO_METHOD *type);
int    BIO_up_ref(BIO *a);
int    BIO_free(BIO *a);
void   BIO_vfree(BIO *a);
void   BIO_free_all(BIO *a);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="ID-4f5ae06473b26ca6f9f31300456af84c"><title>DESCRIPTION</title>
    <para>
      The BIO_new() function returns a new BIO using method <emphasis role="bold">type</emphasis>.
    </para>
    <para>
      BIO_set() sets the method of an already existing BIO.
    </para>
    <para>
      BIO_up_ref() increments the reference count associated with the BIO
      object.
    </para>
    <para>
      BIO_free() frees up a single BIO, BIO_vfree() also frees up a single
      BIO but it does not return a value. If <emphasis role="bold">a</emphasis> is NULL nothing is done. Calling BIO_free()
      may also have some effect on the underlying I/O structure, for
      example it may close the file being referred to under certain
      circumstances. For more details see the individual BIO_METHOD
      descriptions.
    </para>
    <para>
      BIO_free_all() frees up an entire BIO chain, it does not halt if an
      error occurs freeing up an individual BIO in the chain. If <emphasis role="bold">a</emphasis> is NULL nothing is done.
    </para>
  </refsection>
  <refsection xml:id="ID-994574759aa418a6f498fcc133c71f1c"><title>RETURN VALUES</title>
    <para>
      BIO_new() returns a newly created BIO or NULL if the call fails.
    </para>
    <para>
      BIO_set(), BIO_up_ref() and BIO_free() return 1 for success and 0 for
      failure.
    </para>
    <para>
      BIO_free_all() and BIO_vfree() do not return values.
    </para>
  </refsection>
  <refsection xml:id="ID-0a93429ebe250f64b7cc9bd70cd5dab7"><title>NOTES</title>
    <para>
      If BIO_free() is called on a BIO chain it will only free one BIO
      resulting in a memory leak.
    </para>
    <para>
      Calling BIO_free_all() on a single BIO has the same effect as calling
      BIO_free() on it other than the discarded return value.
    </para>
  </refsection>
  <refsection xml:id="ID-ee65f8445b06fadda6b85e42325521b6"><title>EXAMPLE</title>
    <para>
      Create a memory BIO:
    </para>
    <screen>BIO *mem = BIO_new(BIO_s_mem());</screen>
  </refsection>
  <refsection xml:id="ID-27e6abdc57ce381e796b39b35d438760"><title>COPYRIGHT</title>
    <para>
      Copyright 2000-2016 The OpenSSL Project Authors. All Rights Reserved.
    </para>
    <para>
      Licensed under the OpenSSL license (the "License").  You may not use
      this file except in compliance with the License.	You can obtain a
      copy in the file LICENSE in the source distribution or at <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.openssl.org/source/license.html">https://www.openssl.org/source/license.html</link>.
    </para>
  </refsection>
</refentry>