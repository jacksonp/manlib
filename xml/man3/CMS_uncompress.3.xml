<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>CMS_uncompress.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>CMS_uncompress</refname>
    <refpurpose>uncompress a CMS CompressedData structure</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis format="linespecific">#include &lt;openssl/cms.h&gt;</synopsis>
<synopsis format="linespecific">int CMS_uncompress(CMS_ContentInfo *cms, BIO *dcont, BIO *out, unsigned int flags);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="sources.openssl.doc.crypto.CMS_uncompress.pod:DESCRIPTION"><title>DESCRIPTION</title>
    <para>
      CMS_uncompress() extracts and uncompresses the content from a CMS
      CompressedData structure <emphasis role="bold">cms</emphasis>.
      <emphasis role="bold">data</emphasis> is a BIO to write the content
      to and <emphasis role="bold">flags</emphasis> is an optional set of
      flags.
    </para>
    <para>
      The <emphasis role="bold">dcont</emphasis> parameter is used in the
      rare case where the compressed content is detached. It will normally
      be set to NULL.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.CMS_uncompress.pod:NOTES"><title>NOTES</title>
    <para>
      The only currently supported compression algorithm is zlib: if the
      structure indicates the use of any other algorithm an error is
      returned.
    </para>
    <para>
      If zlib support is not compiled into OpenSSL then CMS_uncompress()
      will always return an error.
    </para>
    <para>
      The following flags can be passed in the <emphasis role="bold">flags</emphasis> parameter.
    </para>
    <para>
      If the <emphasis role="bold">CMS_TEXT</emphasis> flag is set MIME
      headers for type <emphasis role="bold">text/plain</emphasis> are
      deleted from the content. If the content is not of type <emphasis role="bold">text/plain</emphasis> then an error is returned.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.CMS_uncompress.pod:RETURN_VALUES"><title>RETURN VALUES</title>
    <para>
      CMS_uncompress() returns either 1 for success or 0 for failure. The
      error can be obtained from ERR_get_error(3)
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.CMS_uncompress.pod:BUGS"><title>BUGS</title>
    <para>
      The lack of single pass processing and the need to hold all data in
      memory as mentioned in CMS_verify() also applies to CMS_decompress().
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.CMS_uncompress.pod:SEE_ALSO"><title>SEE ALSO</title>
    <para>
      <citerefentry> <refentrytitle>ERR_get_error</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>CMS_compress</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.CMS_uncompress.pod:HISTORY"><title>HISTORY</title>
    <para>
      CMS_uncompress() was added to OpenSSL 0.9.8
    </para>
  </refsection>
</refentry>