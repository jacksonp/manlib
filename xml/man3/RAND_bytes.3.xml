<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>RAND_bytes.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>RAND_bytes, RAND_pseudo_bytes</refname>
<refpurpose>generate random data</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis format="linespecific">#include &lt;openssl/rand.h&gt;</synopsis>
<synopsis format="linespecific">int RAND_bytes(unsigned char *buf, int num);</synopsis>
<synopsis format="linespecific">int RAND_pseudo_bytes(unsigned char *buf, int num);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="sources.openssl.doc.crypto.RAND_bytes.pod:DESCRIPTION"><title>DESCRIPTION</title>
    <para>
      RAND_bytes() puts <emphasis role="bold">num</emphasis>
      cryptographically strong pseudo-random bytes into <emphasis role="bold">buf</emphasis>. An error occurs if the PRNG has not been
      seeded with enough randomness to ensure an unpredictable byte
      sequence.
    </para>
    <para>
      RAND_pseudo_bytes() puts <emphasis role="bold">num</emphasis>
      pseudo-random bytes into <emphasis role="bold">buf</emphasis>.
      Pseudo-random byte sequences generated by RAND_pseudo_bytes() will be
      unique if they are of sufficient length, but are not necessarily
      unpredictable. They can be used for non-cryptographic purposes and
      for certain purposes in cryptographic protocols, but usually not for
      key generation etc.
    </para>
    <para>
      The contents of <emphasis role="bold">buf</emphasis> is mixed into
      the entropy pool before retrieving the new pseudo-random bytes unless
      disabled at compile time (see FAQ).
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.RAND_bytes.pod:RETURN_VALUES"><title>RETURN VALUES</title>
    <para>
      RAND_bytes() returns 1 on success, 0 otherwise. The error code can be
      obtained by ERR_get_error(3). RAND_pseudo_bytes() returns 1 if the
      bytes generated are cryptographically strong, 0 otherwise. Both
      functions return -1 if they are not supported by the current RAND
      method.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.RAND_bytes.pod:SEE_ALSO"><title>SEE ALSO</title>
    <para>
      rand(3), ERR_get_error(3), RAND_add(3)
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.RAND_bytes.pod:HISTORY"><title>HISTORY</title>
    <para>
      RAND_bytes() is available in all versions of SSLeay and OpenSSL.	It
      has a return value since OpenSSL 0.9.5. RAND_pseudo_bytes() was added
      in OpenSSL 0.9.5.
    </para>
  </refsection>
</refentry>