<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>BIO_s_fd.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>BIO_s_fd, BIO_set_fd, BIO_get_fd, BIO_new_fd</refname>
<refpurpose>file descriptor BIO</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis format="linespecific">#include &lt;openssl/bio.h&gt;</synopsis>
<synopsis format="linespecific">BIO_METHOD *   BIO_s_fd(void);</synopsis>
<synopsis format="linespecific">#define BIO_set_fd(b,fd,c)     BIO_int_ctrl(b,BIO_C_SET_FD,c,fd)
#define BIO_get_fd(b,c)        BIO_ctrl(b,BIO_C_GET_FD,0,(char *)c)</synopsis>
<synopsis format="linespecific">BIO *BIO_new_fd(int fd, int close_flag);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="sources.openssl.doc.crypto.BIO_s_fd.pod:DESCRIPTION"><title>DESCRIPTION</title>
    <para>
      BIO_s_fd() returns the file descriptor BIO method. This is a wrapper
      round the platforms file descriptor routines such as read() and
      write().
    </para>
    <para>
      BIO_read() and BIO_write() read or write the underlying descriptor.
      BIO_puts() is supported but BIO_gets() is not.
    </para>
    <para>
      If the close flag is set then then close() is called on the
      underlying file descriptor when the BIO is freed.
    </para>
    <para>
      BIO_reset() attempts to change the file pointer to the start of file
      using lseek(fd, 0, 0).
    </para>
    <para>
      BIO_seek() sets the file pointer to position <emphasis role="bold">ofs</emphasis> from start of file using lseek(fd, ofs,
      0).
    </para>
    <para>
      BIO_tell() returns the current file position by calling lseek(fd, 0,
      1).
    </para>
    <para>
      BIO_set_fd() sets the file descriptor of BIO <emphasis role="bold">b</emphasis> to <emphasis role="bold">fd</emphasis> and
      the close flag to <emphasis role="bold">c</emphasis>.
    </para>
    <para>
      BIO_get_fd() places the file descriptor in <emphasis role="bold">c</emphasis> if it is not NULL, it also returns the file
      descriptor. If <emphasis role="bold">c</emphasis> is not NULL it
      should be of type (int *).
    </para>
    <para>
      BIO_new_fd() returns a file descriptor BIO using <emphasis role="bold">fd</emphasis> and <emphasis role="bold">close_flag</emphasis>.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.BIO_s_fd.pod:NOTES"><title>NOTES</title>
    <para>
      The behaviour of BIO_read() and BIO_write() depends on the behavior
      of the platforms read() and write() calls on the descriptor. If the
      underlying file descriptor is in a non blocking mode then the BIO
      will behave in the manner described in the <citerefentry>
      <refentrytitle>BIO_read</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry> and <citerefentry>
      <refentrytitle>BIO_should_retry</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry> manual pages. 
    </para>
    <para>
      File descriptor BIOs should not be used for socket I/O. Use socket
      BIOs instead.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.BIO_s_fd.pod:RETURN_VALUES"><title>RETURN VALUES</title>
    <para>
      BIO_s_fd() returns the file descriptor BIO method.
    </para>
    <para>
      BIO_reset() returns zero for success and -1 if an error occurred.
      BIO_seek() and BIO_tell() return the current file position or -1 is
      an error occurred. These values reflect the underlying lseek()
      behaviour.
    </para>
    <para>
      BIO_set_fd() always returns 1.
    </para>
    <para>
      BIO_get_fd() returns the file descriptor or -1 if the BIO has not
      been initialized.
    </para>
    <para>
      BIO_new_fd() returns the newly allocated BIO or NULL is an error
      occurred.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.BIO_s_fd.pod:EXAMPLE"><title>EXAMPLE</title>
    <para>
      This is a file descriptor BIO version of "Hello World":
    </para>
    <screen>BIO *out;
out = BIO_new_fd(fileno(stdout), BIO_NOCLOSE);
BIO_printf(out, "Hello World\n");
BIO_free(out);</screen>
  </refsection>
  <refsection xml:id="sources.openssl.doc.crypto.BIO_s_fd.pod:SEE_ALSO"><title>SEE ALSO</title>
    <para>
      <citerefentry> <refentrytitle>BIO_seek</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>BIO_tell</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>BIO_reset</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>BIO_read</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>BIO_write</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>BIO_puts</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>BIO_gets</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>BIO_printf</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>BIO_set_close</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>BIO_get_close</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>
    </para>
  </refsection>
</refentry>