<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>RSA_check_key.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>RSA_check_key</refname>
<refpurpose>validate private RSA keys</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis>#include &lt;openssl/rsa.h&gt;</synopsis>
<synopsis>int RSA_check_key_ex(RSA *rsa, BN_GENCB *cb);</synopsis>
<synopsis>int RSA_check_key(RSA *rsa);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="ID-af5842da141cfeb1e8b26af3e66ee59c"><title>DESCRIPTION</title>
    <para>
      RSA_check_key_ex() function validates RSA keys. It checks that
      <emphasis role="bold">p</emphasis> and <emphasis role="bold">q</emphasis> are in fact prime, and that <emphasis role="bold">n = p*q</emphasis>.
    </para>
    <para>
      It does not work on RSA public keys that have only the modulus and
      public exponent elements populated. It also checks that <emphasis role="bold">d*e = 1 mod (p-1*q-1)</emphasis>, and that <emphasis role="bold">dmp1</emphasis>, <emphasis role="bold">dmq1</emphasis>
      and <emphasis role="bold">iqmp</emphasis> are set correctly or are
      <emphasis role="bold">NULL</emphasis>. It performs integrity checks
      on all the RSA key material, so the RSA key structure must contain
      all the private key data too. Therefore, it cannot be used with any
      arbitrary RSA key object, even if it is otherwise fit for regular RSA
      operation.
    </para>
    <para>
      The <emphasis role="bold">cb</emphasis> parameter is a callback that
      will be invoked in the same manner as <citerefentry>
      <refentrytitle>BN_is_prime_ex</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>.
    </para>
    <para>
      RSA_check_key() is equivalent to RSA_check_key_ex() with a NULL
      <emphasis role="bold">cb</emphasis>.
    </para>
  </refsection>
  <refsection xml:id="ID-1231bf22cfa64c017d54571063a3f67c"><title>RETURN VALUE</title>
    <para>
      RSA_check_key_ex() and RSA_check_key() return 1 if <emphasis role="bold">rsa</emphasis> is a valid RSA key, and 0 otherwise. They
      return -1 if an error occurs while checking the key.
    </para>
    <para>
      If the key is invalid or an error occurred, the reason code can be
      obtained using <citerefentry>
      <refentrytitle>ERR_get_error</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>.
    </para>
  </refsection>
  <refsection xml:id="ID-bcba8721d788584e56bd85e925272996"><title>NOTES</title>
    <para>
      Unlike most other RSA functions, this function does <emphasis role="bold">not</emphasis> work transparently with any underlying
      ENGINE implementation because it uses the key data in the RSA
      structure directly. An ENGINE implementation can override the way key
      data is stored and handled, and can even provide support for HSM keys
      - in which case the RSA structure may contain <emphasis role="bold">no</emphasis> key data at all! If the ENGINE in question
      is only being used for acceleration or analysis purposes, then in all
      likelihood the RSA key data is complete and untouched, but this can't
      be assumed in the general case.
    </para>
  </refsection>
  <refsection xml:id="ID-7e3975112c0a006a0c4688ec40308ae7"><title>BUGS</title>
    <para>
      A method of verifying the RSA key using opaque RSA API functions
      might need to be considered. Right now RSA_check_key() simply uses
      the RSA structure elements directly, bypassing the RSA_METHOD table
      altogether (and completely violating encapsulation and
      object-orientation in the process). The best fix will probably be to
      introduce a "check_key()" handler to the RSA_METHOD function table so
      that alternative implementations can also provide their own
      verifiers.
    </para>
  </refsection>
  <refsection xml:id="ID-cf8843a78fcf10793cb71636432110d8"><title>SEE ALSO</title>
    <para>
      <citerefentry> <refentrytitle>BN_is_prime_ex</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>rsa</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>ERR_get_error</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>
    </para>
  </refsection>
  <refsection xml:id="ID-fe76800cf3fa0825a26fb931b6d8797d"><title>HISTORY</title>
    <para>
      RSA_check_key_ex() appeared after OpenSSL 1.0.2.
    </para>
  </refsection>
</refentry>