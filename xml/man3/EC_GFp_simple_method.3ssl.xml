<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>EC_GFp_simple_method.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>EC_GFp_simple_method, EC_GFp_mont_method, EC_GFp_nist_method, EC_GFp_nistp224_method, EC_GFp_nistp256_method, EC_GFp_nistp521_method, EC_GF2m_simple_method, EC_METHOD_get_field_type</refname>
<refpurpose>Functions for obtaining <emphasis role="bold">EC_METHOD</emphasis> objects.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis>#include &lt;openssl/ec.h&gt;</synopsis>
<synopsis>const EC_METHOD *EC_GFp_simple_method(void);
const EC_METHOD *EC_GFp_mont_method(void);
const EC_METHOD *EC_GFp_nist_method(void);
const EC_METHOD *EC_GFp_nistp224_method(void);
const EC_METHOD *EC_GFp_nistp256_method(void);
const EC_METHOD *EC_GFp_nistp521_method(void);</synopsis>
<synopsis>const EC_METHOD *EC_GF2m_simple_method(void);</synopsis>
<synopsis>int EC_METHOD_get_field_type(const EC_METHOD *meth);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="ID-34611c2f2d44cbb116ce598b599d7ff7"><title>DESCRIPTION</title>
    <para>
      The Elliptic Curve library provides a number of different
      implementations through a single common interface. When constructing
      a curve using EC_GROUP_new (see <citerefentry>
      <refentrytitle>EC_GROUP_new</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>) an implementation method must be provided. The
      functions described here all return a const pointer to an <emphasis role="bold">EC_METHOD</emphasis> structure that can be passed to
      EC_GROUP_NEW. It is important that the correct implementation type
      for the form of curve selected is used.
    </para>
    <para>
      For F2^m curves there is only one implementation choice, i.e.
      EC_GF2_simple_method.
    </para>
    <para>
      For Fp curves the lowest common denominator implementation is the
      EC_GFp_simple_method implementation. All other implementations are
      based on this one. EC_GFp_mont_method builds on EC_GFp_simple_method
      but adds the use of montgomery multiplication (see <citerefentry>
      <refentrytitle>BN_mod_mul_montgomery</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>). EC_GFp_nist_method offers
      an implementation optimised for use with NIST recommended curves
      (NIST curves are available through EC_GROUP_new_by_curve_name as
      described in <citerefentry>
      <refentrytitle>EC_GROUP_new</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>).
    </para>
    <para>
      The functions EC_GFp_nistp224_method, EC_GFp_nistp256_method and
      EC_GFp_nistp521_method offer 64 bit optimised implementations for the
      NIST P224, P256 and P521 curves respectively. Note, however, that
      these implementations are not available on all platforms.
    </para>
    <para>
      EC_METHOD_get_field_type identifies what type of field the EC_METHOD
      structure supports, which will be either F2^m or Fp. If the field
      type is Fp then the value <emphasis role="bold">NID_X9_62_prime_field</emphasis> is returned. If the
      field type is F2^m then the value <emphasis role="bold">NID_X9_62_characteristic_two_field</emphasis> is
      returned. These values are defined in the obj_mac.h header file.
    </para>
  </refsection>
  <refsection xml:id="ID-b1a3431bf938a834bb43405dfd874110"><title>RETURN VALUES</title>
    <para>
      All EC_GFp* functions and EC_GF2m_simple_method always return a const
      pointer to an EC_METHOD structure.
    </para>
    <para>
      EC_METHOD_get_field_type returns an integer that identifies the type
      of field the EC_METHOD structure supports.
    </para>
  </refsection>
  <refsection xml:id="ID-e402775aeda8236614816e34c11097f7"><title>SEE ALSO</title>
    <para>
      <citerefentry> <refentrytitle>crypto</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>ec</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>EC_GROUP_new</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>EC_GROUP_copy</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>EC_POINT_new</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>EC_POINT_add</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>EC_KEY_new</refentrytitle> <manvolnum>3</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>d2i_ECPKParameters</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>BN_mod_mul_montgomery</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>
    </para>
  </refsection>
  <refsection xml:id="ID-81e3f7d004ebd9f349473fe3035c066c"><title>COPYRIGHT</title>
    <para>
      Copyright 2013-2016 The OpenSSL Project Authors. All Rights Reserved.
    </para>
    <para>
      Licensed under the OpenSSL license (the "License").  You may not use
      this file except in compliance with the License.	You can obtain a
      copy in the file LICENSE in the source distribution or at <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.openssl.org/source/license.html">https://www.openssl.org/source/license.html</link>.
    </para>
  </refsection>
</refentry>