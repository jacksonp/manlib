<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>verify.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>verify</refname>
<refpurpose>Utility to verify certificates.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis format="linespecific"><emphasis role="bold">openssl</emphasis> <emphasis role="bold">verify</emphasis>
[<emphasis role="bold">-CAfile file</emphasis>]
[<emphasis role="bold">-CApath directory</emphasis>]
[<emphasis role="bold">-attime timestamp</emphasis>]
[<emphasis role="bold">-check_ss_sig</emphasis>]
[<emphasis role="bold">-CRLfile file</emphasis>]
[<emphasis role="bold">-crl_check</emphasis>]
[<emphasis role="bold">-crl_check_all</emphasis>]
[<emphasis role="bold">-explicit_policy</emphasis>]
[<emphasis role="bold">-extended_crl</emphasis>]
[<emphasis role="bold">-help</emphasis>]
[<emphasis role="bold">-ignore_critical</emphasis>]
[<emphasis role="bold">-inhibit_any</emphasis>]
[<emphasis role="bold">-inhibit_map</emphasis>]
[<emphasis role="bold">-issuer_checks</emphasis>]
[<emphasis role="bold">-partial_chain</emphasis>]
[<emphasis role="bold">-policy arg</emphasis>]
[<emphasis role="bold">-policy_check</emphasis>]
[<emphasis role="bold">-policy_print</emphasis>]
[<emphasis role="bold">-purpose purpose</emphasis>]
[<emphasis role="bold">-suiteB_128</emphasis>]
[<emphasis role="bold">-suiteB_128_only</emphasis>]
[<emphasis role="bold">-suiteB_192</emphasis>]
[<emphasis role="bold">-trusted_first</emphasis>]
[<emphasis role="bold">-no_alt_chains</emphasis>]
[<emphasis role="bold">-untrusted file</emphasis>]
[<emphasis role="bold">-use_deltas</emphasis>]
[<emphasis role="bold">-verbose</emphasis>]
[<emphasis role="bold">-verify_depth num</emphasis>]
[<emphasis role="bold">-verify_email email</emphasis>]
[<emphasis role="bold">-verify_hostname hostname</emphasis>]
[<emphasis role="bold">-verify_ip ip</emphasis>]
[<emphasis role="bold">-verify_name name</emphasis>]
[<emphasis role="bold">-x509_strict</emphasis>]
[<emphasis role="bold">-</emphasis>]
[certificates]</synopsis>
<synopsis format="linespecific"/>
  </refsynopsisdiv>
  <refsection xml:id="sources.openssl.doc.apps.verify.pod:DESCRIPTION"><title>DESCRIPTION</title>
    <para>
      The <emphasis role="bold">verify</emphasis> command verifies
      certificate chains.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.verify.pod:COMMAND_OPTIONS"><title>COMMAND OPTIONS</title>
    <para>
      <variablelist>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-CAfile_file"/><emphasis role="bold">-CAfile file</emphasis></term>
          <listitem>
            <para>
	      A file of trusted certificates. The file should contain
	      multiple certificates in PEM format concatenated together.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-CApath_directory"/><emphasis role="bold">-CApath directory</emphasis></term>
          <listitem>
            <para>
	      A directory of trusted certificates. The certificates should
	      have names of the form: hash.0 or have symbolic links to them
	      of this form ("hash" is the hashed certificate subject name:
	      see the <emphasis role="bold">-hash</emphasis> option of the
	      <emphasis role="bold">x509</emphasis> utility). Under Unix
	      the <emphasis role="bold">c_rehash</emphasis> script will
	      automatically create symbolic links to a directory of
	      certificates.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-attime_timestamp"/><emphasis role="bold">-attime timestamp</emphasis></term>
          <listitem>
            <para>
	      Perform validation checks using time specified by <emphasis role="bold">timestamp</emphasis> and not current system time.
	      <emphasis role="bold">timestamp</emphasis> is the number of
	      seconds since 01.01.1970 (UNIX time).
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-check_ss_sig"/><emphasis role="bold">-check_ss_sig</emphasis></term>
          <listitem>
            <para>
	      Verify the signature on the self-signed root CA. This is
	      disabled by default because it doesn't add any security.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-CRLfile_file"/><emphasis role="bold">-CRLfile file</emphasis></term>
          <listitem>
            <para>
	      File containing one or more CRL's (in PEM format) to load.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-crl_check"/><emphasis role="bold">-crl_check</emphasis></term>
          <listitem>
            <para>
	      Checks end entity certificate validity by attempting to look
	      up a valid CRL. If a valid CRL cannot be found an error
	      occurs.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-crl_check_all"/><emphasis role="bold">-crl_check_all</emphasis></term>
          <listitem>
            <para>
	      Checks the validity of <emphasis role="bold">all</emphasis>
	      certificates in the chain by attempting to look up valid
	      CRLs.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-explicit_policy"/><emphasis role="bold">-explicit_policy</emphasis></term>
          <listitem>
            <para>
	      Set policy variable require-explicit-policy (see RFC5280).
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-extended_crl"/><emphasis role="bold">-extended_crl</emphasis></term>
          <listitem>
            <para>
	      Enable extended CRL features such as indirect CRLs and
	      alternate CRL signing keys.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-help"/><emphasis role="bold">-help</emphasis></term>
          <listitem>
            <para>
	      Print out a usage message.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-ignore_critical"/><emphasis role="bold">-ignore_critical</emphasis></term>
          <listitem>
            <para>
	      Normally if an unhandled critical extension is present which
	      is not supported by OpenSSL the certificate is rejected (as
	      required by RFC5280). If this option is set critical
	      extensions are ignored.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-inhibit_any"/><emphasis role="bold">-inhibit_any</emphasis></term>
          <listitem>
            <para>
	      Set policy variable inhibit-any-policy (see RFC5280).
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-inhibit_map"/><emphasis role="bold">-inhibit_map</emphasis></term>
          <listitem>
            <para>
	      Set policy variable inhibit-policy-mapping (see RFC5280).
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-issuer_checks"/><emphasis role="bold">-issuer_checks</emphasis></term>
          <listitem>
            <para>
	      Print out diagnostics relating to searches for the issuer
	      certificate of the current certificate. This shows why each
	      candidate issuer certificate was rejected. The presence of
	      rejection messages does not itself imply that anything is
	      wrong; during the normal verification process, several
	      rejections may take place.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-partial_chain"/><emphasis role="bold">-partial_chain</emphasis></term>
          <listitem>
            <para>
	      Allow partial certificate chain if at least one certificate
	      is in trusted store.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-policy_arg"/><emphasis role="bold">-policy arg</emphasis></term>
          <listitem>
            <para>
	      Enable policy processing and add <emphasis role="bold">arg</emphasis> to the user-initial-policy-set
	      (see RFC5280). The policy <emphasis role="bold">arg</emphasis> can be an object name an OID in
	      numeric form. This argument can appear more than once.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-policy_check"/><emphasis role="bold">-policy_check</emphasis></term>
          <listitem>
            <para>
	      Enables certificate policy processing.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-policy_print"/><emphasis role="bold">-policy_print</emphasis></term>
          <listitem>
            <para>
	      Print out diagnostics related to policy processing.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-purpose_purpose"/><emphasis role="bold">-purpose purpose</emphasis></term>
          <listitem>
            <para>
	      The intended use for the certificate. If this option is not
	      specified, <emphasis role="bold">verify</emphasis> will not
	      consider certificate purpose during chain verification.
	      Currently accepted uses are <emphasis role="bold">sslclient</emphasis>, <emphasis role="bold">sslserver</emphasis>, <emphasis role="bold">nssslserver</emphasis>, <emphasis role="bold">smimesign</emphasis>, <emphasis role="bold">smimeencrypt</emphasis>. See the <emphasis role="bold">VERIFY OPERATION</emphasis> section for more
	      information.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-suiteB_128_only_-suiteB_128_-suiteB_192"/><emphasis role="bold">-suiteB_128_only</emphasis>, <emphasis role="bold">-suiteB_128</emphasis>, <emphasis role="bold">-suiteB_192</emphasis></term>
          <listitem>
            <para>
	      enable the Suite B mode operation at 128 bit Level of
	      Security, 128 bit or 192 bit, or only 192 bit Level of
	      Security respectively. See RFC6460 for details. In particular
	      the supported signature algorithms are reduced to support
	      only ECDSA and SHA256 or SHA384 and only the elliptic curves
	      P-256 and P-384.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-trusted_first"/><emphasis role="bold">-trusted_first</emphasis></term>
          <listitem>
            <para>
	      Use certificates in CA file or CA directory before
	      certificates in untrusted file when building the trust chain
	      to verify certificates. This is mainly useful in environments
	      with Bridge CA or Cross-Certified CAs.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-no_alt_chains"/><emphasis role="bold">-no_alt_chains</emphasis></term>
          <listitem>
            <para>
	      When building a certificate chain, if the first certificate
	      chain found is not trusted, then OpenSSL will continue to
	      check to see if an alternative chain can be found that is
	      trusted. With this option that behaviour is suppressed so
	      that only the first chain found is ever used. Using this
	      option will force the behaviour to match that of OpenSSL
	      versions prior to 1.1.0.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-untrusted_file"/><emphasis role="bold">-untrusted file</emphasis></term>
          <listitem>
            <para>
	      A file of untrusted certificates. The file should contain
	      multiple certificates in PEM format concatenated together.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-use_deltas"/><emphasis role="bold">-use_deltas</emphasis></term>
          <listitem>
            <para>
	      Enable support for delta CRLs.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-verbose"/><emphasis role="bold">-verbose</emphasis></term>
          <listitem>
            <para>
	      Print extra information about the operations being performed.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-verify_depth_num"/><emphasis role="bold">-verify_depth num</emphasis></term>
          <listitem>
            <para>
	      Limit the maximum depth of the certificate chain to <emphasis role="bold">num</emphasis> certificates.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-verify_email_email"/><emphasis role="bold">-verify_email email</emphasis></term>
          <listitem>
            <para>
	      Verify if the <emphasis role="bold">email</emphasis> matches
	      the email address in Subject Alternative Name or the email in
	      the subject Distinguished Name.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-verify_hostname_hostname"/><emphasis role="bold">-verify_hostname hostname</emphasis></term>
          <listitem>
            <para>
	      Verify if the <emphasis role="bold">hostname</emphasis>
	      matches DNS name in Subject Alternative Name or Common Name
	      in the subject certificate.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-verify_ip_ip"/><emphasis role="bold">-verify_ip ip</emphasis></term>
          <listitem>
            <para>
	      Verify if the <emphasis role="bold">ip</emphasis> matches the
	      IP address in Subject Alternative Name of the subject
	      certificate.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-verify_name_name"/><emphasis role="bold">-verify_name name</emphasis></term>
          <listitem>
            <para>
	      Use default verification options like trust model and
	      required certificate policies identified by <emphasis role="bold">name</emphasis>. Supported usages include:
	      default, pkcs7, smime_sign, ssl_client, ssl_server.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-x509_strict"/><emphasis role="bold">-x509_strict</emphasis></term>
          <listitem>
            <para>
	      For strict X.509 compliance, disable non-compliant
	      workarounds for broken certificates.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:-"/><emphasis role="bold">-</emphasis></term>
          <listitem>
            <para>
	      Indicates the last option. All arguments following this are
	      assumed to be certificate files. This is useful if the first
	      certificate filename begins with a <emphasis role="bold">-</emphasis>.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:certificates"/><emphasis role="bold">certificates</emphasis></term>
          <listitem>
            <para>
	      One or more certificates to verify. If no certificates are
	      given, <emphasis role="bold">verify</emphasis> will attempt
	      to read a certificate from standard input. Certificates must
	      be in PEM format.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.verify.pod:VERIFY_OPERATION"><title>VERIFY OPERATION</title>
    <para>
      The <emphasis role="bold">verify</emphasis> program uses the same
      functions as the internal SSL and S/MIME verification, therefore this
      description applies to these verify operations too.
    </para>
    <para>
      There is one crucial difference between the verify operations
      performed by the <emphasis role="bold">verify</emphasis> program:
      wherever possible an attempt is made to continue after an error
      whereas normally the verify operation would halt on the first error.
      This allows all the problems with a certificate chain to be
      determined.
    </para>
    <para>
      The verify operation consists of a number of separate steps.
    </para>
    <para>
      Firstly a certificate chain is built up starting from the supplied
      certificate and ending in the root CA. It is an error if the whole
      chain cannot be built up. The chain is built up by looking up the
      issuers certificate of the current certificate. If a certificate is
      found which is its own issuer it is assumed to be the root CA. 
    </para>
    <para>
      The process of 'looking up the issuers certificate' itself involves a
      number of steps. In versions of OpenSSL before 0.9.5a the first
      certificate whose subject name matched the issuer of the current
      certificate was assumed to be the issuers certificate. In OpenSSL
      0.9.6 and later all certificates whose subject name matches the
      issuer name of the current certificate are subject to further tests.
      The relevant authority key identifier components of the current
      certificate (if present) must match the subject key identifier (if
      present) and issuer and serial number of the candidate issuer, in
      addition the keyUsage extension of the candidate issuer (if present)
      must permit certificate signing. 
    </para>
    <para>
      The lookup first looks in the list of untrusted certificates and if
      no match is found the remaining lookups are from the trusted
      certificates. The root CA is always looked up in the trusted
      certificate list: if the certificate to verify is a root certificate
      then an exact match must be found in the trusted list.
    </para>
    <para>
      The second operation is to check every untrusted certificate's
      extensions for consistency with the supplied purpose. If the
      <emphasis role="bold">-purpose</emphasis> option is not included then
      no checks are done. The supplied or "leaf" certificate must have
      extensions compatible with the supplied purpose and all other
      certificates must also be valid CA certificates. The precise
      extensions required are described in more detail in the <emphasis role="bold">CERTIFICATE EXTENSIONS</emphasis> section of the
      <emphasis role="bold">x509</emphasis> utility.
    </para>
    <para>
      The third operation is to check the trust settings on the root CA.
      The root CA should be trusted for the supplied purpose. For
      compatibility with previous versions of SSLeay and OpenSSL a
      certificate with no trust settings is considered to be valid for all
      purposes.
    </para>
    <para>
      The final operation is to check the validity of the certificate
      chain. The validity period is checked against the current system time
      and the notBefore and notAfter dates in the certificate. The
      certificate signatures are also checked at this point.
    </para>
    <para>
      If all operations complete successfully then certificate is
      considered valid. If any operation fails then the certificate is not
      valid.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.verify.pod:DIAGNOSTICS"><title>DIAGNOSTICS</title>
    <para>
      When a verify operation fails the output messages can be somewhat
      cryptic. The general form of the error message is:
    </para>
    <screen>server.pem: /C=AU/ST=Queensland/O=CryptSoft Pty Ltd/CN=Test CA (1024 bit)
error 24 at 1 depth lookup:invalid CA certificate</screen>
    <para>
      The first line contains the name of the certificate being verified
      followed by the subject name of the certificate. The second line
      contains the error number and the depth. The depth is number of the
      certificate being verified when a problem was detected starting with
      zero for the certificate being verified itself then 1 for the CA that
      signed the certificate and so on. Finally a text version of the error
      number is presented.
    </para>
    <para>
      An exhaustive list of the error codes and messages is shown below,
      this also includes the name of the error code as defined in the
      header file x509_vfy.h Some of the error codes are defined but never
      returned: these are described as "unused".
    </para>
    <para>
      <variablelist>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:0_X509_V_OK:_ok"/><emphasis role="bold">0 X509_V_OK: ok</emphasis></term>
          <listitem>
            <para>
	      the operation was successful.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:2_X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT:_unable_to_get_issuer_certificate"/><emphasis role="bold">2 X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT: unable to get issuer certificate</emphasis></term>
          <listitem>
            <para>
	      the issuer certificate of a looked up certificate could not
	      be found. This normally means the list of trusted
	      certificates is not complete.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:3_X509_V_ERR_UNABLE_TO_GET_CRL:_unable_to_get_certificate_CRL"/><emphasis role="bold">3 X509_V_ERR_UNABLE_TO_GET_CRL: unable to get certificate CRL</emphasis></term>
          <listitem>
            <para>
	      the CRL of a certificate could not be found.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:4_X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE:_unable_to_decrypt_certificates_signature"/><emphasis role="bold">4 X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE: unable to decrypt certificate's signature</emphasis></term>
          <listitem>
            <para>
	      the certificate signature could not be decrypted. This means
	      that the actual signature value could not be determined
	      rather than it not matching the expected value, this is only
	      meaningful for RSA keys.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:5_X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE:_unable_to_decrypt_CRLs_signature"/><emphasis role="bold">5 X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE: unable to decrypt CRL's signature</emphasis></term>
          <listitem>
            <para>
	      the CRL signature could not be decrypted: this means that the
	      actual signature value could not be determined rather than it
	      not matching the expected value. Unused.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:6_X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY:_unable_to_decode_issuer_public_key"/><emphasis role="bold">6 X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY: unable to decode issuer public key</emphasis></term>
          <listitem>
            <para>
	      the public key in the certificate SubjectPublicKeyInfo could
	      not be read.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:7_X509_V_ERR_CERT_SIGNATURE_FAILURE:_certificate_signature_failure"/><emphasis role="bold">7 X509_V_ERR_CERT_SIGNATURE_FAILURE: certificate signature failure</emphasis></term>
          <listitem>
            <para>
	      the signature of the certificate is invalid.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:8_X509_V_ERR_CRL_SIGNATURE_FAILURE:_CRL_signature_failure"/><emphasis role="bold">8 X509_V_ERR_CRL_SIGNATURE_FAILURE: CRL signature failure</emphasis></term>
          <listitem>
            <para>
	      the signature of the certificate is invalid.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:9_X509_V_ERR_CERT_NOT_YET_VALID:_certificate_is_not_yet_valid"/><emphasis role="bold">9 X509_V_ERR_CERT_NOT_YET_VALID: certificate is not yet valid</emphasis></term>
          <listitem>
            <para>
	      the certificate is not yet valid: the notBefore date is after
	      the current time.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:10_X509_V_ERR_CERT_HAS_EXPIRED:_certificate_has_expired"/><emphasis role="bold">10 X509_V_ERR_CERT_HAS_EXPIRED: certificate has expired</emphasis></term>
          <listitem>
            <para>
	      the certificate has expired: that is the notAfter date is
	      before the current time.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:11_X509_V_ERR_CRL_NOT_YET_VALID:_CRL_is_not_yet_valid"/><emphasis role="bold">11 X509_V_ERR_CRL_NOT_YET_VALID: CRL is not yet valid</emphasis></term>
          <listitem>
            <para>
	      the CRL is not yet valid.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:12_X509_V_ERR_CRL_HAS_EXPIRED:_CRL_has_expired"/><emphasis role="bold">12 X509_V_ERR_CRL_HAS_EXPIRED: CRL has expired</emphasis></term>
          <listitem>
            <para>
	      the CRL has expired.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:13_X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD:_format_error_in_certificates_notBefore_field"/><emphasis role="bold">13 X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD: format error in certificate's notBefore field</emphasis></term>
          <listitem>
            <para>
	      the certificate notBefore field contains an invalid time.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:14_X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD:_format_error_in_certificates_notAfter_field"/><emphasis role="bold">14 X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD: format error in certificate's notAfter field</emphasis></term>
          <listitem>
            <para>
	      the certificate notAfter field contains an invalid time.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:15_X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD:_format_error_in_CRLs_lastUpdate_field"/><emphasis role="bold">15 X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD: format error in CRL's lastUpdate field</emphasis></term>
          <listitem>
            <para>
	      the CRL lastUpdate field contains an invalid time.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:16_X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD:_format_error_in_CRLs_nextUpdate_field"/><emphasis role="bold">16 X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD: format error in CRL's nextUpdate field</emphasis></term>
          <listitem>
            <para>
	      the CRL nextUpdate field contains an invalid time.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:17_X509_V_ERR_OUT_OF_MEM:_out_of_memory"/><emphasis role="bold">17 X509_V_ERR_OUT_OF_MEM: out of memory</emphasis></term>
          <listitem>
            <para>
	      an error occurred trying to allocate memory. This should
	      never happen.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:18_X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT:_self_signed_certificate"/><emphasis role="bold">18 X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT: self signed certificate</emphasis></term>
          <listitem>
            <para>
	      the passed certificate is self signed and the same
	      certificate cannot be found in the list of trusted
	      certificates.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:19_X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN:_self_signed_certificate_in_certificate_chain"/><emphasis role="bold">19 X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN: self signed certificate in certificate chain</emphasis></term>
          <listitem>
            <para>
	      the certificate chain could be built up using the untrusted
	      certificates but the root could not be found locally.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:20_X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY:_unable_to_get_local_issuer_certificate"/><emphasis role="bold">20 X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY: unable to get local issuer certificate</emphasis></term>
          <listitem>
            <para>
	      the issuer certificate could not be found: this occurs if the
	      issuer certificate of an untrusted certificate cannot be
	      found.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:21_X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE:_unable_to_verify_the_first_certificate"/><emphasis role="bold">21 X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE: unable to verify the first certificate</emphasis></term>
          <listitem>
            <para>
	      no signatures could be verified because the chain contains
	      only one certificate and it is not self signed.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:22_X509_V_ERR_CERT_CHAIN_TOO_LONG:_certificate_chain_too_long"/><emphasis role="bold">22 X509_V_ERR_CERT_CHAIN_TOO_LONG: certificate chain too long</emphasis></term>
          <listitem>
            <para>
	      the certificate chain length is greater than the supplied
	      maximum depth. Unused.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:23_X509_V_ERR_CERT_REVOKED:_certificate_revoked"/><emphasis role="bold">23 X509_V_ERR_CERT_REVOKED: certificate revoked</emphasis></term>
          <listitem>
            <para>
	      the certificate has been revoked.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:24_X509_V_ERR_INVALID_CA:_invalid_CA_certificate"/><emphasis role="bold">24 X509_V_ERR_INVALID_CA: invalid CA certificate</emphasis></term>
          <listitem>
            <para>
	      a CA certificate is invalid. Either it is not a CA or its
	      extensions are not consistent with the supplied purpose.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:25_X509_V_ERR_PATH_LENGTH_EXCEEDED:_path_length_constraint_exceeded"/><emphasis role="bold">25 X509_V_ERR_PATH_LENGTH_EXCEEDED: path length constraint exceeded</emphasis></term>
          <listitem>
            <para>
	      the basicConstraints pathlength parameter has been exceeded.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:26_X509_V_ERR_INVALID_PURPOSE:_unsupported_certificate_purpose"/><emphasis role="bold">26 X509_V_ERR_INVALID_PURPOSE: unsupported certificate purpose</emphasis></term>
          <listitem>
            <para>
	      the supplied certificate cannot be used for the specified
	      purpose.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:27_X509_V_ERR_CERT_UNTRUSTED:_certificate_not_trusted"/><emphasis role="bold">27 X509_V_ERR_CERT_UNTRUSTED: certificate not trusted</emphasis></term>
          <listitem>
            <para>
	      the root CA is not marked as trusted for the specified
	      purpose.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:28_X509_V_ERR_CERT_REJECTED:_certificate_rejected"/><emphasis role="bold">28 X509_V_ERR_CERT_REJECTED: certificate rejected</emphasis></term>
          <listitem>
            <para>
	      the root CA is marked to reject the specified purpose.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:29_X509_V_ERR_SUBJECT_ISSUER_MISMATCH:_subject_issuer_mismatch"/><emphasis role="bold">29 X509_V_ERR_SUBJECT_ISSUER_MISMATCH: subject issuer mismatch</emphasis></term>
          <listitem>
            <para>
	      the current candidate issuer certificate was rejected because
	      its subject name did not match the issuer name of the current
	      certificate. Only displayed when the <emphasis role="bold">-issuer_checks</emphasis> option is set.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:30_X509_V_ERR_AKID_SKID_MISMATCH:_authority_and_subject_key_identifier_mismatch"/><emphasis role="bold">30 X509_V_ERR_AKID_SKID_MISMATCH: authority and subject key identifier mismatch</emphasis></term>
          <listitem>
            <para>
	      the current candidate issuer certificate was rejected because
	      its subject key identifier was present and did not match the
	      authority key identifier current certificate. Only displayed
	      when the <emphasis role="bold">-issuer_checks</emphasis>
	      option is set.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:31_X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH:_authority_and_issuer_serial_number_mismatch"/><emphasis role="bold">31 X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH: authority and issuer serial number mismatch</emphasis></term>
          <listitem>
            <para>
	      the current candidate issuer certificate was rejected because
	      its issuer name and serial number was present and did not
	      match the authority key identifier of the current
	      certificate. Only displayed when the <emphasis role="bold">-issuer_checks</emphasis> option is set.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:32_X509_V_ERR_KEYUSAGE_NO_CERTSIGN:key_usage_does_not_include_certificate_signing"/><emphasis role="bold">32 X509_V_ERR_KEYUSAGE_NO_CERTSIGN:key usage does not include certificate signing</emphasis></term>
          <listitem>
            <para>
	      the current candidate issuer certificate was rejected because
	      its keyUsage extension does not permit certificate signing.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><anchor xml:id="sources.openssl.doc.apps.verify.pod:50_X509_V_ERR_APPLICATION_VERIFICATION:_application_verification_failure"/><emphasis role="bold">50 X509_V_ERR_APPLICATION_VERIFICATION: application verification failure</emphasis></term>
          <listitem>
            <para>
	      an application specific error. Unused.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.verify.pod:BUGS"><title>BUGS</title>
    <para>
      Although the issuer checks are a considerable improvement over the
      old technique they still suffer from limitations in the underlying
      X509_LOOKUP API. One consequence of this is that trusted certificates
      with matching subject name must either appear in a file (as specified
      by the <emphasis role="bold">-CAfile</emphasis> option) or a
      directory (as specified by <emphasis role="bold">-CApath</emphasis>).
      If they occur in both then only the certificates in the file will be
      recognised.
    </para>
    <para>
      Previous versions of OpenSSL assume certificates with matching
      subject name are identical and mishandled them.
    </para>
    <para>
      Previous versions of this documentation swapped the meaning of the
      <emphasis role="bold">X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT</emphasis>
      and <emphasis role="bold">20
      X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY</emphasis> error codes.
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.verify.pod:SEE_ALSO"><title>SEE ALSO</title>
    <para>
      x509(1)
    </para>
  </refsection>
  <refsection xml:id="sources.openssl.doc.apps.verify.pod:HISTORY"><title>HISTORY</title>
    <para>
      The -no_alt_chains options was first added to OpenSSL 1.1.0.
    </para>
  </refsection>
</refentry>