<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>EVP_PKEY_set1_RSA.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>EVP_PKEY_set1_RSA, EVP_PKEY_set1_DSA, EVP_PKEY_set1_DH, EVP_PKEY_set1_EC_KEY,
EVP_PKEY_get1_RSA, EVP_PKEY_get1_DSA, EVP_PKEY_get1_DH, EVP_PKEY_get1_EC_KEY,
EVP_PKEY_get0_RSA, EVP_PKEY_get0_DSA, EVP_PKEY_get0_DH, EVP_PKEY_get0_EC_KEY,
EVP_PKEY_assign_RSA, EVP_PKEY_assign_DSA, EVP_PKEY_assign_DH, EVP_PKEY_assign_EC_KEY,
EVP_PKEY_type, EVP_PKEY_id, EVP_PKEY_base_id</refname>
<refpurpose>EVP_PKEY assignment functions.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis>#include &lt;openssl/evp.h&gt;</synopsis>
<synopsis>int EVP_PKEY_set1_RSA(EVP_PKEY *pkey,RSA *key);
int EVP_PKEY_set1_DSA(EVP_PKEY *pkey,DSA *key);
int EVP_PKEY_set1_DH(EVP_PKEY *pkey,DH *key);
int EVP_PKEY_set1_EC_KEY(EVP_PKEY *pkey,EC_KEY *key);</synopsis>
<synopsis>RSA *EVP_PKEY_get1_RSA(EVP_PKEY *pkey);
DSA *EVP_PKEY_get1_DSA(EVP_PKEY *pkey);
DH *EVP_PKEY_get1_DH(EVP_PKEY *pkey);
EC_KEY *EVP_PKEY_get1_EC_KEY(EVP_PKEY *pkey);</synopsis>
<synopsis>RSA *EVP_PKEY_get0_RSA(EVP_PKEY *pkey);
DSA *EVP_PKEY_get0_DSA(EVP_PKEY *pkey);
DH *EVP_PKEY_get0_DH(EVP_PKEY *pkey);
EC_KEY *EVP_PKEY_get0_EC_KEY(EVP_PKEY *pkey);</synopsis>
<synopsis>int EVP_PKEY_assign_RSA(EVP_PKEY *pkey,RSA *key);
int EVP_PKEY_assign_DSA(EVP_PKEY *pkey,DSA *key);
int EVP_PKEY_assign_DH(EVP_PKEY *pkey,DH *key);
int EVP_PKEY_assign_EC_KEY(EVP_PKEY *pkey,EC_KEY *key);</synopsis>
<synopsis>int EVP_PKEY_id(const EVP_PKEY *pkey);
int EVP_PKEY_base_id(const EVP_PKEY *pkey);
int EVP_PKEY_type(int type);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="ID-af752efae8d00b495674d1c073319d95"><title>DESCRIPTION</title>
    <para>
      EVP_PKEY_set1_RSA(), EVP_PKEY_set1_DSA(), EVP_PKEY_set1_DH() and
      EVP_PKEY_set1_EC_KEY() set the key referenced by <emphasis role="bold">pkey</emphasis> to <emphasis role="bold">key</emphasis>.
    </para>
    <para>
      EVP_PKEY_get1_RSA(), EVP_PKEY_get1_DSA(), EVP_PKEY_get1_DH() and
      EVP_PKEY_get1_EC_KEY() return the referenced key in <emphasis role="bold">pkey</emphasis> or <emphasis role="bold">NULL</emphasis>
      if the key is not of the correct type.
    </para>
    <para>
      EVP_PKEY_get0_RSA(), EVP_PKEY_get0_DSA(), EVP_PKEY_get0_DH() and
      EVP_PKEY_get0_EC_KEY() also return the referenced key in <emphasis role="bold">pkey</emphasis> or <emphasis role="bold">NULL</emphasis>
      if the key is not of the correct type but the reference count of the
      returned key is <emphasis role="bold">not</emphasis> incremented and
      so must not be freed up after use.
    </para>
    <para>
      EVP_PKEY_assign_RSA(), EVP_PKEY_assign_DSA(), EVP_PKEY_assign_DH()
      and EVP_PKEY_assign_EC_KEY() also set the referenced key to <emphasis role="bold">key</emphasis> however these use the supplied <emphasis role="bold">key</emphasis> internally and so <emphasis role="bold">key</emphasis> will be freed when the parent <emphasis role="bold">pkey</emphasis> is freed.
    </para>
    <para>
      EVP_PKEY_base_id() returns the type of <emphasis role="bold">pkey</emphasis>. For example an RSA key will return
      <emphasis role="bold">EVP_PKEY_RSA</emphasis>.
    </para>
    <para>
      EVP_PKEY_id() returns the actual OID associated with <emphasis role="bold">pkey</emphasis>. Historically keys using the same
      algorithm could use different OIDs. For example an RSA key could use
      the OIDs corresponding to the NIDs <emphasis role="bold">NID_rsaEncryption</emphasis> (equivalent to <emphasis role="bold">EVP_PKEY_RSA</emphasis>) or <emphasis role="bold">NID_rsa</emphasis> (equivalent to <emphasis role="bold">EVP_PKEY_RSA2</emphasis>). The use of alternative
      non-standard OIDs is now rare so <emphasis role="bold">EVP_PKEY_RSA2</emphasis> et al are not often seen in
      practice.
    </para>
    <para>
      EVP_PKEY_type() returns the underlying type of the NID <emphasis role="bold">type</emphasis>. For example EVP_PKEY_type(EVP_PKEY_RSA2)
      will return <emphasis role="bold">EVP_PKEY_RSA</emphasis>.
    </para>
  </refsection>
  <refsection xml:id="ID-98576cefa0b0dbc644d893e000b74838"><title>NOTES</title>
    <para>
      In accordance with the OpenSSL naming convention the key obtained
      from or assigned to the <emphasis role="bold">pkey</emphasis> using
      the <emphasis role="bold">1</emphasis> functions must be freed as
      well as <emphasis role="bold">pkey</emphasis>.
    </para>
    <para>
      EVP_PKEY_assign_RSA(), EVP_PKEY_assign_DSA(), EVP_PKEY_assign_DH()
      and EVP_PKEY_assign_EC_KEY() are implemented as macros.
    </para>
    <para>
      Most applications wishing to know a key type will simply call
      EVP_PKEY_base_id() and will not care about the actual type: which
      will be identical in almost all cases.
    </para>
    <para>
      Previous versions of this document suggested using
      EVP_PKEY_type(pkey-&gt;type) to determine the type of a key. Since
      <emphasis role="bold">EVP_PKEY</emphasis> is now opaque this is no
      longer possible: the equivalent is EVP_PKEY_base_id(pkey).
    </para>
  </refsection>
  <refsection xml:id="ID-02667d84bd96d5d2e486140e6a8fb371"><title>RETURN VALUES</title>
    <para>
      EVP_PKEY_set1_RSA(), EVP_PKEY_set1_DSA(), EVP_PKEY_set1_DH() and
      EVP_PKEY_set1_EC_KEY() return 1 for success or 0 for failure.
    </para>
    <para>
      EVP_PKEY_get1_RSA(), EVP_PKEY_get1_DSA(), EVP_PKEY_get1_DH() and
      EVP_PKEY_get1_EC_KEY() return the referenced key or <emphasis role="bold">NULL</emphasis> if an error occurred.
    </para>
    <para>
      EVP_PKEY_assign_RSA(), EVP_PKEY_assign_DSA(), EVP_PKEY_assign_DH()
      and EVP_PKEY_assign_EC_KEY() return 1 for success and 0 for failure.
    </para>
    <para>
      EVP_PKEY_base_id(), EVP_PKEY_id() and EVP_PKEY_type() return a key
      type or <emphasis role="bold">NID_undef</emphasis> (equivalently
      <emphasis role="bold">EVP_PKEY_NONE</emphasis>) on error.
    </para>
  </refsection>
  <refsection xml:id="ID-7b6a4073a82a97d90ad27a16470e425e"><title>SEE ALSO</title>
    <para>
      <citerefentry> <refentrytitle>EVP_PKEY_new</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>
    </para>
  </refsection>
</refentry>