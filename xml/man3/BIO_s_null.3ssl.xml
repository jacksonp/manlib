<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>BIO_s_null.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>BIO_s_null</refname>
<refpurpose>null data sink</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis>#include &lt;openssl/bio.h&gt;</synopsis>
<synopsis>const BIO_METHOD *     BIO_s_null(void);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="ID-711308299e7812940961a6a4cb6a2329"><title>DESCRIPTION</title>
    <para>
      BIO_s_null() returns the null sink BIO method. Data written to the
      null sink is discarded, reads return EOF.
    </para>
  </refsection>
  <refsection xml:id="ID-0444558c192ab7d457470062d6437e9a"><title>NOTES</title>
    <para>
      A null sink BIO behaves in a similar manner to the Unix /dev/null
      device.
    </para>
    <para>
      A null bio can be placed on the end of a chain to discard any data
      passed through it.
    </para>
    <para>
      A null sink is useful if, for example, an application wishes to
      digest some data by writing through a digest bio but not send the
      digested data anywhere. Since a BIO chain must normally include a
      source/sink BIO this can be achieved by adding a null sink BIO to the
      end of the chain
    </para>
  </refsection>
  <refsection xml:id="ID-48cb3b9b6a2dd86995093317a972e80c"><title>RETURN VALUES</title>
    <para>
      BIO_s_null() returns the null sink BIO method.
    </para>
  </refsection>
  <refsection xml:id="ID-013f3192cf26cb7c9f77a18b2f4b912c"><title>SEE ALSO</title>
    <para>
      TBA
    </para>
  </refsection>
</refentry>