<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0">
  <refmeta>
    <refentrytitle>OCSP_sendreq_new.pod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname>OCSP_sendreq_new, OCSP_sendreq_nbio, OCSP_REQ_CTX_free,
OCSP_set_max_response_length, OCSP_REQ_CTX_add1_header,
OCSP_REQ_CTX_set1_req, OCSP_sendreq_bio</refname>
<refpurpose>OCSP responder query functions</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
<synopsis>#include &lt;openssl/ocsp.h&gt;</synopsis>
<synopsis>OCSP_REQ_CTX *OCSP_sendreq_new(BIO *io, const char *path, OCSP_REQUEST *req,
                               int maxline);</synopsis>
<synopsis>int OCSP_sendreq_nbio(OCSP_RESPONSE **presp, OCSP_REQ_CTX *rctx);</synopsis>
<synopsis>void OCSP_REQ_CTX_free(OCSP_REQ_CTX *rctx);</synopsis>
<synopsis>void OCSP_set_max_response_length(OCSP_REQ_CTX *rctx, unsigned long len);</synopsis>
<synopsis>int OCSP_REQ_CTX_add1_header(OCSP_REQ_CTX *rctx,
                             const char *name, const char *value);</synopsis>
<synopsis>int OCSP_REQ_CTX_set1_req(OCSP_REQ_CTX *rctx, OCSP_REQUEST *req);</synopsis>
<synopsis>OCSP_RESPONSE *OCSP_sendreq_bio(BIO *io, const char *path, OCSP_REQUEST *req,
                                int maxline);</synopsis>
  </refsynopsisdiv>
  <refsection xml:id="ID-83fd802045e02543424a06a5e82d0a6f"><title>DESCRIPTION</title>
    <para>
      The function OCSP_sendreq_new() returns an <emphasis role="bold">OCSP_CTX</emphasis> structure using the responder
      <emphasis role="bold">io</emphasis>, the URL path <emphasis role="bold">path</emphasis>, the OCSP request <emphasis role="bold">req</emphasis> and with a response header maximum line
      length of <emphasis role="bold">maxline</emphasis>. If <emphasis role="bold">maxline</emphasis> is zero a default value of 4k is used.
      The OCSP request <emphasis role="bold">req</emphasis> may be set to
      <emphasis role="bold">NULL</emphasis> and provided later if required.
    </para>
    <para>
      OCSP_sendreq_nbio() performs non-blocking I/O on the OCSP request
      context <emphasis role="bold">rctx</emphasis>. When the operation is
      complete it returns the response in <emphasis role="bold">*presp</emphasis>.
    </para>
    <para>
      OCSP_REQ_CTX_free() frees up the OCSP context <emphasis role="bold">rctx</emphasis>.
    </para>
    <para>
      OCSP_set_max_response_length() sets the maximum response length for
      <emphasis role="bold">rctx</emphasis> to <emphasis role="bold">len</emphasis>. If the response exceeds this length an
      error occurs. If not set a default value of 100k is used.
    </para>
    <para>
      OCSP_REQ_CTX_add1_header() adds header <emphasis role="bold">name</emphasis> with value <emphasis role="bold">value</emphasis> to the context <emphasis role="bold">rctx</emphasis>. It can be called more than once to add
      multiple headers. It <emphasis role="bold">MUST</emphasis> be called
      before any calls to OCSP_sendreq_nbio(). The <emphasis role="bold">req</emphasis> parameter in the initial to
      OCSP_sendreq_new() call MUST be set to <emphasis role="bold">NULL</emphasis> if additional headers are set.
    </para>
    <para>
      OCSP_REQ_CTX_set1_req() sets the OCSP request in <emphasis role="bold">rctx</emphasis> to <emphasis role="bold">req</emphasis>.
      This function should be called after any calls to
      OCSP_REQ_CTX_add1_header().
    </para>
    <para>
      OCSP_sendreq_bio() performs an OCSP request using the responder
      <emphasis role="bold">io</emphasis>, the URL path <emphasis role="bold">path</emphasis>, the OCSP request <emphasis role="bold">req</emphasis> and with a response header maximum line
      length of <emphasis role="bold">maxline</emphasis>. If <emphasis role="bold">maxline</emphasis> is zero a default value of 4k is used.
    </para>
  </refsection>
  <refsection xml:id="ID-765388870d78d536449fbf6462bb283f"><title>RETURN VALUES</title>
    <para>
      OCSP_sendreq_new() returns a valid <emphasis role="bold">OCSP_REQ_CTX</emphasis> structure or <emphasis role="bold">NULL</emphasis> if an error occurred.
    </para>
    <para>
      OCSP_sendreq_nbio() returns <emphasis role="bold">1</emphasis> if the
      operation was completed successfully, <emphasis role="bold">-1</emphasis> if the operation should be retried and
      <emphasis role="bold">0</emphasis> if an error occurred.
    </para>
    <para>
      OCSP_REQ_CTX_add1_header() and OCSP_REQ_CTX_set1_req() return
      <emphasis role="bold">1</emphasis> for success and <emphasis role="bold">0</emphasis> for failure.
    </para>
    <para>
      OCSP_sendreq_bio() returns the <emphasis role="bold">OCSP_RESPONSE</emphasis> structure sent by the responder
      or <emphasis role="bold">NULL</emphasis> if an error occurred.
    </para>
    <para>
      OCSP_REQ_CTX_free() and OCSP_set_max_response_length() do not return
      values.
    </para>
  </refsection>
  <refsection xml:id="ID-fe36593644c5a54dfa53df7fd17b305d"><title>NOTES</title>
    <para>
      These functions only perform a minimal HTTP query to a responder. If
      an application wishes to support more advanced features it should use
      an alternative more complete HTTP library.
    </para>
    <para>
      Currently only HTTP POST queries to responders are supported.
    </para>
    <para>
      The arguments to OCSP_sendreq_new() correspond to the components of
      the URL. For example if the responder URL is <emphasis role="bold">http://ocsp.com/ocspreq</emphasis> the BIO <emphasis role="bold">io</emphasis> should be connected to host <emphasis role="bold">ocsp.com</emphasis> on port 80 and <emphasis role="bold">path</emphasis> should be set to <emphasis role="bold">"/ocspreq"</emphasis>
    </para>
    <para>
      The headers added with OCSP_REQ_CTX_add1_header() are of the form
      "<emphasis role="bold">name</emphasis>: <emphasis role="bold">value</emphasis>" or just "<emphasis role="bold">name</emphasis>" if <emphasis role="bold">value</emphasis> is <emphasis role="bold">NULL</emphasis>. So to add a Host header for <emphasis role="bold">ocsp.com</emphasis> you would call:
    </para>
    <screen>OCSP_REQ_CTX_add1_header(ctx, "Host", "ocsp.com");</screen>
    <para>
      If OCSP_sendreq_nbio() indicates an operation should be retried the
      corresponding BIO can be examined to determine which operation (read
      or write) should be retried and appropriate action taken (for example
      a select() call on the underlying socket).
    </para>
    <para>
      OCSP_sendreq_bio() does not support retries and so cannot handle
      non-blocking I/O efficiently. It is retained for compatibility and
      its use in new applications is not recommended.
    </para>
  </refsection>
  <refsection xml:id="ID-12676fb39cd1a23361564f47bc13285e"><title>SEE ALSO</title>
    <para>
      <citerefentry> <refentrytitle>crypto</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>OCSP_cert_to_id</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>OCSP_request_add1_nonce</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>OCSP_REQUEST_new</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>OCSP_response_find_status</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>, <citerefentry>
      <refentrytitle>OCSP_response_status</refentrytitle>
      <manvolnum>3</manvolnum> </citerefentry>
    </para>
  </refsection>
</refentry>