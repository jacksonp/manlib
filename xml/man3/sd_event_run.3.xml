<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="sd_event_run">

  <info>
    
    <productname>systemd</productname>

    <authorgroup>
      <author><personname><firstname>Tom</firstname><surname>Gundersen</surname></personname><contrib>Developer</contrib><email>teg@jklm.no</email></author>
    </authorgroup>
  </info>

  <refmeta>
    <refentrytitle>sd_event_run</refentrytitle>
    <manvolnum>3</manvolnum>
  </refmeta>

  <refnamediv>
    <refname>sd_event_run</refname>
    <refname>sd_event_loop</refname>

    <refpurpose>Run libsystemd event loop</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <funcsynopsis>
      <funcsynopsisinfo>#include &lt;systemd/sd-event.h&gt;</funcsynopsisinfo>

      <funcprototype>
        <funcdef>int <function>sd_event_run</function></funcdef>
        <paramdef>sd_event *<parameter>event</parameter></paramdef>
        <paramdef>uint64_t <parameter>timeout</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>int <function>sd_event_loop</function></funcdef>
        <paramdef>sd_event *<parameter>event</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Description</title>

    <para><function>sd_event_run()</function> can be used to run one
    iteration of the event loop of libsystemd. This function waits
    until an event to process is available and dispatches a handler
    for it. Parameter <parameter>timeout</parameter> specifices the
    maximum time (in microseconds) to wait. <constant>(uint64_t)
    -1</constant> may be used to specify an infinite timeout.</para>

    <para><function>sd_event_loop</function> runs
    <function>sd_event_wait</function> in a loop with a timeout of
    infinity. This makes it suitable for the main event loop of a
    program.</para>

    <para>The event loop object <parameter>event</parameter> is
    created with
    <function>sd_event_new</function>.
    Events to wait for and their handlers can be registered with
    <function>sd_event_add_time</function>,
    <function>sd_event_add_child</function>,
    <function>sd_event_add_signal</function>,
    <function>sd_event_add_defer</function>,
    <function>sd_event_add_exit</function>,
    and
    <function>sd_event_add_post</function>.
    </para>

    <para>For more fine-grained control,
    <function>sd_event_prepare</function>,
    <function>sd_event_wait</function>, and
    <function>sd_event_dispatch</function> may be used. Along with
    <function>sd_event_get_fd</function>, those functions make it
    possible to integrate the libsystemd loop inside of another event
    loop.</para>
  </refsect1>

  <refsect1>
    <title>Return Value</title>

    <para>On success, these functions return 0 or a positive integer.
    On failure, they return a negative errno-style error code.
    <function>sd_event_run</function> returns 0 if the event loop is
    finished, and a positive value if it can be continued.</para>
  </refsect1>

  <refsect1>
    <title>Errors</title>

    <para>Returned errors may indicate the following problems:</para>

    <variablelist>
      <varlistentry>
        <term><constant>-EINVAL</constant></term>

        <listitem><para>Parameter <parameter>event</parameter> is
        <constant>NULL</constant>.</para></listitem>
      </varlistentry>

      <varlistentry>
        <term><constant>-EBUSY</constant></term>

        <listitem><para>The event loop object is not in the right
        state (see
        <citerefentry><refentrytitle>sd_event_prepare</refentrytitle><manvolnum>3</manvolnum></citerefentry>
        for an explanation of possible states).</para></listitem>
      </varlistentry>

      <varlistentry>
        <term><constant>-ESTALE</constant></term>

        <listitem><para>The event loop is already terminated.</para></listitem>

      </varlistentry>

      <varlistentry>
        <term><constant>-ECHILD</constant></term>

        <listitem><para>The event loop has been created in a different process.</para></listitem>

      </varlistentry>

    </variablelist>

    <para>Other errors are possible too.</para>
  </refsect1>

  <refsect1>
    <title>Notes</title>

    <para><function>sd_event_run()</function> and
    <function>sd_event_loop()</function> are available
    as a shared library, which can be compiled and linked to with the
    <constant>libsystemd</constant>Â <citerefentry project="die-net"><refentrytitle>pkg-config</refentrytitle><manvolnum>1</manvolnum></citerefentry>
    file.</para>
  </refsect1>

  <refsect1>
    <title>See Also</title>

    <para>
      <citerefentry><refentrytitle>systemd</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>sd_event_new</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>sd_event_wait</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>sd_event_add_io</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>sd_event_add_time</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>sd_event_add_signal</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>sd_event_add_defer</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>sd_event_add_exit</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>sd_event_add_post</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
      <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://developer.gnome.org/glib/unstable/glib-The-Main-Event-Loop.html">GLIb Main Event Loop</link>.
    </para>
  </refsect1>

</refentry>