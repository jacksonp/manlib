<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="ostree">

    <info>
        
        <productname>rofiles-fuse</productname>

        <authorgroup>
            <author><personname><firstname>Colin</firstname><surname>Walters</surname></personname><contrib>Developer</contrib><email>walters@verbum.org</email></author>
        </authorgroup>
    </info>

    <refmeta>
        <refentrytitle>rofiles-fuse</refentrytitle>
        <manvolnum>1</manvolnum>
    </refmeta>

    <refnamediv>
        <refname>rofiles-fuse</refname>
        <refpurpose>Use FUSE to create a view where directories are writable, files are immutable</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <cmdsynopsis sepchar=" ">
        <command>rofiles-fuse SRCDIR MNTPOINT</command>
      </cmdsynopsis>
    </refsynopsisdiv>

    <refsect1>
        <title>Description</title>

        <para>
	  Creating a checkout from an OSTree repository by default
	  uses hard links, which means an in-place mutation to any
	  file corrupts the repository and all checkouts.  This can be
	  problematic if one wishes to run arbitrary programs against
	  such a checkout.  For example, RPM <literal>%post</literal>
	  scripts or equivalent.
	</para>

	<para>
	  In the case where one wants to create a tree commit derived
	  from other content, using <command>rofiles-fuse</command> in
	  concert with <command>ostree commit
	  --link-checkout-speedup</command> (or the underlying API)
	  can ensure that only new files are checksummed.
	</para>
	  
    </refsect1>

    <refsect1>
        <title>Example: Update an OSTree commit</title>
	<programlisting>
# Initialize a checkout and mount
$ ostree --repo=repo checkout somebranch branch-checkout
$ mkdir mnt
$ rofiles-fuse branch-checkout mnt

# Now, arbitrary changes to mnt/ are reflected in branch-checkout
$ echo somenewcontent &gt; mnt/anewfile
$ mkdir mnt/anewdir
$ rm mnt/someoriginalcontent -rf

# Commit and cleanup
$ fusermount -u mnt
$ ostree --repo=repo commit --link-checkout-speedup -b somebranch -s 'Commit new content' --tree=dir=branch-checkout
$ rm mnt branch-checkout -rf
	</programlisting>
    </refsect1>

    <refsect1>
        <title>See Also</title>
        <para>
            <citerefentry><refentrytitle>ostree</refentrytitle><manvolnum>1</manvolnum></citerefentry>
        </para>
    </refsect1>
</refentry>