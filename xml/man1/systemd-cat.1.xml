<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="systemd-cat">

  <info>
    
    <productname>systemd</productname>

    <authorgroup>
      <author><personname><firstname>Lennart</firstname><surname>Poettering</surname></personname><contrib>Developer</contrib><email>lennart@poettering.net</email></author>
    </authorgroup>
  </info>

  <refmeta>
    <refentrytitle>systemd-cat</refentrytitle>
    <manvolnum>1</manvolnum>
  </refmeta>

  <refnamediv>
    <refname>systemd-cat</refname>
    <refpurpose>Connect a pipeline or program's output with the journal</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <cmdsynopsis sepchar=" ">
      <command>systemd-cat <arg choice="opt" rep="repeat">OPTIONS</arg> <arg choice="opt" rep="norepeat">COMMAND</arg> <arg choice="opt" rep="repeat">ARGUMENTS</arg></command>
    </cmdsynopsis>
    <cmdsynopsis sepchar=" ">
      <command>systemd-cat <arg choice="opt" rep="repeat">OPTIONS</arg></command>
    </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Description</title>

    <para><command>systemd-cat</command> may be used to connect the
    standard input and output of a process to the journal, or as a
    filter tool in a shell pipeline to pass the output the previous
    pipeline element generates to the journal.</para>

    <para>If no parameter is passed, <command>systemd-cat</command>
    will write everything it reads from standard input (stdin) to the
    journal.</para>

    <para>If parameters are passed, they are executed as command line
    with standard output (stdout) and standard error output (stderr)
    connected to the journal, so that all it writes is stored in the
    journal.</para>
  </refsect1>

  <refsect1>
    <title>Options</title>

    <para>The following options are understood:</para>

    <variablelist>
      <varlistentry xml:id="help">
    <term><option>-h</option></term>
    <term><option>--help</option></term>

    <listitem xml:id="help-text">
      <para>Print a short help text and exit.
    </para></listitem>
  </varlistentry>
      <varlistentry xml:id="version">
    <term><option>--version</option></term>

    <listitem xml:id="version-text">
      <para>Print a short version string and exit.</para>
    </listitem>
  </varlistentry>

      <varlistentry>
        <term><option>-t</option></term>
        <term><option>--identifier=</option></term>

        <listitem><para>Specify a short string that is used to
        identify the logging tool. If not specified, no identification
        string is written to the journal.</para></listitem>
      </varlistentry>

      <varlistentry>
        <term><option>-p</option></term>
        <term><option>--priority=</option></term>

        <listitem><para>Specify the default priority level for the
        logged messages. Pass one of
        <literal>emerg</literal>,
        <literal>alert</literal>,
        <literal>crit</literal>,
        <literal>err</literal>,
        <literal>warning</literal>,
        <literal>notice</literal>,
        <literal>info</literal>,
        <literal>debug</literal>, or a
        value between 0 and 7 (corresponding to the same named
        levels). These priority values are the same as defined by
        <citerefentry project="man-pages"><refentrytitle>syslog</refentrytitle><manvolnum>3</manvolnum></citerefentry>.
        Defaults to <literal>info</literal>. Note that this simply
        controls the default, individual lines may be logged with
        different levels if they are prefixed accordingly. For details
        see <option>--level-prefix=</option> below.</para></listitem>
      </varlistentry>

      <varlistentry>
        <term><option>--level-prefix=</option></term>

        <listitem><para>Controls whether lines read are parsed for
        syslog priority level prefixes. If enabled (the default), a
        line prefixed with a priority prefix such as
        <literal>&lt;5&gt;</literal> is logged at priority 5
        (<literal>notice</literal>), and similar for the other
        priority levels. Takes a boolean argument.</para></listitem>
      </varlistentry>

    </variablelist>

  </refsect1>

  <refsect1>
    <title>Exit status</title>

    <para>On success, 0 is returned, a non-zero failure code
    otherwise.</para>
  </refsect1>

  <refsect1>
    <title>Examples</title>

    <example>
      <title>Invoke a program</title>

      <para>This calls <filename noindex="true">/bin/ls</filename>
      with standard output and error connected to the journal:</para>

      <programlisting># systemd-cat ls</programlisting>
    </example>

    <example>
      <title>Usage in a shell pipeline</title>

      <para>This builds a shell pipeline also invoking
      <filename>/bin/ls</filename> and writes the output it generates
      to the journal:</para>

      <programlisting># ls | systemd-cat</programlisting>
    </example>

    <para>Even though the two examples have very similar effects the
    first is preferable since only one process is running at a time,
    and both stdout and stderr are captured while in the second
    example, only stdout is captured.</para>
  </refsect1>

  <refsect1>
    <title>See Also</title>
    <para>
      <citerefentry><refentrytitle>systemd</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>systemctl</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>logger</refentrytitle><manvolnum>1</manvolnum></citerefentry>
    </para>
  </refsect1>

</refentry>