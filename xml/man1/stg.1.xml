<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<?asciidoc-toc?>
<?asciidoc-numbered?>
<refentry>
<refmeta>
<refentrytitle>stg</refentrytitle>
<manvolnum>1</manvolnum>
<refmiscinfo class="source">StGit</refmiscinfo>
<refmiscinfo class="manual">StGit Manual</refmiscinfo>
</refmeta>
<refnamediv>
  <refname>stg</refname>
  <refpurpose>Manage stacks of patches using the Git content tracker</refpurpose>
</refnamediv>
<refsynopsisdiv id="_synopsis">
<blockquote>
<literallayout><emphasis>stg</emphasis> [--version | --help]
<emphasis>stg</emphasis> [--help &lt;command&gt; | &lt;command&gt; --help]
<emphasis>stg</emphasis> &lt;command&gt; [COMMAND OPTIONS] [ARGS]</literallayout>
</blockquote>
</refsynopsisdiv>
<refsect1 id="_description">
<title>DESCRIPTION</title>
<simpara>StGit (Stacked Git) is an application that provides a convenient way
to maintain a <emphasis>patch stack</emphasis> on top of a Git branch:</simpara>
<itemizedlist>
<listitem>
<simpara>
The topmost (most recent) commits of a branch are given names.
    Such a named commit is called a <emphasis>patch</emphasis>.
</simpara>
</listitem>
<listitem>
<simpara>
After making changes to the worktree, you can incorporate the
    changes into an existing patch; this is called <emphasis>refreshing</emphasis>. You
    may refresh any patch, not just the topmost one.
</simpara>
</listitem>
<listitem>
<simpara>
You can <emphasis>pop</emphasis> a patch: temporarily putting it aside, so that the
    patch below it becomes the topmost patch. Later you may <emphasis>push</emphasis> it
    onto the stack again. Pushing and popping can be used to reorder
    patches.
</simpara>
</listitem>
<listitem>
<simpara>
You can easily <emphasis>rebase</emphasis> your patch stack on top of any other Git
    commit. (The <emphasis>base</emphasis> of a patch stack is the most recent Git commit
    that is not an StGit patch.) For example, if you started making
    patches on top of someone else&#8217;s branch, and that person publishes
    an updated branch, you can take all your patches and apply them on
    top of the updated branch.
</simpara>
</listitem>
<listitem>
<simpara>
As you would expect, changing what is below a patch can cause that
    patch to no longer apply cleanly&#8201;&#8212;&#8201;this can occur when you
    reorder patches, rebase patches, or refresh a non-topmost patch.
    StGit uses Git&#8217;s rename-aware three-way merge capability to
    automatically fix up what it can; if it still fails, it lets you
    manually resolve the conflict just like you would resolve a merge
    conflict in Git.
</simpara>
</listitem>
<listitem>
<simpara>
The patch stack is just some extra metadata attached to regular
    Git commits, so you can continue to use most Git tools along with
    StGit.
</simpara>
</listitem>
</itemizedlist>
<refsect2 id="_typical_uses">
<title>Typical uses</title>
<variablelist>
<varlistentry>
<term>
Tracking branch
</term>
<listitem>
<simpara>
  Tracking changes from a remote branch, while maintaining local
  modifications against that branch, possibly with the intent of
  sending some patches upstream. You can modify your patch stack as
  much as you want, and when your patches are finally accepted
  upstream, the permanent recorded Git history will contain just the
  final sequence of patches, and not the messy sequence of edits that
  produced them.
</simpara>
<simpara>Commands of interest in this workflow are e.g. rebase and
mail.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Development branch
</term>
<listitem>
<simpara>
  Even if you have no "upstream" to send patches to, you can use StGit
  as a convenient way to modify the recent history of a Git branch.
  For example, instead of first committing change <emphasis>A</emphasis>, then change
  <emphasis>B</emphasis>, and then <emphasis>A2</emphasis> to fix <emphasis>A</emphasis> because it wasn&#8217;t quite right, you
  could incorporate the fix directly into <emphasis>A</emphasis>. This way of working
  results in a much more readable Git history than if you had
  immortalized every misstep you made on your way to the right
  solution.
</simpara>
<simpara>Commands of interest in this workflow are e.g. uncommit,
which can be used to move the patch stack base downwards&#8201;&#8212;&#8201;i.e., turn
Git commits into StGit patches after the fact&#8201;&#8212;&#8201;and
commit, its inverse.</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>For more information, see <ulink url="tutorial.html">the tutorial</ulink>.</simpara>
</refsect2>
<refsect2 id="_specifying_patches">
<title>Specifying patches</title>
<simpara>Many StGit commands take references to StGit patches as arguments.
Patches in the stack are identified with short names, each of which
must be unique in the stack.</simpara>
<simpara>Patches in the current branch are simply referred to by their name.
Some commands allow you to specify a patch in another branch of the
repository; this is done by prefixing the patch name with the branch
name and a colon (e.g. <literal>otherbranch:thatpatch</literal>).</simpara>
</refsect2>
<refsect2 id="_specifying_commits">
<title>Specifying commits</title>
<simpara>Some StGit commands take Git commits as arguments. StGit accepts all
commit expressions that Git does; and in addition, a patch name
(optionally prefixed by a branch name and a colon) is allowed in this
context. The usual Git modifiers ^ and ~ are also allowed;
e.g., <literal>abranch:apatch~2</literal> is the grandparent of the commit that is the
patch <literal>apatch</literal> on branch <literal>abranch</literal>.</simpara>
<simpara>Instead of a patch name, you can say <literal>{base}</literal> to refer to the
stack base (the commit just below the bottommost patch); so,
<literal>abranch:{base}</literal> is the base of the stack in branch <literal>abranch</literal>.</simpara>
<simpara>If you need to pass a given StGit reference to a Git command,
<citerefentry>
  <refentrytitle>stg-id</refentrytitle><manvolnum>1</manvolnum>
</citerefentry> will convert it to a Git commit id for you.</simpara>
</refsect2>
</refsect1>
<refsect1 id="_options">
<title>OPTIONS</title>
<simpara>The following generic option flags are available. Additional options
are available for (and documented with) the different subcommands.</simpara>
<variablelist>
<varlistentry>
<term>
--version
</term>
<listitem>
<simpara>
  Prints the StGit version, as well as version of other components
  used, such as Git and Python.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
--help
</term>
<listitem>
<simpara>
  Prints the synopsis and a list of all subcommands. If an StGit
  subcommand is given, prints the synposis for that subcommand.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</refsect1>
<refsect1 id="_stgit_commands">
<title>STGIT COMMANDS</title>
<simpara>We divide StGit commands in thematic groups, according to the primary
type of object they create or change.</simpara>
<simpara>Here is a short description of each command. A more detailed
description is available in individual command manpages.  Those
manpages are named <emphasis>stg-&lt;command&gt;(1)</emphasis>.</simpara>
<refsect2 id="_repository_commands">
<title>Repository commands</title>
<variablelist>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-clone</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Make a local clone of a remote repository
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-id</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Print the git hash value of a StGit reference
</simpara>
</listitem>
</varlistentry>
</variablelist>
</refsect2>
<refsect2 id="_stack_branch_commands">
<title>Stack (branch) commands</title>
<variablelist>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-branch</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Branch operations: switch, list, create, rename, delete, &#8230;
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-clean</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Delete the empty patches in the series
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-commit</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Permanently store the applied patches into the stack base
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-float</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Push patches to the top, even if applied
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-goto</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Push or pop patches to the given one
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-hide</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Hide a patch in the series
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-init</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Initialise the current branch for use with StGIT
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-log</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Display the patch changelog
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-next</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Print the name of the next patch
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-patches</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Show the applied patches modifying a file
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-pop</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Pop one or more patches from the stack
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-prev</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Print the name of the previous patch
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-publish</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Push the stack changes to a merge-friendly branch
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-pull</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Pull changes from a remote repository
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-push</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Push one or more patches onto the stack
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-rebase</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Move the stack base to another point in history
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-redo</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Undo the last undo operation
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-repair</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Fix StGit metadata if branch was modified with git commands
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-reset</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Reset the patch stack to an earlier state
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-series</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Print the patch series
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-sink</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Send patches deeper down the stack
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-squash</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Squash two or more patches into one
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-top</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Print the name of the top patch
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-uncommit</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Turn regular git commits into StGit patches
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-undo</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Undo the last operation
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-unhide</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Unhide a hidden patch
</simpara>
</listitem>
</varlistentry>
</variablelist>
</refsect2>
<refsect2 id="_patch_commands">
<title>Patch commands</title>
<variablelist>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-delete</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Delete patches
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-edit</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Edit a patch description or diff
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-export</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Export patches to a directory
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-files</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Show the files modified by a patch (or the current patch)
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-fold</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Integrate a GNU diff patch into the current patch
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-import</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Import a GNU diff file as a new patch
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-mail</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Send a patch or series of patches by e-mail
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-new</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Create a new, empty patch
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-pick</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Import a patch from a different branch or a commit object
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-refresh</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Generate a new commit for the current patch
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-rename</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Rename a patch
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-show</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Show the commit corresponding to a patch
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-sync</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Synchronise patches with a branch or a series
</simpara>
</listitem>
</varlistentry>
</variablelist>
</refsect2>
<refsect2 id="_index_worktree_commands">
<title>Index/worktree commands</title>
<variablelist>
<varlistentry>
<term>
<citerefentry>
  <refentrytitle>stg-diff</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
    Show the tree diff
</simpara>
</listitem>
</varlistentry>
</variablelist>
</refsect2>
</refsect1>
<refsect1 id="_configuration_mechanism">
<title>CONFIGURATION MECHANISM</title>
<simpara>StGit uses the same configuration mechanism as Git. See <citerefentry>
<refentrytitle>git</refentrytitle><manvolnum>7</manvolnum>
</citerefentry>
for more details.</simpara>
</refsect1>
<refsect1 id="_templates">
<title>TEMPLATES</title>
<simpara>A number of StGit commands make use of template files to provide
useful default texts to be edited by the user. These <literal>&lt;name&gt;.tmpl</literal>
template files are searched in the following directories:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>
<literal>$GITDIR/</literal> (in practice, the <literal>.git/</literal> directory in your repository)
</simpara>
</listitem>
<listitem>
<simpara>
<literal>$HOME/.stgit/templates/</literal>
</simpara>
</listitem>
<listitem>
<simpara>
<literal>/usr/share/stgit/templates/</literal>
</simpara>
</listitem>
</orderedlist>
</refsect1>
</refentry>
