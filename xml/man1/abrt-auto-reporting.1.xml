<!-- Converted by db4-upgrade version 1.1 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:lang="en">
<info>
    
</info>
<refmeta>
<refentrytitle>abrt-auto-reporting</refentrytitle>
<manvolnum>1</manvolnum>
<refmiscinfo class="source"> </refmiscinfo>
<refmiscinfo class="manual"> </refmiscinfo>
</refmeta>
<refnamediv>
    <refname>abrt-auto-reporting</refname>
    <refpurpose>Get or modify the auto reporting option values</refpurpose>
</refnamediv>
<refsynopsisdiv xml:id="_synopsis">
<simpara><emphasis>abrt-auto-reporting</emphasis> [-v] [ enabled | yes | 1 | on | disabled | no | 0 | off ]
                      [ [--anonymous] |
                        [--username USERNAME [--password PASSWORD] ] |
                        [--certificate SOURCE] ]</simpara>
</refsynopsisdiv>
<refsect1 xml:id="_description">
<title>DESCRIPTION</title>
<simpara>Reads the configuration from abrt.conf and saves the changes to the same file.</simpara>
<simpara>The changes will take effect immediately without necessity to restart any ABRT
process and will be persistent.</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis>disabled</emphasis>
</term>
<listitem>
<simpara>
   User have to report the detect problems manually
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis>enabled</emphasis>
</term>
<listitem>
<simpara>
   ABRT uploads an uReport which was generated for a detected problem
   immediately after the detection phase.
</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>Reads and saves the authentication configuration options in
/etc/libreport/plugins/ureport.conf and /etc/libreport/plugins/rhtsupport.conf</simpara>
<refsect2 xml:id="_ureport_description">
<title>uReport description</title>
<simpara>ABRT supports uReports for four types of crashes: crashes of C/C++ programs
that result in a core dump, uncaught Python exceptions, uncaught Java
exceptions and kernel oopses.</simpara>
<simpara>Each uReport generally contains a stack trace, or multiple stack traces in the
case of multi-threaded C/C++ and Java programs. The stack trace only describes
the call stack of the program at the time of the crash and does not contain
contents of any variables.</simpara>
<simpara>Every uReport also contains identification of the operating system, versions of
the RPM packages involved in the crash, and whether the program ran under a
root user.</simpara>
<simpara>There are also items specific to each crash type:</simpara>
<variablelist>
<varlistentry>
<term>
C/C++ crashes
</term>
<listitem>
<simpara>
    these are path to the executable and signal delivered to the program,
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Python exceptions
</term>
<listitem>
<simpara>
    there is the type of the exception (without the error message, which may
    contain sensitive data),
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
for kernel oopses
</term>
<listitem>
<simpara>
    these are list of loaded kernel modules, list of taint flags, and full text
    of the kernel oops.
</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>The authenticated uReports also contains <emphasis role="strong">hostname</emphasis> and <emphasis role="strong">machineid</emphasis> to enable a
server side filtering at <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://access.redhat.com/">https://access.redhat.com/</link>.</simpara>
<simpara>The authenticated uReports have the benefit of rich server replies which may
include a solution for the submitted crash. The authentication is done using
either Red Hat Subscription Certificates or Red Hat Customer Portal
credentials.</simpara>
<simpara><emphasis>Warning</emphasis>:
The full text of a kernel oops might contain information like the
identification of the host hardware type. You should disable the autoreporting
feature if you do not want to share this information with Red Hat.</simpara>
</refsect2>
</refsect1>
<refsect1 xml:id="_options">
<title>OPTIONS</title>
<variablelist>
<varlistentry>
<term>
-v, --verbose
</term>
<listitem>
<simpara>
   Be more verbose. Can be given multiple times.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
-a, --anonymous
</term>
<listitem>
<simpara>
   Turns the authentication off by clearing both <emphasis>SSLClientAuth</emphasis> and <emphasis>HTTPAuth</emphasis>
   configuration options in /etc/libreport/plugins/ureport.conf
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
-u, --username USERNAME
</term>
<listitem>
<simpara>
   Turns HTTP Authentication on by setting <emphasis>HTTPAuth</emphasis> configuration option to
   <emphasis role="strong">rhts-credentials</emphasis> in /etc/libreport/plugins/ureport.conf and storing
   USERNAME and PASSWORD in /etc/libreport/plugins/rhtsupport.conf
   Also turns the SSL Client Authentication off, because these methods cannot
   be used together.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
-p, --password PASSWORD
</term>
<listitem>
<simpara>
   Password for HTTP Authentication. If not provided, a prompt asking for it
   will be issued.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
-c, --certificate SOURCE
</term>
<listitem>
<simpara>
   Turns SSL Client Authentication on by setting <emphasis>SSLClientAuth</emphasis> configuration
   option to SOURCE in /etc/libreport/plugins/ureport.conf.
   Also turns the HTTP Authentication off, because these methods cannot
   be used together.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</refsect1>
<refsect1 xml:id="_see_also">
<title>SEE ALSO</title>
<simpara>abrt.conf(5), ureport.conf(5), rhtsupport.conf(5)</simpara>
</refsect1>
<refsect1 xml:id="_authors">
<title>AUTHORS</title>
<itemizedlist>
<listitem>
<simpara>
ABRT team
</simpara>
</listitem>
</itemizedlist>
</refsect1>
</refentry>